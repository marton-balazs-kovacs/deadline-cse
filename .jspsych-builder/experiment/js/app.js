/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js");

var TypeError = global.TypeError;

// `Assert: IsCallable(argument) is true`
module.exports = function (argument) {
  if (isCallable(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a function');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-constructor.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-constructor.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js");

var TypeError = global.TypeError;

// `Assert: IsConstructor(argument) is true`
module.exports = function (argument) {
  if (isConstructor(argument)) return argument;
  throw TypeError(tryToString(argument) + ' is not a constructor');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");

var String = global.String;
var TypeError = global.TypeError;

module.exports = function (argument) {
  if (typeof argument == 'object' || isCallable(argument)) return argument;
  throw TypeError("Can't set " + String(argument) + ' as a prototype');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

var UNSCOPABLES = wellKnownSymbol('unscopables');
var ArrayPrototype = Array.prototype;

// Array.prototype[@@unscopables]
// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
if (ArrayPrototype[UNSCOPABLES] == undefined) {
  definePropertyModule.f(ArrayPrototype, UNSCOPABLES, {
    configurable: true,
    value: create(null)
  });
}

// add a key to Array.prototype[@@unscopables]
module.exports = function (key) {
  ArrayPrototype[UNSCOPABLES][key] = true;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").charAt);

// `AdvanceStringIndex` abstract operation
// https://tc39.es/ecma262/#sec-advancestringindex
module.exports = function (S, index, unicode) {
  return index + (unicode ? charAt(S, index).length : 1);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");

var TypeError = global.TypeError;

module.exports = function (it, Prototype) {
  if (isPrototypeOf(Prototype, it)) return it;
  throw TypeError('Incorrect invocation');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var String = global.String;
var TypeError = global.TypeError;

// `Assert: Type(argument) is Object`
module.exports = function (argument) {
  if (isObject(argument)) return argument;
  throw TypeError(String(argument) + ' is not an object');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js ***!
  \**************************************************************************************************************************/
/***/ (function(module) {

// eslint-disable-next-line es/no-typed-arrays -- safe
module.exports = typeof ArrayBuffer != 'undefined' && typeof DataView != 'undefined';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-non-extensible.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-non-extensible.js ***!
  \**********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = fails(function () {
  if (typeof ArrayBuffer == 'function') {
    var buffer = new ArrayBuffer(8);
    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe
    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");

var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var Uint8ClampedArray = global.Uint8ClampedArray;
var Uint8ClampedArrayPrototype = Uint8ClampedArray && Uint8ClampedArray.prototype;
var TypedArray = Int8Array && getPrototypeOf(Int8Array);
var TypedArrayPrototype = Int8ArrayPrototype && getPrototypeOf(Int8ArrayPrototype);
var ObjectPrototype = Object.prototype;
var TypeError = global.TypeError;

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var TYPED_ARRAY_TAG = uid('TYPED_ARRAY_TAG');
var TYPED_ARRAY_CONSTRUCTOR = uid('TYPED_ARRAY_CONSTRUCTOR');
// Fixing native typed arrays in Opera Presto crashes the browser, see #595
var NATIVE_ARRAY_BUFFER_VIEWS = NATIVE_ARRAY_BUFFER && !!setPrototypeOf && classof(global.opera) !== 'Opera';
var TYPED_ARRAY_TAG_REQUIRED = false;
var NAME, Constructor, Prototype;

var TypedArrayConstructorsList = {
  Int8Array: 1,
  Uint8Array: 1,
  Uint8ClampedArray: 1,
  Int16Array: 2,
  Uint16Array: 2,
  Int32Array: 4,
  Uint32Array: 4,
  Float32Array: 4,
  Float64Array: 8
};

var BigIntArrayConstructorsList = {
  BigInt64Array: 8,
  BigUint64Array: 8
};

var isView = function isView(it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return klass === 'DataView'
    || hasOwn(TypedArrayConstructorsList, klass)
    || hasOwn(BigIntArrayConstructorsList, klass);
};

var isTypedArray = function (it) {
  if (!isObject(it)) return false;
  var klass = classof(it);
  return hasOwn(TypedArrayConstructorsList, klass)
    || hasOwn(BigIntArrayConstructorsList, klass);
};

var aTypedArray = function (it) {
  if (isTypedArray(it)) return it;
  throw TypeError('Target is not a typed array');
};

var aTypedArrayConstructor = function (C) {
  if (isCallable(C) && (!setPrototypeOf || isPrototypeOf(TypedArray, C))) return C;
  throw TypeError(tryToString(C) + ' is not a typed array constructor');
};

var exportTypedArrayMethod = function (KEY, property, forced, options) {
  if (!DESCRIPTORS) return;
  if (forced) for (var ARRAY in TypedArrayConstructorsList) {
    var TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && hasOwn(TypedArrayConstructor.prototype, KEY)) try {
      delete TypedArrayConstructor.prototype[KEY];
    } catch (error) {
      // old WebKit bug - some methods are non-configurable
      try {
        TypedArrayConstructor.prototype[KEY] = property;
      } catch (error2) { /* empty */ }
    }
  }
  if (!TypedArrayPrototype[KEY] || forced) {
    redefine(TypedArrayPrototype, KEY, forced ? property
      : NATIVE_ARRAY_BUFFER_VIEWS && Int8ArrayPrototype[KEY] || property, options);
  }
};

var exportTypedArrayStaticMethod = function (KEY, property, forced) {
  var ARRAY, TypedArrayConstructor;
  if (!DESCRIPTORS) return;
  if (setPrototypeOf) {
    if (forced) for (ARRAY in TypedArrayConstructorsList) {
      TypedArrayConstructor = global[ARRAY];
      if (TypedArrayConstructor && hasOwn(TypedArrayConstructor, KEY)) try {
        delete TypedArrayConstructor[KEY];
      } catch (error) { /* empty */ }
    }
    if (!TypedArray[KEY] || forced) {
      // V8 ~ Chrome 49-50 `%TypedArray%` methods are non-writable non-configurable
      try {
        return redefine(TypedArray, KEY, forced ? property : NATIVE_ARRAY_BUFFER_VIEWS && TypedArray[KEY] || property);
      } catch (error) { /* empty */ }
    } else return;
  }
  for (ARRAY in TypedArrayConstructorsList) {
    TypedArrayConstructor = global[ARRAY];
    if (TypedArrayConstructor && (!TypedArrayConstructor[KEY] || forced)) {
      redefine(TypedArrayConstructor, KEY, property);
    }
  }
};

for (NAME in TypedArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
  else NATIVE_ARRAY_BUFFER_VIEWS = false;
}

for (NAME in BigIntArrayConstructorsList) {
  Constructor = global[NAME];
  Prototype = Constructor && Constructor.prototype;
  if (Prototype) createNonEnumerableProperty(Prototype, TYPED_ARRAY_CONSTRUCTOR, Constructor);
}

// WebKit bug - typed arrays constructors prototype is Object.prototype
if (!NATIVE_ARRAY_BUFFER_VIEWS || !isCallable(TypedArray) || TypedArray === Function.prototype) {
  // eslint-disable-next-line no-shadow -- safe
  TypedArray = function TypedArray() {
    throw TypeError('Incorrect invocation');
  };
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME], TypedArray);
  }
}

if (!NATIVE_ARRAY_BUFFER_VIEWS || !TypedArrayPrototype || TypedArrayPrototype === ObjectPrototype) {
  TypedArrayPrototype = TypedArray.prototype;
  if (NATIVE_ARRAY_BUFFER_VIEWS) for (NAME in TypedArrayConstructorsList) {
    if (global[NAME]) setPrototypeOf(global[NAME].prototype, TypedArrayPrototype);
  }
}

// WebKit bug - one more object in Uint8ClampedArray prototype chain
if (NATIVE_ARRAY_BUFFER_VIEWS && getPrototypeOf(Uint8ClampedArrayPrototype) !== TypedArrayPrototype) {
  setPrototypeOf(Uint8ClampedArrayPrototype, TypedArrayPrototype);
}

if (DESCRIPTORS && !hasOwn(TypedArrayPrototype, TO_STRING_TAG)) {
  TYPED_ARRAY_TAG_REQUIRED = true;
  defineProperty(TypedArrayPrototype, TO_STRING_TAG, { get: function () {
    return isObject(this) ? this[TYPED_ARRAY_TAG] : undefined;
  } });
  for (NAME in TypedArrayConstructorsList) if (global[NAME]) {
    createNonEnumerableProperty(global[NAME], TYPED_ARRAY_TAG, NAME);
  }
}

module.exports = {
  NATIVE_ARRAY_BUFFER_VIEWS: NATIVE_ARRAY_BUFFER_VIEWS,
  TYPED_ARRAY_CONSTRUCTOR: TYPED_ARRAY_CONSTRUCTOR,
  TYPED_ARRAY_TAG: TYPED_ARRAY_TAG_REQUIRED && TYPED_ARRAY_TAG,
  aTypedArray: aTypedArray,
  aTypedArrayConstructor: aTypedArrayConstructor,
  exportTypedArrayMethod: exportTypedArrayMethod,
  exportTypedArrayStaticMethod: exportTypedArrayStaticMethod,
  isView: isView,
  isTypedArray: isTypedArray,
  TypedArray: TypedArray,
  TypedArrayPrototype: TypedArrayPrototype
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js");
var IEEE754 = __webpack_require__(/*! ../internals/ieee754 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ieee754.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f);
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var arrayFill = __webpack_require__(/*! ../internals/array-fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var ARRAY_BUFFER = 'ArrayBuffer';
var DATA_VIEW = 'DataView';
var PROTOTYPE = 'prototype';
var WRONG_LENGTH = 'Wrong length';
var WRONG_INDEX = 'Wrong index';
var NativeArrayBuffer = global[ARRAY_BUFFER];
var $ArrayBuffer = NativeArrayBuffer;
var ArrayBufferPrototype = $ArrayBuffer && $ArrayBuffer[PROTOTYPE];
var $DataView = global[DATA_VIEW];
var DataViewPrototype = $DataView && $DataView[PROTOTYPE];
var ObjectPrototype = Object.prototype;
var Array = global.Array;
var RangeError = global.RangeError;
var fill = uncurryThis(arrayFill);
var reverse = uncurryThis([].reverse);

var packIEEE754 = IEEE754.pack;
var unpackIEEE754 = IEEE754.unpack;

var packInt8 = function (number) {
  return [number & 0xFF];
};

var packInt16 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF];
};

var packInt32 = function (number) {
  return [number & 0xFF, number >> 8 & 0xFF, number >> 16 & 0xFF, number >> 24 & 0xFF];
};

var unpackInt32 = function (buffer) {
  return buffer[3] << 24 | buffer[2] << 16 | buffer[1] << 8 | buffer[0];
};

var packFloat32 = function (number) {
  return packIEEE754(number, 23, 4);
};

var packFloat64 = function (number) {
  return packIEEE754(number, 52, 8);
};

var addGetter = function (Constructor, key) {
  defineProperty(Constructor[PROTOTYPE], key, { get: function () { return getInternalState(this)[key]; } });
};

var get = function (view, count, index, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = arraySlice(bytes, start, start + count);
  return isLittleEndian ? pack : reverse(pack);
};

var set = function (view, count, index, conversion, value, isLittleEndian) {
  var intIndex = toIndex(index);
  var store = getInternalState(view);
  if (intIndex + count > store.byteLength) throw RangeError(WRONG_INDEX);
  var bytes = getInternalState(store.buffer).bytes;
  var start = intIndex + store.byteOffset;
  var pack = conversion(+value);
  for (var i = 0; i < count; i++) bytes[start + i] = pack[isLittleEndian ? i : count - i - 1];
};

if (!NATIVE_ARRAY_BUFFER) {
  $ArrayBuffer = function ArrayBuffer(length) {
    anInstance(this, ArrayBufferPrototype);
    var byteLength = toIndex(length);
    setInternalState(this, {
      bytes: fill(Array(byteLength), 0),
      byteLength: byteLength
    });
    if (!DESCRIPTORS) this.byteLength = byteLength;
  };

  ArrayBufferPrototype = $ArrayBuffer[PROTOTYPE];

  $DataView = function DataView(buffer, byteOffset, byteLength) {
    anInstance(this, DataViewPrototype);
    anInstance(buffer, ArrayBufferPrototype);
    var bufferLength = getInternalState(buffer).byteLength;
    var offset = toIntegerOrInfinity(byteOffset);
    if (offset < 0 || offset > bufferLength) throw RangeError('Wrong offset');
    byteLength = byteLength === undefined ? bufferLength - offset : toLength(byteLength);
    if (offset + byteLength > bufferLength) throw RangeError(WRONG_LENGTH);
    setInternalState(this, {
      buffer: buffer,
      byteLength: byteLength,
      byteOffset: offset
    });
    if (!DESCRIPTORS) {
      this.buffer = buffer;
      this.byteLength = byteLength;
      this.byteOffset = offset;
    }
  };

  DataViewPrototype = $DataView[PROTOTYPE];

  if (DESCRIPTORS) {
    addGetter($ArrayBuffer, 'byteLength');
    addGetter($DataView, 'buffer');
    addGetter($DataView, 'byteLength');
    addGetter($DataView, 'byteOffset');
  }

  redefineAll(DataViewPrototype, {
    getInt8: function getInt8(byteOffset) {
      return get(this, 1, byteOffset)[0] << 24 >> 24;
    },
    getUint8: function getUint8(byteOffset) {
      return get(this, 1, byteOffset)[0];
    },
    getInt16: function getInt16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return (bytes[1] << 8 | bytes[0]) << 16 >> 16;
    },
    getUint16: function getUint16(byteOffset /* , littleEndian */) {
      var bytes = get(this, 2, byteOffset, arguments.length > 1 ? arguments[1] : undefined);
      return bytes[1] << 8 | bytes[0];
    },
    getInt32: function getInt32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined));
    },
    getUint32: function getUint32(byteOffset /* , littleEndian */) {
      return unpackInt32(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined)) >>> 0;
    },
    getFloat32: function getFloat32(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 4, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 23);
    },
    getFloat64: function getFloat64(byteOffset /* , littleEndian */) {
      return unpackIEEE754(get(this, 8, byteOffset, arguments.length > 1 ? arguments[1] : undefined), 52);
    },
    setInt8: function setInt8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setUint8: function setUint8(byteOffset, value) {
      set(this, 1, byteOffset, packInt8, value);
    },
    setInt16: function setInt16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint16: function setUint16(byteOffset, value /* , littleEndian */) {
      set(this, 2, byteOffset, packInt16, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setInt32: function setInt32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setUint32: function setUint32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packInt32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat32: function setFloat32(byteOffset, value /* , littleEndian */) {
      set(this, 4, byteOffset, packFloat32, value, arguments.length > 2 ? arguments[2] : undefined);
    },
    setFloat64: function setFloat64(byteOffset, value /* , littleEndian */) {
      set(this, 8, byteOffset, packFloat64, value, arguments.length > 2 ? arguments[2] : undefined);
    }
  });
} else {
  var INCORRECT_ARRAY_BUFFER_NAME = PROPER_FUNCTION_NAME && NativeArrayBuffer.name !== ARRAY_BUFFER;
  /* eslint-disable no-new -- required for testing */
  if (!fails(function () {
    NativeArrayBuffer(1);
  }) || !fails(function () {
    new NativeArrayBuffer(-1);
  }) || fails(function () {
    new NativeArrayBuffer();
    new NativeArrayBuffer(1.5);
    new NativeArrayBuffer(NaN);
    return INCORRECT_ARRAY_BUFFER_NAME && !CONFIGURABLE_FUNCTION_NAME;
  })) {
  /* eslint-enable no-new -- required for testing */
    $ArrayBuffer = function ArrayBuffer(length) {
      anInstance(this, ArrayBufferPrototype);
      return new NativeArrayBuffer(toIndex(length));
    };

    $ArrayBuffer[PROTOTYPE] = ArrayBufferPrototype;

    for (var keys = getOwnPropertyNames(NativeArrayBuffer), j = 0, key; keys.length > j;) {
      if (!((key = keys[j++]) in $ArrayBuffer)) {
        createNonEnumerableProperty($ArrayBuffer, key, NativeArrayBuffer[key]);
      }
    }

    ArrayBufferPrototype.constructor = $ArrayBuffer;
  } else if (INCORRECT_ARRAY_BUFFER_NAME && CONFIGURABLE_FUNCTION_NAME) {
    createNonEnumerableProperty(NativeArrayBuffer, 'name', ARRAY_BUFFER);
  }

  // WebKit bug - the same parent prototype for typed arrays and data view
  if (setPrototypeOf && getPrototypeOf(DataViewPrototype) !== ObjectPrototype) {
    setPrototypeOf(DataViewPrototype, ObjectPrototype);
  }

  // iOS Safari 7.x bug
  var testView = new $DataView(new $ArrayBuffer(2));
  var $setInt8 = uncurryThis(DataViewPrototype.setInt8);
  testView.setInt8(0, 2147483648);
  testView.setInt8(1, 2147483649);
  if (testView.getInt8(0) || !testView.getInt8(1)) redefineAll(DataViewPrototype, {
    setInt8: function setInt8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    },
    setUint8: function setUint8(byteOffset, value) {
      $setInt8(this, byteOffset, value << 24 >> 24);
    }
  }, { unsafe: true });
}

setToStringTag($ArrayBuffer, ARRAY_BUFFER);
setToStringTag($DataView, DATA_VIEW);

module.exports = {
  ArrayBuffer: $ArrayBuffer,
  DataView: $DataView
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");

var min = Math.min;

// `Array.prototype.copyWithin` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
// eslint-disable-next-line es/no-array-prototype-copywithin -- safe
module.exports = [].copyWithin || function copyWithin(target /* = 0 */, start /* = 0, end = @length */) {
  var O = toObject(this);
  var len = lengthOfArrayLike(O);
  var to = toAbsoluteIndex(target, len);
  var from = toAbsoluteIndex(start, len);
  var end = arguments.length > 2 ? arguments[2] : undefined;
  var count = min((end === undefined ? len : toAbsoluteIndex(end, len)) - from, len - to);
  var inc = 1;
  if (from < to && to < from + count) {
    inc = -1;
    from += count - 1;
    to += count - 1;
  }
  while (count-- > 0) {
    if (from in O) O[to] = O[from];
    else delete O[to];
    to += inc;
    from += inc;
  } return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill
module.exports = function fill(value /* , start = 0, end = @length */) {
  var O = toObject(this);
  var length = lengthOfArrayLike(O);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);
  while (endPos > index) O[index++] = value;
  return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('forEach');

// `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach
module.exports = !STRICT_METHOD ? function forEach(callbackfn /* , thisArg */) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from-constructor-and-list.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from-constructor-and-list.js ***!
  \**************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");

module.exports = function (Constructor, list) {
  var index = 0;
  var length = lengthOfArrayLike(list);
  var result = new Constructor(length);
  while (length > index) result[index] = list[index++];
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var callWithSafeIterationClosing = __webpack_require__(/*! ../internals/call-with-safe-iteration-closing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/call-with-safe-iteration-closing.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");

var Array = global.Array;

// `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from
module.exports = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {
  var O = toObject(arrayLike);
  var IS_CONSTRUCTOR = isConstructor(this);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined);
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  // if the target is not iterable or it's an array with the default iterator - use a simple case
  if (iteratorMethod && !(this == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    result = IS_CONSTRUCTOR ? new this() : [];
    for (;!(step = call(next, iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = lengthOfArrayLike(O);
    result = IS_CONSTRUCTOR ? new this(length) : Array(length);
    for (;length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }
  result.length = index;
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");

// `Array.prototype.{ indexOf, includes }` methods implementation
var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = lengthOfArrayLike(O);
    var index = toAbsoluteIndex(fromIndex, length);
    var value;
    // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check
    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++];
      // eslint-disable-next-line no-self-compare -- NaN check
      if (value != value) return true;
    // Array#indexOf ignores holes, Array#includes - not
    } else for (;length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    } return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");

var push = uncurryThis([].push);

// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation
var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_REJECT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that);
    var length = lengthOfArrayLike(self);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;
    var value, result;
    for (;length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);
      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
          case 3: return true;              // some
          case 5: return value;             // find
          case 6: return index;             // findIndex
          case 2: push(target, value);      // filter
        } else switch (TYPE) {
          case 4: return false;             // every
          case 7: push(target, value);      // filterReject
        }
      }
    }
    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterReject` method
  // https://github.com/tc39/proposal-array-filtering
  filterReject: createMethod(7)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-lastindexof -- safe */
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var min = Math.min;
var $lastIndexOf = [].lastIndexOf;
var NEGATIVE_ZERO = !!$lastIndexOf && 1 / [1].lastIndexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('lastIndexOf');
var FORCED = NEGATIVE_ZERO || !STRICT_METHOD;

// `Array.prototype.lastIndexOf` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
module.exports = FORCED ? function lastIndexOf(searchElement /* , fromIndex = @[*-1] */) {
  // convert -0 to +0
  if (NEGATIVE_ZERO) return apply($lastIndexOf, this, arguments) || 0;
  var O = toIndexedObject(this);
  var length = lengthOfArrayLike(O);
  var index = length - 1;
  if (arguments.length > 1) index = min(index, toIntegerOrInfinity(arguments[1]));
  if (index < 0) index = length + index;
  for (;index >= 0; index--) if (index in O && O[index] === searchElement) return index || 0;
  return -1;
} : $lastIndexOf;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js ***!
  \***************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};
    constructor[SPECIES] = function () {
      return { foo: 1 };
    };
    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call -- required for testing
    method.call(null, argument || function () { return 1; }, 1);
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");

var TypeError = global.TypeError;

// `Array.prototype.{ reduce, reduceRight }` methods implementation
var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aCallable(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = lengthOfArrayLike(O);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }
      index += i;
      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }
    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }
    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

var Array = global.Array;
var max = Math.max;

module.exports = function (O, start, end) {
  var length = lengthOfArrayLike(O);
  var k = toAbsoluteIndex(start, length);
  var fin = toAbsoluteIndex(end === undefined ? length : end, length);
  var result = Array(max(fin - k, 0));
  for (var n = 0; k < fin; k++, n++) createProperty(result, n, O[k]);
  result.length = n;
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis([].slice);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js");

var floor = Math.floor;

var mergeSort = function (array, comparefn) {
  var length = array.length;
  var middle = floor(length / 2);
  return length < 8 ? insertionSort(array, comparefn) : merge(
    array,
    mergeSort(arraySlice(array, 0, middle), comparefn),
    mergeSort(arraySlice(array, middle), comparefn),
    comparefn
  );
};

var insertionSort = function (array, comparefn) {
  var length = array.length;
  var i = 1;
  var element, j;

  while (i < length) {
    j = i;
    element = array[i];
    while (j && comparefn(array[j - 1], element) > 0) {
      array[j] = array[--j];
    }
    if (j !== i++) array[j] = element;
  } return array;
};

var merge = function (array, left, right, comparefn) {
  var llength = left.length;
  var rlength = right.length;
  var lindex = 0;
  var rindex = 0;

  while (lindex < llength || rindex < rlength) {
    array[lindex + rindex] = (lindex < llength && rindex < rlength)
      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]
      : lindex < llength ? left[lindex++] : right[rindex++];
  } return array;
};

module.exports = mergeSort;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-constructor.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-constructor.js ***!
  \********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');
var Array = global.Array;

// a part of `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray) {
  var C;
  if (isArray(originalArray)) {
    C = originalArray.constructor;
    // cross-realm fallback
    if (isConstructor(C) && (C === Array || isArray(C.prototype))) C = undefined;
    else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  } return C === undefined ? Array : C;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arraySpeciesConstructor = __webpack_require__(/*! ../internals/array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-constructor.js");

// `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate
module.exports = function (originalArray, length) {
  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/base64-map.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/base64-map.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

var itoc = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';
var ctoi = {};

for (var index = 0; index < 66; index++) ctoi[itoc.charAt(index)] = index;

module.exports = {
  itoc: itoc,
  ctoi: ctoi
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/call-with-safe-iteration-closing.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/call-with-safe-iteration-closing.js ***!
  \***************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js");

// call something on iterator step with safe closing on error
module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value);
  } catch (error) {
    iteratorClose(iterator, 'throw', error);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js ***!
  \*************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return { done: !!called++ };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };
  iteratorWithReturn[ITERATOR] = function () {
    return this;
  };
  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing
  Array.from(iteratorWithReturn, function () { throw 2; });
} catch (error) { /* empty */ }

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;
  try {
    var object = {};
    object[ITERATOR] = function () {
      return {
        next: function () {
          return { done: ITERATION_SUPPORT = true };
        }
      };
    };
    exec(object);
  } catch (error) { /* empty */ }
  return ITERATION_SUPPORT;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var toString = uncurryThis({}.toString);
var stringSlice = uncurryThis(''.slice);

module.exports = function (it) {
  return stringSlice(toString(it), 8, -1);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js ***!
  \**************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var classofRaw = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Object = global.Object;

// ES3 wrong here
var CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';

// fallback for IE11 Script Access Denied error
var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) { /* empty */ }
};

// getting tag from ES6+ `Object.prototype.toString`
module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null'
    // @@toStringTag case
    : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag
    // builtinTag case
    : CORRECT_ARGUMENTS ? classofRaw(O)
    // ES3 arguments fallback
    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/clear-error-stack.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/clear-error-stack.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var replace = uncurryThis(''.replace);

var TEST = (function (arg) { return String(Error(arg).stack); })('zxcasd');
var V8_OR_CHAKRA_STACK_ENTRY = /\n\s*at [^:]*:[^\n]*/;
var IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);

module.exports = function (stack, dropEntries) {
  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string') {
    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');
  } return stack;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fastKey = (__webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").fastKey);
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index;
      // change existing entry
      if (entry) {
        entry.value = value;
      // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;
        else that.size++;
        // add to index
        if (index !== 'F') state.index[index] = entry;
      } return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that);
      // fast case
      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index];
      // frozen object case
      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(Prototype, {
      // `{ Map, Set }.prototype.clear()` methods
      // https://tc39.es/ecma262/#sec-map.prototype.clear
      // https://tc39.es/ecma262/#sec-set.prototype.clear
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;
        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }
        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;
        else that.size = 0;
      },
      // `{ Map, Set }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.delete
      // https://tc39.es/ecma262/#sec-set.prototype.delete
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);
        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;
          else that.size--;
        } return !!entry;
      },
      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.foreach
      // https://tc39.es/ecma262/#sec-set.prototype.foreach
      forEach: function forEach(callbackfn /* , that = undefined */) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined);
        var entry;
        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this);
          // revert to the last existing entry
          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // `{ Map, Set}.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-map.prototype.has
      // https://tc39.es/ecma262/#sec-set.prototype.has
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });

    redefineAll(Prototype, IS_MAP ? {
      // `Map.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-map.prototype.get
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // `Map.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-map.prototype.set
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // `Set.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-set.prototype.add
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(Prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return Constructor;
  },
  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);
    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods
    // https://tc39.es/ecma262/#sec-map.prototype.entries
    // https://tc39.es/ecma262/#sec-map.prototype.keys
    // https://tc39.es/ecma262/#sec-map.prototype.values
    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator
    // https://tc39.es/ecma262/#sec-set.prototype.entries
    // https://tc39.es/ecma262/#sec-set.prototype.keys
    // https://tc39.es/ecma262/#sec-set.prototype.values
    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator
    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last;
      // revert to the last existing entry
      while (entry && entry.removed) entry = entry.previous;
      // get next entry
      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return { value: undefined, done: true };
      }
      // return step by kind
      if (kind == 'keys') return { value: entry.key, done: false };
      if (kind == 'values') return { value: entry.value, done: false };
      return { value: [entry.key, entry.value], done: false };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);

    // `{ Map, Set }.prototype[@@species]` accessors
    // https://tc39.es/ecma262/#sec-get-map-@@species
    // https://tc39.es/ecma262/#sec-get-set-@@species
    setSpecies(CONSTRUCTOR_NAME);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var getWeakData = (__webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").getWeakData);
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var ArrayIterationModule = __webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
var find = ArrayIterationModule.find;
var findIndex = ArrayIterationModule.findIndex;
var splice = uncurryThis([].splice);
var id = 0;

// fallback for uncaught frozen keys
var uncaughtFrozenStore = function (store) {
  return store.frozen || (store.frozen = new UncaughtFrozenStore());
};

var UncaughtFrozenStore = function () {
  this.entries = [];
};

var findUncaughtFrozen = function (store, key) {
  return find(store.entries, function (it) {
    return it[0] === key;
  });
};

UncaughtFrozenStore.prototype = {
  get: function (key) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) return entry[1];
  },
  has: function (key) {
    return !!findUncaughtFrozen(this, key);
  },
  set: function (key, value) {
    var entry = findUncaughtFrozen(this, key);
    if (entry) entry[1] = value;
    else this.entries.push([key, value]);
  },
  'delete': function (key) {
    var index = findIndex(this.entries, function (it) {
      return it[0] === key;
    });
    if (~index) splice(this.entries, index, 1);
    return !!~index;
  }
};

module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var Constructor = wrapper(function (that, iterable) {
      anInstance(that, Prototype);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        id: id++,
        frozen: undefined
      });
      if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
    });

    var Prototype = Constructor.prototype;

    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var data = getWeakData(anObject(key), true);
      if (data === true) uncaughtFrozenStore(state).set(key, value);
      else data[state.id] = value;
      return that;
    };

    redefineAll(Prototype, {
      // `{ WeakMap, WeakSet }.prototype.delete(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.delete
      // https://tc39.es/ecma262/#sec-weakset.prototype.delete
      'delete': function (key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state)['delete'](key);
        return data && hasOwn(data, state.id) && delete data[state.id];
      },
      // `{ WeakMap, WeakSet }.prototype.has(key)` methods
      // https://tc39.es/ecma262/#sec-weakmap.prototype.has
      // https://tc39.es/ecma262/#sec-weakset.prototype.has
      has: function has(key) {
        var state = getInternalState(this);
        if (!isObject(key)) return false;
        var data = getWeakData(key);
        if (data === true) return uncaughtFrozenStore(state).has(key);
        return data && hasOwn(data, state.id);
      }
    });

    redefineAll(Prototype, IS_MAP ? {
      // `WeakMap.prototype.get(key)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.get
      get: function get(key) {
        var state = getInternalState(this);
        if (isObject(key)) {
          var data = getWeakData(key);
          if (data === true) return uncaughtFrozenStore(state).get(key);
          return data ? data[state.id] : undefined;
        }
      },
      // `WeakMap.prototype.set(key, value)` method
      // https://tc39.es/ecma262/#sec-weakmap.prototype.set
      set: function set(key, value) {
        return define(this, key, value);
      }
    } : {
      // `WeakSet.prototype.add(value)` method
      // https://tc39.es/ecma262/#sec-weakset.prototype.add
      add: function add(value) {
        return define(this, value, true);
      }
    });

    return Constructor;
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var Constructor = NativeConstructor;
  var exported = {};

  var fixMethod = function (KEY) {
    var uncurriedNativeMethod = uncurryThis(NativePrototype[KEY]);
    redefine(NativePrototype, KEY,
      KEY == 'add' ? function add(value) {
        uncurriedNativeMethod(this, value === 0 ? 0 : value);
        return this;
      } : KEY == 'delete' ? function (key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'get' ? function get(key) {
        return IS_WEAK && !isObject(key) ? undefined : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : KEY == 'has' ? function has(key) {
        return IS_WEAK && !isObject(key) ? false : uncurriedNativeMethod(this, key === 0 ? 0 : key);
      } : function set(key, value) {
        uncurriedNativeMethod(this, key === 0 ? 0 : key, value);
        return this;
      }
    );
  };

  var REPLACE = isForced(
    CONSTRUCTOR_NAME,
    !isCallable(NativeConstructor) || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
      new NativeConstructor().entries().next();
    }))
  );

  if (REPLACE) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.enable();
  } else if (isForced(CONSTRUCTOR_NAME, true)) {
    var instance = new Constructor();
    // early implementations not supports chaining
    var HASNT_CHAINING = instance[ADDER](IS_WEAK ? {} : -0, 1) != instance;
    // V8 ~ Chromium 40- weak-collections throws on primitives, but should return false
    var THROWS_ON_PRIMITIVES = fails(function () { instance.has(1); });
    // most early implementations doesn't supports iterables, most modern - not close it correctly
    // eslint-disable-next-line no-new -- required for testing
    var ACCEPT_ITERABLES = checkCorrectnessOfIteration(function (iterable) { new NativeConstructor(iterable); });
    // for early implementations -0 and +0 not the same
    var BUGGY_ZERO = !IS_WEAK && fails(function () {
      // V8 ~ Chromium 42- fails only with 5+ elements
      var $instance = new NativeConstructor();
      var index = 5;
      while (index--) $instance[ADDER](index, index);
      return !$instance.has(-0);
    });

    if (!ACCEPT_ITERABLES) {
      Constructor = wrapper(function (dummy, iterable) {
        anInstance(dummy, NativePrototype);
        var that = inheritIfRequired(new NativeConstructor(), dummy, Constructor);
        if (iterable != undefined) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });
        return that;
      });
      Constructor.prototype = NativePrototype;
      NativePrototype.constructor = Constructor;
    }

    if (THROWS_ON_PRIMITIVES || BUGGY_ZERO) {
      fixMethod('delete');
      fixMethod('has');
      IS_MAP && fixMethod('get');
    }

    if (BUGGY_ZERO || HASNT_CHAINING) fixMethod(ADDER);

    // weak collections should not contains .clear method
    if (IS_WEAK && NativePrototype.clear) delete NativePrototype.clear;
  }

  exported[CONSTRUCTOR_NAME] = Constructor;
  $({ global: true, forced: Constructor != NativeConstructor }, exported);

  setToStringTag(Constructor, CONSTRUCTOR_NAME);

  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);

  return Constructor;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js ***!
  \**********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

module.exports = function (target, source, exceptions) {
  var keys = ownKeys(source);
  var defineProperty = definePropertyModule.f;
  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
  for (var i = 0; i < keys.length; i++) {
    var key = keys[i];
    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {
      defineProperty(target, key, getOwnPropertyDescriptor(source, key));
    }
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;
  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) { /* empty */ }
  } return false;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  function F() { /* empty */ }
  F.prototype.constructor = null;
  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing
  return Object.getPrototypeOf(new F()) !== F.prototype;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var quot = /"/g;
var replace = uncurryThis(''.replace);

// `CreateHTML` abstract operation
// https://tc39.es/ecma262/#sec-createhtml
module.exports = function (string, tag, attribute, value) {
  var S = toString(requireObjectCoercible(string));
  var p1 = '<' + tag;
  if (attribute !== '') p1 += ' ' + attribute + '="' + replace(toString(value), quot, '&quot;') + '"';
  return p1 + '>' + S + '</' + tag + '>';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js ***!
  \**********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IteratorPrototype = (__webpack_require__(/*! ../internals/iterators-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js").IteratorPrototype);
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");

var returnThis = function () { return this; };

module.exports = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, { next: createPropertyDescriptor(+!ENUMERABLE_NEXT, next) });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js ***!
  \*************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js ***!
  \*********************************************************************************************************************************/
/***/ (function(module) {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = function (object, key, value) {
  var propertyKey = toPropertyKey(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));
  else object[propertyKey] = value;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-iso-string.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-iso-string.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var padStart = (__webpack_require__(/*! ../internals/string-pad */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js").start);

var RangeError = global.RangeError;
var abs = Math.abs;
var DatePrototype = Date.prototype;
var n$DateToISOString = DatePrototype.toISOString;
var getTime = uncurryThis(DatePrototype.getTime);
var getUTCDate = uncurryThis(DatePrototype.getUTCDate);
var getUTCFullYear = uncurryThis(DatePrototype.getUTCFullYear);
var getUTCHours = uncurryThis(DatePrototype.getUTCHours);
var getUTCMilliseconds = uncurryThis(DatePrototype.getUTCMilliseconds);
var getUTCMinutes = uncurryThis(DatePrototype.getUTCMinutes);
var getUTCMonth = uncurryThis(DatePrototype.getUTCMonth);
var getUTCSeconds = uncurryThis(DatePrototype.getUTCSeconds);

// `Date.prototype.toISOString` method implementation
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit fails here:
module.exports = (fails(function () {
  return n$DateToISOString.call(new Date(-5e13 - 1)) != '0385-07-25T07:06:39.999Z';
}) || !fails(function () {
  n$DateToISOString.call(new Date(NaN));
})) ? function toISOString() {
  if (!isFinite(getTime(this))) throw RangeError('Invalid time value');
  var date = this;
  var year = getUTCFullYear(date);
  var milliseconds = getUTCMilliseconds(date);
  var sign = year < 0 ? '-' : year > 9999 ? '+' : '';
  return sign + padStart(abs(year), sign ? 6 : 4, 0) +
    '-' + padStart(getUTCMonth(date) + 1, 2, 0) +
    '-' + padStart(getUTCDate(date), 2, 0) +
    'T' + padStart(getUTCHours(date), 2, 0) +
    ':' + padStart(getUTCMinutes(date), 2, 0) +
    ':' + padStart(getUTCSeconds(date), 2, 0) +
    '.' + padStart(milliseconds, 3, 0) +
    'Z';
} : n$DateToISOString;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-primitive.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-primitive.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js");

var TypeError = global.TypeError;

// `Date.prototype[@@toPrimitive](hint)` method implementation
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
module.exports = function (hint) {
  anObject(this);
  if (hint === 'string' || hint === 'default') hint = 'string';
  else if (hint !== 'number') throw TypeError('Incorrect hint');
  return ordinaryToPrimitive(this, hint);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var FunctionName = __webpack_require__(/*! ../internals/function-name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");
var IteratorsCore = __webpack_require__(/*! ../internals/iterators-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js");

var PROPER_FUNCTION_NAME = FunctionName.PROPER;
var CONFIGURABLE_FUNCTION_NAME = FunctionName.CONFIGURABLE;
var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () { return this; };

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];
    switch (KIND) {
      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };
      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };
      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };
    } return function () { return new IteratorConstructor(this); };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR]
    || IterablePrototype['@@iterator']
    || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY;

  // fix native
  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));
    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (!isCallable(CurrentIteratorPrototype[ITERATOR])) {
          redefine(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      }
      // Set @@toStringTag to native iterators
      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  }

  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF
  if (PROPER_FUNCTION_NAME && DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    if (!IS_PURE && CONFIGURABLE_FUNCTION_NAME) {
      createNonEnumerableProperty(IterablePrototype, 'name', VALUES);
    } else {
      INCORRECT_VALUES_NAME = true;
      defaultIterator = function values() { return call(nativeIterator, this); };
    }
  }

  // export additional methods
  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);
  }

  // define iterator
  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    redefine(IterablePrototype, ITERATOR, defaultIterator, { name: DEFAULT });
  }
  Iterators[NAME] = defaultIterator;

  return methods;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var path = __webpack_require__(/*! ../internals/path */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!hasOwn(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// Detect IE8's incomplete defineProperty implementation
module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var document = global.document;
// typeof document.createElement is 'object' in old IE
var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-exception-constants.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-exception-constants.js ***!
  \******************************************************************************************************************************/
/***/ (function(module) {

module.exports = {
  IndexSizeError: { s: 'INDEX_SIZE_ERR', c: 1, m: 1 },
  DOMStringSizeError: { s: 'DOMSTRING_SIZE_ERR', c: 2, m: 0 },
  HierarchyRequestError: { s: 'HIERARCHY_REQUEST_ERR', c: 3, m: 1 },
  WrongDocumentError: { s: 'WRONG_DOCUMENT_ERR', c: 4, m: 1 },
  InvalidCharacterError: { s: 'INVALID_CHARACTER_ERR', c: 5, m: 1 },
  NoDataAllowedError: { s: 'NO_DATA_ALLOWED_ERR', c: 6, m: 0 },
  NoModificationAllowedError: { s: 'NO_MODIFICATION_ALLOWED_ERR', c: 7, m: 1 },
  NotFoundError: { s: 'NOT_FOUND_ERR', c: 8, m: 1 },
  NotSupportedError: { s: 'NOT_SUPPORTED_ERR', c: 9, m: 1 },
  InUseAttributeError: { s: 'INUSE_ATTRIBUTE_ERR', c: 10, m: 1 },
  InvalidStateError: { s: 'INVALID_STATE_ERR', c: 11, m: 1 },
  SyntaxError: { s: 'SYNTAX_ERR', c: 12, m: 1 },
  InvalidModificationError: { s: 'INVALID_MODIFICATION_ERR', c: 13, m: 1 },
  NamespaceError: { s: 'NAMESPACE_ERR', c: 14, m: 1 },
  InvalidAccessError: { s: 'INVALID_ACCESS_ERR', c: 15, m: 1 },
  ValidationError: { s: 'VALIDATION_ERR', c: 16, m: 0 },
  TypeMismatchError: { s: 'TYPE_MISMATCH_ERR', c: 17, m: 1 },
  SecurityError: { s: 'SECURITY_ERR', c: 18, m: 1 },
  NetworkError: { s: 'NETWORK_ERR', c: 19, m: 1 },
  AbortError: { s: 'ABORT_ERR', c: 20, m: 1 },
  URLMismatchError: { s: 'URL_MISMATCH_ERR', c: 21, m: 1 },
  QuotaExceededError: { s: 'QUOTA_EXCEEDED_ERR', c: 22, m: 1 },
  TimeoutError: { s: 'TIMEOUT_ERR', c: 23, m: 1 },
  InvalidNodeTypeError: { s: 'INVALID_NODE_TYPE_ERR', c: 24, m: 1 },
  DataCloneError: { s: 'DATA_CLONE_ERR', c: 25, m: 1 }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js ***!
  \********************************************************************************************************************/
/***/ (function(module) {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-token-list-prototype.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-token-list-prototype.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// in old WebKit versions, `element.classList` is not an instance of global `DOMTokenList`
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");

var classList = documentCreateElement('span').classList;
var DOMTokenListPrototype = classList && classList.constructor && classList.constructor.prototype;

module.exports = DOMTokenListPrototype === Object.prototype ? undefined : DOMTokenListPrototype;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var firefox = userAgent.match(/firefox\/(\d+)/i);

module.exports = !!firefox && +firefox[1];


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-browser.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-browser.js ***!
  \************************************************************************************************************************/
/***/ (function(module) {

module.exports = typeof window == 'object';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var UA = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /MSIE|Trident/.test(UA);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios-pebble.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios-pebble.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = /ipad|iphone|ipod/i.test(userAgent) && global.Pebble !== undefined;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = classof(global.process) == 'process';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-webos-webkit.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-webos-webkit.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /web0s(?!.*chrome)/i.test(userAgent);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('navigator', 'userAgent') || '';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var process = global.process;
var Deno = global.Deno;
var versions = process && process.versions || Deno && Deno.version;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  // in old Chrome, versions of V8 isn't V8 = Chrome / 10
  // but their correct versions are not interesting for us
  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);
}

// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`
// so check `userAgent` even if `.v8` exists, but 0
if (!version && userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);
  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = +match[1];
  }
}

module.exports = version;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

var webkit = userAgent.match(/AppleWebKit\/(\d+)\./);

module.exports = !!webkit && +webkit[1];


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js ***!
  \********************************************************************************************************************/
/***/ (function(module) {

// IE8- don't enum bug keys
module.exports = [
  'constructor',
  'hasOwnProperty',
  'isPrototypeOf',
  'propertyIsEnumerable',
  'toLocaleString',
  'toString',
  'valueOf'
];


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-stack-installable.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-stack-installable.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

module.exports = !fails(function () {
  var error = Error('a');
  if (!('stack' in error)) return true;
  // eslint-disable-next-line es/no-object-defineproperty -- safe
  Object.defineProperty(error, 'stack', createPropertyDescriptor(1, 7));
  return error.stack !== 7;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-to-string.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-to-string.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var normalizeStringArgument = __webpack_require__(/*! ../internals/normalize-string-argument */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js");

var nativeErrorToString = Error.prototype.toString;

var INCORRECT_TO_STRING = fails(function () {
  if (DESCRIPTORS) {
    // Chrome 32- incorrectly call accessor
    // eslint-disable-next-line es/no-object-defineproperty -- safe
    var object = create(Object.defineProperty({}, 'name', { get: function () {
      return this === object;
    } }));
    if (nativeErrorToString.call(object) !== 'true') return true;
  }
  // FF10- does not properly handle non-strings
  return nativeErrorToString.call({ message: 1, name: 2 }) !== '2: 1'
    // IE8 does not properly handle defaults
    || nativeErrorToString.call({}) !== 'Error';
});

module.exports = INCORRECT_TO_STRING ? function toString() {
  var O = anObject(this);
  var name = normalizeStringArgument(O.name, 'Error');
  var message = normalizeStringArgument(O.message);
  return !name ? message : !message ? name : name + ': ' + message;
} : nativeErrorToString;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js ***!
  \*************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");

/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
  options.name        - the .name of the function if it does not match the key
*/
module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var FORCED, target, key, targetProperty, sourceProperty, descriptor;
  if (GLOBAL) {
    target = global;
  } else if (STATIC) {
    target = global[TARGET] || setGlobal(TARGET, {});
  } else {
    target = (global[TARGET] || {}).prototype;
  }
  if (target) for (key in source) {
    sourceProperty = source[key];
    if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(target, key);
      targetProperty = descriptor && descriptor.value;
    } else targetProperty = target[key];
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);
    // contained in target
    if (!FORCED && targetProperty !== undefined) {
      if (typeof sourceProperty == typeof targetProperty) continue;
      copyConstructorProperties(sourceProperty, targetProperty);
    }
    // add a flag to not completely full polyfills
    if (options.sham || (targetProperty && targetProperty.sham)) {
      createNonEnumerableProperty(sourceProperty, 'sham', true);
    }
    // extend global
    redefine(target, key, sourceProperty, options);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js":
/*!************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js ***!
  \************************************************************************************************************/
/***/ (function(module) {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js":
/*!*****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");

var SPECIES = wellKnownSymbol('species');
var RegExpPrototype = RegExp.prototype;

module.exports = function (KEY, exec, FORCED, SHAM) {
  var SYMBOL = wellKnownSymbol(KEY);

  var DELEGATES_TO_SYMBOL = !fails(function () {
    // String methods call symbol-named RegEp methods
    var O = {};
    O[SYMBOL] = function () { return 7; };
    return ''[KEY](O) != 7;
  });

  var DELEGATES_TO_EXEC = DELEGATES_TO_SYMBOL && !fails(function () {
    // Symbol-named RegExp methods call .exec
    var execCalled = false;
    var re = /a/;

    if (KEY === 'split') {
      // We can't use real regex here since it causes deoptimization
      // and serious performance degradation in V8
      // https://github.com/zloirock/core-js/issues/306
      re = {};
      // RegExp[@@split] doesn't call the regex's exec method, but first creates
      // a new one. We need to return the patched regex when creating the new one.
      re.constructor = {};
      re.constructor[SPECIES] = function () { return re; };
      re.flags = '';
      re[SYMBOL] = /./[SYMBOL];
    }

    re.exec = function () { execCalled = true; return null; };

    re[SYMBOL]('');
    return !execCalled;
  });

  if (
    !DELEGATES_TO_SYMBOL ||
    !DELEGATES_TO_EXEC ||
    FORCED
  ) {
    var uncurriedNativeRegExpMethod = uncurryThis(/./[SYMBOL]);
    var methods = exec(SYMBOL, ''[KEY], function (nativeMethod, regexp, str, arg2, forceStringMethod) {
      var uncurriedNativeMethod = uncurryThis(nativeMethod);
      var $exec = regexp.exec;
      if ($exec === regexpExec || $exec === RegExpPrototype.exec) {
        if (DELEGATES_TO_SYMBOL && !forceStringMethod) {
          // The native String method already delegates to @@method (this
          // polyfilled function), leasing to infinite recursion.
          // We avoid it by directly calling the native @@method method.
          return { done: true, value: uncurriedNativeRegExpMethod(regexp, str, arg2) };
        }
        return { done: true, value: uncurriedNativeMethod(str, regexp, arg2) };
      }
      return { done: false };
    });

    redefine(String.prototype, KEY, methods[0]);
    redefine(RegExpPrototype, SYMBOL, methods[1]);
  }

  if (SHAM) createNonEnumerableProperty(RegExpPrototype[SYMBOL], 'sham', true);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");

var TypeError = global.TypeError;

// `FlattenIntoArray` abstract operation
// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray
var flattenIntoArray = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {
  var targetIndex = start;
  var sourceIndex = 0;
  var mapFn = mapper ? bind(mapper, thisArg) : false;
  var element, elementLen;

  while (sourceIndex < sourceLen) {
    if (sourceIndex in source) {
      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];

      if (depth > 0 && isArray(element)) {
        elementLen = lengthOfArrayLike(element);
        targetIndex = flattenIntoArray(target, original, element, elementLen, targetIndex, depth - 1) - 1;
      } else {
        if (targetIndex >= 0x1FFFFFFFFFFFFF) throw TypeError('Exceed the acceptable array length');
        target[targetIndex] = element;
      }

      targetIndex++;
    }
    sourceIndex++;
  }
  return targetIndex;
};

module.exports = flattenIntoArray;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var apply = FunctionPrototype.apply;
var call = FunctionPrototype.call;

// eslint-disable-next-line es/no-reflect -- safe
module.exports = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND ? call.bind(apply) : function () {
  return call.apply(apply, arguments);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js");

var bind = uncurryThis(uncurryThis.bind);

// optional / simple context binding
module.exports = function (fn, that) {
  aCallable(fn);
  return that === undefined ? fn : NATIVE_BIND ? bind(fn, that) : function (/* ...args */) {
    return fn.apply(that, arguments);
  };
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

module.exports = !fails(function () {
  var test = (function () { /* empty */ }).bind();
  // eslint-disable-next-line no-prototype-builtins -- safe
  return typeof test != 'function' || test.hasOwnProperty('prototype');
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");
var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js");

var Function = global.Function;
var concat = uncurryThis([].concat);
var join = uncurryThis([].join);
var factories = {};

var construct = function (C, argsLength, args) {
  if (!hasOwn(factories, argsLength)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']';
    factories[argsLength] = Function('C,a', 'return new C(' + join(list, ',') + ')');
  } return factories[argsLength](C, args);
};

// `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind
module.exports = NATIVE_BIND ? Function.bind : function bind(that /* , ...args */) {
  var F = aCallable(this);
  var Prototype = F.prototype;
  var partArgs = arraySlice(arguments, 1);
  var boundFunction = function bound(/* args... */) {
    var args = concat(partArgs, arraySlice(arguments));
    return this instanceof boundFunction ? construct(F, args.length, args) : F.apply(that, args);
  };
  if (isObject(Prototype)) boundFunction.prototype = Prototype;
  return boundFunction;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js");

var call = Function.prototype.call;

module.exports = NATIVE_BIND ? call.bind(call) : function () {
  return call.apply(call, arguments);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");

var FunctionPrototype = Function.prototype;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;

var EXISTS = hasOwn(FunctionPrototype, 'name');
// additional protection from minified / mangled / dropped function names
var PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';
var CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));

module.exports = {
  EXISTS: EXISTS,
  PROPER: PROPER,
  CONFIGURABLE: CONFIGURABLE
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_BIND = __webpack_require__(/*! ../internals/function-bind-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-native.js");

var FunctionPrototype = Function.prototype;
var bind = FunctionPrototype.bind;
var call = FunctionPrototype.call;
var uncurryThis = NATIVE_BIND && bind.bind(call, call);

module.exports = NATIVE_BIND ? function (fn) {
  return fn && uncurryThis(fn);
} : function (fn) {
  return fn && function () {
    return call.apply(fn, arguments);
  };
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");

var aFunction = function (argument) {
  return isCallable(argument) ? argument : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return getMethod(it, ITERATOR)
    || getMethod(it, '@@iterator')
    || Iterators[classof(it)];
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");

var TypeError = global.TypeError;

module.exports = function (argument, usingIterator) {
  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;
  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));
  throw TypeError(tryToString(argument) + ' is not iterable');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");

// `GetMethod` abstract operation
// https://tc39.es/ecma262/#sec-getmethod
module.exports = function (V, P) {
  var func = V[P];
  return func == null ? undefined : aCallable(func);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");

var floor = Math.floor;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var SUBSTITUTION_SYMBOLS = /\$([$&'`]|\d{1,2}|<[^>]*>)/g;
var SUBSTITUTION_SYMBOLS_NO_NAMED = /\$([$&'`]|\d{1,2})/g;

// `GetSubstitution` abstract operation
// https://tc39.es/ecma262/#sec-getsubstitution
module.exports = function (matched, str, position, captures, namedCaptures, replacement) {
  var tailPos = position + matched.length;
  var m = captures.length;
  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;
  if (namedCaptures !== undefined) {
    namedCaptures = toObject(namedCaptures);
    symbols = SUBSTITUTION_SYMBOLS;
  }
  return replace(replacement, symbols, function (match, ch) {
    var capture;
    switch (charAt(ch, 0)) {
      case '$': return '$';
      case '&': return matched;
      case '`': return stringSlice(str, 0, position);
      case "'": return stringSlice(str, tailPos);
      case '<':
        capture = namedCaptures[stringSlice(ch, 1, -1)];
        break;
      default: // \d\d?
        var n = +ch;
        if (n === 0) return match;
        if (n > m) {
          var f = floor(n / 10);
          if (f === 0) return match;
          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);
          return match;
        }
        capture = captures[n - 1];
    }
    return capture === undefined ? '' : capture;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js ***!
  \*************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var check = function (it) {
  return it && it.Math == Math && it;
};

// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028
module.exports =
  // eslint-disable-next-line es/no-global-this -- safe
  check(typeof globalThis == 'object' && globalThis) ||
  check(typeof window == 'object' && window) ||
  // eslint-disable-next-line no-restricted-globals -- safe
  check(typeof self == 'object' && self) ||
  check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) ||
  // eslint-disable-next-line no-new-func -- fallback
  (function () { return this; })() || Function('return this')();


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");

var hasOwnProperty = uncurryThis({}.hasOwnProperty);

// `HasOwnProperty` abstract operation
// https://tc39.es/ecma262/#sec-hasownproperty
module.exports = Object.hasOwn || function hasOwn(it, key) {
  return hasOwnProperty(toObject(it), key);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

module.exports = {};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/host-report-errors.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/host-report-errors.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = function (a, b) {
  var console = global.console;
  if (console && console.error) {
    arguments.length == 1 ? console.error(a) : console.error(a, b);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");

module.exports = getBuiltIn('document', 'documentElement');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");

// Thanks to IE8 for its funny defineProperty
module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () { return 7; }
  }).a != 7;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ieee754.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ieee754.js ***!
  \**************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// IEEE754 conversions based on https://github.com/feross/ieee754
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var Array = global.Array;
var abs = Math.abs;
var pow = Math.pow;
var floor = Math.floor;
var log = Math.log;
var LN2 = Math.LN2;

var pack = function (number, mantissaLength, bytes) {
  var buffer = Array(bytes);
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var rt = mantissaLength === 23 ? pow(2, -24) - pow(2, -77) : 0;
  var sign = number < 0 || number === 0 && 1 / number < 0 ? 1 : 0;
  var index = 0;
  var exponent, mantissa, c;
  number = abs(number);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (number != number || number === Infinity) {
    // eslint-disable-next-line no-self-compare -- NaN check
    mantissa = number != number ? 1 : 0;
    exponent = eMax;
  } else {
    exponent = floor(log(number) / LN2);
    c = pow(2, -exponent);
    if (number * c < 1) {
      exponent--;
      c *= 2;
    }
    if (exponent + eBias >= 1) {
      number += rt / c;
    } else {
      number += rt * pow(2, 1 - eBias);
    }
    if (number * c >= 2) {
      exponent++;
      c /= 2;
    }
    if (exponent + eBias >= eMax) {
      mantissa = 0;
      exponent = eMax;
    } else if (exponent + eBias >= 1) {
      mantissa = (number * c - 1) * pow(2, mantissaLength);
      exponent = exponent + eBias;
    } else {
      mantissa = number * pow(2, eBias - 1) * pow(2, mantissaLength);
      exponent = 0;
    }
  }
  while (mantissaLength >= 8) {
    buffer[index++] = mantissa & 255;
    mantissa /= 256;
    mantissaLength -= 8;
  }
  exponent = exponent << mantissaLength | mantissa;
  exponentLength += mantissaLength;
  while (exponentLength > 0) {
    buffer[index++] = exponent & 255;
    exponent /= 256;
    exponentLength -= 8;
  }
  buffer[--index] |= sign * 128;
  return buffer;
};

var unpack = function (buffer, mantissaLength) {
  var bytes = buffer.length;
  var exponentLength = bytes * 8 - mantissaLength - 1;
  var eMax = (1 << exponentLength) - 1;
  var eBias = eMax >> 1;
  var nBits = exponentLength - 7;
  var index = bytes - 1;
  var sign = buffer[index--];
  var exponent = sign & 127;
  var mantissa;
  sign >>= 7;
  while (nBits > 0) {
    exponent = exponent * 256 + buffer[index--];
    nBits -= 8;
  }
  mantissa = exponent & (1 << -nBits) - 1;
  exponent >>= -nBits;
  nBits += mantissaLength;
  while (nBits > 0) {
    mantissa = mantissa * 256 + buffer[index--];
    nBits -= 8;
  }
  if (exponent === 0) {
    exponent = 1 - eBias;
  } else if (exponent === eMax) {
    return mantissa ? NaN : sign ? -Infinity : Infinity;
  } else {
    mantissa = mantissa + pow(2, mantissaLength);
    exponent = exponent - eBias;
  } return (sign ? -1 : 1) * mantissa * pow(2, exponent - mantissaLength);
};

module.exports = {
  pack: pack,
  unpack: unpack
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");

var Object = global.Object;
var split = uncurryThis(''.split);

// fallback for non-array-like ES3 and non-enumerable old V8 strings
module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split(it, '') : Object(it);
} : Object;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");

// makes subclassing work correct for wrapped built-ins
module.exports = function ($this, dummy, Wrapper) {
  var NewTarget, NewTargetPrototype;
  if (
    // it can work only with native `setPrototypeOf`
    setPrototypeOf &&
    // we haven't completely correct pre-ES6 way for getting `new.target`, so use this
    isCallable(NewTarget = dummy.constructor) &&
    NewTarget !== Wrapper &&
    isObject(NewTargetPrototype = NewTarget.prototype) &&
    NewTargetPrototype !== Wrapper.prototype
  ) setPrototypeOf($this, NewTargetPrototype);
  return $this;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js");

var functionToString = uncurryThis(Function.toString);

// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper
if (!isCallable(store.inspectSource)) {
  store.inspectSource = function (it) {
    return functionToString(it);
  };
}

module.exports = store.inspectSource;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/install-error-cause.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/install-error-cause.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");

// `InstallErrorCause` abstract operation
// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause
module.exports = function (O, options) {
  if (isObject(options) && 'cause' in options) {
    createNonEnumerableProperty(O, 'cause', options.cause);
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternalModule = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js");
var isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-extensible.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");

var REQUIRED = false;
var METADATA = uid('meta');
var id = 0;

var setMetadata = function (it) {
  defineProperty(it, METADATA, { value: {
    objectID: 'O' + id++, // object ID
    weakData: {}          // weak collections IDs
  } });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F';
    // not necessary to add metadata
    if (!create) return 'E';
    // add missing metadata
    setMetadata(it);
  // return object ID
  } return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!hasOwn(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true;
    // not necessary to add metadata
    if (!create) return false;
    // add missing metadata
    setMetadata(it);
  // return the store of weak collections IDs
  } return it[METADATA].weakData;
};

// add metadata on freeze-family methods calling
var onFreeze = function (it) {
  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn(it, METADATA)) setMetadata(it);
  return it;
};

var enable = function () {
  meta.enable = function () { /* empty */ };
  REQUIRED = true;
  var getOwnPropertyNames = getOwnPropertyNamesModule.f;
  var splice = uncurryThis([].splice);
  var test = {};
  test[METADATA] = 1;

  // prevent exposing of metadata key
  if (getOwnPropertyNames(test).length) {
    getOwnPropertyNamesModule.f = function (it) {
      var result = getOwnPropertyNames(it);
      for (var i = 0, length = result.length; i < length; i++) {
        if (result[i] === METADATA) {
          splice(result, i, 1);
          break;
        }
      } return result;
    };

    $({ target: 'Object', stat: true, forced: true }, {
      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f
    });
  }
};

var meta = module.exports = {
  enable: enable,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};

hiddenKeys[METADATA] = true;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var shared = __webpack_require__(/*! ../internals/shared-store */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var TypeError = global.TypeError;
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;
    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    } return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = uncurryThis(store.get);
  var wmhas = uncurryThis(store.has);
  var wmset = uncurryThis(store.set);
  set = function (it, metadata) {
    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset(store, it, metadata);
    return metadata;
  };
  get = function (it) {
    return wmget(store, it) || {};
  };
  has = function (it) {
    return wmhas(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;
  set = function (it, metadata) {
    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };
  get = function (it) {
    return hasOwn(it, STATE) ? it[STATE] : {};
  };
  has = function (it) {
    return hasOwn(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype;

// check on default Array iterator
module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");

// `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe
module.exports = Array.isArray || function isArray(argument) {
  return classof(argument) == 'Array';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

// `IsCallable` abstract operation
// https://tc39.es/ecma262/#sec-iscallable
module.exports = function (argument) {
  return typeof argument == 'function';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");

var noop = function () { /* empty */ };
var empty = [];
var construct = getBuiltIn('Reflect', 'construct');
var constructorRegExp = /^\s*(?:class|function)\b/;
var exec = uncurryThis(constructorRegExp.exec);
var INCORRECT_TO_STRING = !constructorRegExp.exec(noop);

var isConstructorModern = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  try {
    construct(noop, empty, argument);
    return true;
  } catch (error) {
    return false;
  }
};

var isConstructorLegacy = function isConstructor(argument) {
  if (!isCallable(argument)) return false;
  switch (classof(argument)) {
    case 'AsyncFunction':
    case 'GeneratorFunction':
    case 'AsyncGeneratorFunction': return false;
  }
  try {
    // we can't check .prototype since constructors produced by .bind haven't it
    // `Function#toString` throws on some built-it function in some legacy engines
    // (for example, `DOMQuad` and similar in FF41-)
    return INCORRECT_TO_STRING || !!exec(constructorRegExp, inspectSource(argument));
  } catch (error) {
    return true;
  }
};

isConstructorLegacy.sham = true;

// `IsConstructor` abstract operation
// https://tc39.es/ecma262/#sec-isconstructor
module.exports = !construct || fails(function () {
  var called;
  return isConstructorModern(isConstructorModern.call)
    || !isConstructorModern(Object)
    || !isConstructorModern(function () { called = true; })
    || called;
}) ? isConstructorLegacy : isConstructorModern;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");

module.exports = function (descriptor) {
  return descriptor !== undefined && (hasOwn(descriptor, 'value') || hasOwn(descriptor, 'writable'));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true
    : value == NATIVE ? false
    : isCallable(detection) ? fails(detection)
    : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';

module.exports = isForced;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integral-number.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integral-number.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var floor = Math.floor;

// `IsIntegralNumber` abstract operation
// https://tc39.es/ecma262/#sec-isintegralnumber
// eslint-disable-next-line es/no-number-isinteger -- safe
module.exports = Number.isInteger || function isInteger(it) {
  return !isObject(it) && isFinite(it) && floor(it) === it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");

module.exports = function (it) {
  return typeof it == 'object' ? it !== null : isCallable(it);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js ***!
  \**************************************************************************************************************/
/***/ (function(module) {

module.exports = false;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var MATCH = wellKnownSymbol('match');

// `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp
module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js");

var Object = global.Object;

module.exports = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  var $Symbol = getBuiltIn('Symbol');
  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, Object(it));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js ***!
  \**************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var tryToString = __webpack_require__(/*! ../internals/try-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");
var iteratorClose = __webpack_require__(/*! ../internals/iterator-close */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js");

var TypeError = global.TypeError;

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

var ResultPrototype = Result.prototype;

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator, 'normal', condition);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    } return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (!iterFn) throw TypeError(tryToString(iterable) + ' is not iterable');
    // optimisation for array iterators
    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = lengthOfArrayLike(iterable); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && isPrototypeOf(ResultPrototype, result)) return result;
      } return new Result(false);
    }
    iterator = getIterator(iterable, iterFn);
  }

  next = iterator.next;
  while (!(step = call(next, iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator, 'throw', error);
    }
    if (typeof result == 'object' && result && isPrototypeOf(ResultPrototype, result)) return result;
  } return new Result(false);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterator-close.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");

module.exports = function (iterator, kind, value) {
  var innerResult, innerError;
  anObject(iterator);
  try {
    innerResult = getMethod(iterator, 'return');
    if (!innerResult) {
      if (kind === 'throw') throw value;
      return value;
    }
    innerResult = call(innerResult, iterator);
  } catch (error) {
    innerError = true;
    innerResult = error;
  }
  if (kind === 'throw') throw value;
  if (innerError) throw innerResult;
  anObject(innerResult);
  return value;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators-core.js ***!
  \*********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

// `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object
var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;

/* eslint-disable es/no-array-prototype-keys -- safe */
if ([].keys) {
  arrayIterator = [].keys();
  // Safari 8 has buggy iterators w/o `next`
  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;
  else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {};
  // FF44- legacy iterators case
  return IteratorPrototype[ITERATOR].call(test) !== test;
});

if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {};
else if (IS_PURE) IteratorPrototype = create(IteratorPrototype);

// `%IteratorPrototype%[@@iterator]()` method
// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator
if (!isCallable(IteratorPrototype[ITERATOR])) {
  redefine(IteratorPrototype, ITERATOR, function () {
    return this;
  });
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

module.exports = {};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");

// `LengthOfArrayLike` abstract operation
// https://tc39.es/ecma262/#sec-lengthofarraylike
module.exports = function (obj) {
  return toLength(obj.length);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

// eslint-disable-next-line es/no-math-expm1 -- safe
var $expm1 = Math.expm1;
var exp = Math.exp;

// `Math.expm1` method implementation
// https://tc39.es/ecma262/#sec-math.expm1
module.exports = (!$expm1
  // Old FF bug
  || $expm1(10) > 22025.465794806719 || $expm1(10) < 22025.4657948067165168
  // Tor Browser bug
  || $expm1(-2e-17) != -2e-17
) ? function expm1(x) {
  return (x = +x) == 0 ? x : x > -1e-6 && x < 1e-6 ? x + x * x / 2 : exp(x) - 1;
} : $expm1;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-fround.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-fround.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js");

var abs = Math.abs;
var pow = Math.pow;
var EPSILON = pow(2, -52);
var EPSILON32 = pow(2, -23);
var MAX32 = pow(2, 127) * (2 - EPSILON32);
var MIN32 = pow(2, -126);

var roundTiesToEven = function (n) {
  return n + 1 / EPSILON - 1 / EPSILON;
};

// `Math.fround` method implementation
// https://tc39.es/ecma262/#sec-math.fround
// eslint-disable-next-line es/no-math-fround -- safe
module.exports = Math.fround || function fround(x) {
  var $abs = abs(x);
  var $sign = sign(x);
  var a, result;
  if ($abs < MIN32) return $sign * roundTiesToEven($abs / MIN32 / EPSILON32) * MIN32 * EPSILON32;
  a = (1 + EPSILON32 / EPSILON) * $abs;
  result = a - (a - $abs);
  // eslint-disable-next-line no-self-compare -- NaN check
  if (result > MAX32 || result != result) return $sign * Infinity;
  return $sign * result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log10.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log10.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

var log = Math.log;
var LOG10E = Math.LOG10E;

// eslint-disable-next-line es/no-math-log10 -- safe
module.exports = Math.log10 || function log10(x) {
  return log(x) * LOG10E;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

var log = Math.log;

// `Math.log1p` method implementation
// https://tc39.es/ecma262/#sec-math.log1p
// eslint-disable-next-line es/no-math-log1p -- safe
module.exports = Math.log1p || function log1p(x) {
  return (x = +x) > -1e-8 && x < 1e-8 ? x - x * x / 2 : log(1 + x);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

// `Math.sign` method implementation
// https://tc39.es/ecma262/#sec-math.sign
// eslint-disable-next-line es/no-math-sign -- safe
module.exports = Math.sign || function sign(x) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return (x = +x) == 0 || x != x ? x : x < 0 ? -1 : 1;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var macrotask = (__webpack_require__(/*! ../internals/task */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js").set);
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js");
var IS_IOS_PEBBLE = __webpack_require__(/*! ../internals/engine-is-ios-pebble */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios-pebble.js");
var IS_WEBOS_WEBKIT = __webpack_require__(/*! ../internals/engine-is-webos-webkit */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-webos-webkit.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise;
// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`
var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;

var flush, head, last, notify, toggle, node, promise, then;

// modern engines have queueMicrotask method
if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();
    while (head) {
      fn = head.fn;
      head = head.next;
      try {
        fn();
      } catch (error) {
        if (head) notify();
        else last = undefined;
        throw error;
      }
    } last = undefined;
    if (parent) parent.enter();
  };

  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898
  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, { characterData: true });
    notify = function () {
      node.data = toggle = !toggle;
    };
  // environments with maybe non-completely correct, but existent Promise
  } else if (!IS_IOS_PEBBLE && Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined);
    // workaround of WebKit ~ iOS Safari 10.1 bug
    promise.constructor = Promise;
    then = bind(promise.then, promise);
    notify = function () {
      then(flush);
    };
  // Node.js without promises
  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    };
  // for other environments - macrotask based on:
  // - setImmediate
  // - MessageChannel
  // - window.postMessag
  // - onreadystatechange
  // - setTimeout
  } else {
    // strange IE + webpack dev server bug - use .bind(global)
    macrotask = bind(macrotask, global);
    notify = function () {
      macrotask(flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = { fn: fn, next: undefined };
  if (last) last.next = task;
  if (!head) {
    head = task;
    notify();
  } last = task;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js ***!
  \*********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = global.Promise;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing
module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  var symbol = Symbol();
  // Chrome 38 Symbol has incorrect toString conversion
  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances
  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||
    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
    !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var ITERATOR = wellKnownSymbol('iterator');

module.exports = !fails(function () {
  // eslint-disable-next-line unicorn/relative-url-style -- required for testing
  var url = new URL('b?a=1&b=2&c=3', 'http://a');
  var searchParams = url.searchParams;
  var result = '';
  url.pathname = 'c%20d';
  searchParams.forEach(function (value, key) {
    searchParams['delete']('b');
    result += key + value;
  });
  return (IS_PURE && !url.toJSON)
    || !searchParams.sort
    || url.href !== 'http://a/c%20d?a=1&c=3'
    || searchParams.get('c') !== '3'
    || String(new URLSearchParams('?a=1')) !== 'a=1'
    || !searchParams[ITERATOR]
    // throws in Edge
    || new URL('https://a@b').username !== 'a'
    || new URLSearchParams(new URLSearchParams('a=b')).get('a') !== 'b'
    // not punycoded in Edge
    || new URL('http://тест').host !== 'xn--e1aybc'
    // not escaped in Chrome 62-
    || new URL('http://a#б').hash !== '#%D0%B1'
    // fails in Chrome 66-
    || result !== 'a1c3'
    // throws in Safari
    || new URL('http://x', undefined).host !== 'x';
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");

var WeakMap = global.WeakMap;

module.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aCallable(resolve);
  this.reject = aCallable(reject);
};

// `NewPromiseCapability` abstract operation
// https://tc39.es/ecma262/#sec-newpromisecapability
module.exports.f = function (C) {
  return new PromiseCapability(C);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js ***!
  \********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

module.exports = function (argument, $default) {
  return argument === undefined ? arguments.length < 2 ? '' : $default : toString(argument);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");

var TypeError = global.TypeError;

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  } return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-is-finite.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-is-finite.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var globalIsFinite = global.isFinite;

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
// eslint-disable-next-line es/no-number-isfinite -- safe
module.exports = Number.isFinite || function isFinite(it) {
  return typeof it == 'number' && globalIsFinite(it);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var trim = (__webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim);
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var charAt = uncurryThis(''.charAt);
var n$ParseFloat = global.parseFloat;
var Symbol = global.Symbol;
var ITERATOR = Symbol && Symbol.iterator;
var FORCED = 1 / n$ParseFloat(whitespaces + '-0') !== -Infinity
  // MS Edge 18- broken with boxed symbols
  || (ITERATOR && !fails(function () { n$ParseFloat(Object(ITERATOR)); }));

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
module.exports = FORCED ? function parseFloat(string) {
  var trimmedString = trim(toString(string));
  var result = n$ParseFloat(trimmedString);
  return result === 0 && charAt(trimmedString, 0) == '-' ? -0 : result;
} : n$ParseFloat;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var trim = (__webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim);
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var $parseInt = global.parseInt;
var Symbol = global.Symbol;
var ITERATOR = Symbol && Symbol.iterator;
var hex = /^[+-]?0x/i;
var exec = uncurryThis(hex.exec);
var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22
  // MS Edge 18- broken with boxed symbols
  || (ITERATOR && !fails(function () { $parseInt(Object(ITERATOR)); }));

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
module.exports = FORCED ? function parseInt(string, radix) {
  var S = trim(toString(string));
  return $parseInt(S, (radix >>> 0) || (exec(hex, S) ? 16 : 10));
} : $parseInt;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");

// eslint-disable-next-line es/no-object-assign -- safe
var $assign = Object.assign;
// eslint-disable-next-line es/no-object-defineproperty -- required for testing
var defineProperty = Object.defineProperty;
var concat = uncurryThis([].concat);

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
module.exports = !$assign || fails(function () {
  // should have correct order of operations (Edge bug)
  if (DESCRIPTORS && $assign({ b: 1 }, $assign(defineProperty({}, 'a', {
    enumerable: true,
    get: function () {
      defineProperty(this, 'b', {
        value: 3,
        enumerable: false
      });
    }
  }), { b: 2 })).b !== 1) return true;
  // should work with symbols and should have deterministic property order (V8 bug)
  var A = {};
  var B = {};
  // eslint-disable-next-line es/no-symbol -- safe
  var symbol = Symbol();
  var alphabet = 'abcdefghijklmnopqrst';
  A[symbol] = 7;
  alphabet.split('').forEach(function (chr) { B[chr] = chr; });
  return $assign({}, A)[symbol] != 7 || objectKeys($assign({}, B)).join('') != alphabet;
}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`
  var T = toObject(target);
  var argumentsLength = arguments.length;
  var index = 1;
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  var propertyIsEnumerable = propertyIsEnumerableModule.f;
  while (argumentsLength > index) {
    var S = IndexedObject(arguments[index++]);
    var keys = getOwnPropertySymbols ? concat(objectKeys(S), getOwnPropertySymbols(S)) : objectKeys(S);
    var length = keys.length;
    var j = 0;
    var key;
    while (length > j) {
      key = keys[j++];
      if (!DESCRIPTORS || call(propertyIsEnumerable, S, key)) T[key] = S[key];
    }
  } return T;
} : $assign;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* global ActiveXObject -- old IE, WSH */
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");
var html = __webpack_require__(/*! ../internals/html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js");
var documentCreateElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () { /* empty */ };

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
};

// Create object with fake `null` prototype: use ActiveX Object with cleared prototype
var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak
  return temp;
};

// Create object with fake `null` prototype: use iframe Object with cleared prototype
var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe);
  // https://github.com/zloirock/core-js/issues/475
  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
};

// Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug
var activeXDocument;
var NullProtoObject = function () {
  try {
    activeXDocument = new ActiveXObject('htmlfile');
  } catch (error) { /* ignore */ }
  NullProtoObject = typeof document != 'undefined'
    ? document.domain && activeXDocument
      ? NullProtoObjectViaActiveX(activeXDocument) // old IE
      : NullProtoObjectViaIFrame()
    : NullProtoObjectViaActiveX(activeXDocument); // WSH
  var length = enumBugKeys.length;
  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];
  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true;

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
module.exports = Object.create || function create(O, Properties) {
  var result;
  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null;
    // add "__proto__" for Object.getPrototypeOf polyfill
    result[IE_PROTO] = O;
  } else result = NullProtoObject();
  return Properties === undefined ? result : definePropertiesModule.f(result, Properties);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/v8-prototype-define-bug.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
exports.f = DESCRIPTORS && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var props = toIndexedObject(Properties);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;
  while (length > index) definePropertyModule.f(O, key = keys[index++], props[key]);
  return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js");
var V8_PROTOTYPE_DEFINE_BUG = __webpack_require__(/*! ../internals/v8-prototype-define-bug */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/v8-prototype-define-bug.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");

var TypeError = global.TypeError;
// eslint-disable-next-line es/no-object-defineproperty -- safe
var $defineProperty = Object.defineProperty;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;
var ENUMERABLE = 'enumerable';
var CONFIGURABLE = 'configurable';
var WRITABLE = 'writable';

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
exports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {
    var current = $getOwnPropertyDescriptor(O, P);
    if (current && current[WRITABLE]) {
      O[P] = Attributes.value;
      Attributes = {
        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],
        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],
        writable: false
      };
    }
  } return $defineProperty(O, P, Attributes);
} : $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPropertyKey(P);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) { /* empty */ }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js":
/*!*****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js ***!
  \*****************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var IE8_DOM_DEFINE = __webpack_require__(/*! ../internals/ie8-dom-define */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ie8-dom-define.js");

// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPropertyKey(P);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) { /* empty */ }
  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js":
/*!*********************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js ***!
  \*********************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var $getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f);
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js");

var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames
  ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return arraySlice(windowNames);
  }
};

// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window
module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && classof(it) == 'Window'
    ? getWindowNames(it)
    : $getOwnPropertyNames(toIndexedObject(it));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js");

var hiddenKeys = enumBugKeys.concat('length', 'prototype');

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe
exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js ***!
  \**************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js");

var IE_PROTO = sharedKey('IE_PROTO');
var Object = global.Object;
var ObjectPrototype = Object.prototype;

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  var object = toObject(O);
  if (hasOwn(object, IE_PROTO)) return object[IE_PROTO];
  var constructor = object.constructor;
  if (isCallable(constructor) && object instanceof constructor) {
    return constructor.prototype;
  } return object instanceof Object ? ObjectPrototype : null;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-extensible.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-extensible.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-isextensible -- safe
var $isExtensible = Object.isExtensible;
var FAILS_ON_PRIMITIVES = fails(function () { $isExtensible(1); });

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
module.exports = (FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {
  if (!isObject(it)) return false;
  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return false;
  return $isExtensible ? $isExtensible(it) : true;
} : $isExtensible;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

module.exports = uncurryThis({}.isPrototypeOf);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var indexOf = (__webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").indexOf);
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");

var push = uncurryThis([].push);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;
  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);
  // Don't enum bug & hidden keys
  while (names.length > i) if (hasOwn(O, key = names[i++])) {
    ~indexOf(result, key) || push(result, key);
  }
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var internalObjectKeys = __webpack_require__(/*! ../internals/object-keys-internal */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys-internal.js");
var enumBugKeys = __webpack_require__(/*! ../internals/enum-bug-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/enum-bug-keys.js");

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe
module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports) {

"use strict";

var $propertyIsEnumerable = {}.propertyIsEnumerable;
// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;

// Nashorn ~ JDK8 bug
var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);

// `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable
exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js":
/*!****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js");

// Forced replacement object prototype accessors methods
module.exports = IS_PURE || !fails(function () {
  // This feature detection crashes old WebKit
  // https://github.com/zloirock/core-js/issues/232
  if (WEBKIT && WEBKIT < 535) return;
  var key = Math.random();
  // In FF throws only define methods
  // eslint-disable-next-line no-undef, no-useless-call -- required for testing
  __defineSetter__.call(null, key, function () { /* empty */ });
  delete global[key];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-proto -- safe */
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe
module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;
  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = uncurryThis(Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set);
    setter(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) { /* empty */ }
  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter(O, proto);
    else O.__proto__ = proto;
    return O;
  };
}() : undefined);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var $propertyIsEnumerable = (__webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js").f);

var propertyIsEnumerable = uncurryThis($propertyIsEnumerable);
var push = uncurryThis([].push);

// `Object.{ entries, values }` methods implementation
var createMethod = function (TO_ENTRIES) {
  return function (it) {
    var O = toIndexedObject(it);
    var keys = objectKeys(O);
    var length = keys.length;
    var i = 0;
    var result = [];
    var key;
    while (length > i) {
      key = keys[i++];
      if (!DESCRIPTORS || propertyIsEnumerable(O, key)) {
        push(result, TO_ENTRIES ? [key, O[key]] : O[key]);
      }
    }
    return result;
  };
};

module.exports = {
  // `Object.entries` method
  // https://tc39.es/ecma262/#sec-object.entries
  entries: createMethod(true),
  // `Object.values` method
  // https://tc39.es/ecma262/#sec-object.values
  values: createMethod(false)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-string.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-string.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");

// `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring
module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var TypeError = global.TypeError;

// `OrdinaryToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-ordinarytoprimitive
module.exports = function (input, pref) {
  var fn, val;
  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;
  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;
  throw TypeError("Can't convert object to primitive value");
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");

var concat = uncurryThis([].concat);

// all object keys, includes non-enumerable and symbols
module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

module.exports = global;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js ***!
  \**************************************************************************************************************/
/***/ (function(module) {

module.exports = function (exec) {
  try {
    return { error: false, value: exec() };
  } catch (error) {
    return { error: true, value: error };
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var newPromiseCapability = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/queue.js":
/*!************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/queue.js ***!
  \************************************************************************************************************/
/***/ (function(module) {

var Queue = function () {
  this.head = null;
  this.tail = null;
};

Queue.prototype = {
  add: function (item) {
    var entry = { item: item, next: null };
    if (this.head) this.tail.next = entry;
    else this.head = entry;
    this.tail = entry;
  },
  get: function () {
    var entry = this.head;
    if (entry) {
      this.head = entry.next;
      if (this.tail === entry) this.tail = null;
      return entry.item;
    }
  }
};

module.exports = Queue;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");

module.exports = function (target, src, options) {
  for (var key in src) redefine(target, key, src[key], options);
  return target;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var CONFIGURABLE_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js").CONFIGURABLE);

var getInternalState = InternalStateModule.get;
var enforceInternalState = InternalStateModule.enforce;
var TEMPLATE = String(String).split('String');

(module.exports = function (O, key, value, options) {
  var unsafe = options ? !!options.unsafe : false;
  var simple = options ? !!options.enumerable : false;
  var noTargetGet = options ? !!options.noTargetGet : false;
  var name = options && options.name !== undefined ? options.name : key;
  var state;
  if (isCallable(value)) {
    if (String(name).slice(0, 7) === 'Symbol(') {
      name = '[' + String(name).replace(/^Symbol\(([^)]*)\)/, '$1') + ']';
    }
    if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {
      createNonEnumerableProperty(value, 'name', name);
    }
    state = enforceInternalState(value);
    if (!state.source) {
      state.source = TEMPLATE.join(typeof name == 'string' ? name : '');
    }
  }
  if (O === global) {
    if (simple) O[key] = value;
    else setGlobal(key, value);
    return;
  } else if (!unsafe) {
    delete O[key];
  } else if (!noTargetGet && O[key]) {
    simple = true;
  }
  if (simple) O[key] = value;
  else createNonEnumerableProperty(O, key, value);
// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative
})(Function.prototype, 'toString', function toString() {
  return isCallable(this) && getInternalState(this).source || inspectSource(this);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js ***!
  \***************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");

var TypeError = global.TypeError;

// `RegExpExec` abstract operation
// https://tc39.es/ecma262/#sec-regexpexec
module.exports = function (R, S) {
  var exec = R.exec;
  if (isCallable(exec)) {
    var result = call(exec, R, S);
    if (result !== null) anObject(result);
    return result;
  }
  if (classof(R) === 'RegExp') return call(regexpExec, R, S);
  throw TypeError('RegExp#exec called on incompatible receiver');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable regexp/no-empty-capturing-group, regexp/no-empty-group, regexp/no-lazy-ends -- testing */
/* eslint-disable regexp/no-useless-quantifier -- testing */
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var regexpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").get);
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js");

var nativeReplace = shared('native-string-replace', String.prototype.replace);
var nativeExec = RegExp.prototype.exec;
var patchedExec = nativeExec;
var charAt = uncurryThis(''.charAt);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);

var UPDATES_LAST_INDEX_WRONG = (function () {
  var re1 = /a/;
  var re2 = /b*/g;
  call(nativeExec, re1, 'a');
  call(nativeExec, re2, 'a');
  return re1.lastIndex !== 0 || re2.lastIndex !== 0;
})();

var UNSUPPORTED_Y = stickyHelpers.BROKEN_CARET;

// nonparticipating capturing group, copied from es5-shim's String#split patch.
var NPCG_INCLUDED = /()??/.exec('')[1] !== undefined;

var PATCH = UPDATES_LAST_INDEX_WRONG || NPCG_INCLUDED || UNSUPPORTED_Y || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG;

if (PATCH) {
  patchedExec = function exec(string) {
    var re = this;
    var state = getInternalState(re);
    var str = toString(string);
    var raw = state.raw;
    var result, reCopy, lastIndex, match, i, object, group;

    if (raw) {
      raw.lastIndex = re.lastIndex;
      result = call(patchedExec, raw, str);
      re.lastIndex = raw.lastIndex;
      return result;
    }

    var groups = state.groups;
    var sticky = UNSUPPORTED_Y && re.sticky;
    var flags = call(regexpFlags, re);
    var source = re.source;
    var charsAdded = 0;
    var strCopy = str;

    if (sticky) {
      flags = replace(flags, 'y', '');
      if (indexOf(flags, 'g') === -1) {
        flags += 'g';
      }

      strCopy = stringSlice(str, re.lastIndex);
      // Support anchored sticky behavior.
      if (re.lastIndex > 0 && (!re.multiline || re.multiline && charAt(str, re.lastIndex - 1) !== '\n')) {
        source = '(?: ' + source + ')';
        strCopy = ' ' + strCopy;
        charsAdded++;
      }
      // ^(? + rx + ) is needed, in combination with some str slicing, to
      // simulate the 'y' flag.
      reCopy = new RegExp('^(?:' + source + ')', flags);
    }

    if (NPCG_INCLUDED) {
      reCopy = new RegExp('^' + source + '$(?!\\s)', flags);
    }
    if (UPDATES_LAST_INDEX_WRONG) lastIndex = re.lastIndex;

    match = call(nativeExec, sticky ? reCopy : re, strCopy);

    if (sticky) {
      if (match) {
        match.input = stringSlice(match.input, charsAdded);
        match[0] = stringSlice(match[0], charsAdded);
        match.index = re.lastIndex;
        re.lastIndex += match[0].length;
      } else re.lastIndex = 0;
    } else if (UPDATES_LAST_INDEX_WRONG && match) {
      re.lastIndex = re.global ? match.index + match[0].length : lastIndex;
    }
    if (NPCG_INCLUDED && match && match.length > 1) {
      // Fix browsers whose `exec` methods don't consistently return `undefined`
      // for NPCG, like IE8. NOTE: This doesn' work for /(.?)?/
      call(nativeReplace, match[0], reCopy, function () {
        for (i = 1; i < arguments.length - 2; i++) {
          if (arguments[i] === undefined) match[i] = undefined;
        }
      });
    }

    if (match && groups) {
      match.groups = object = create(null);
      for (i = 0; i < groups.length; i++) {
        group = groups[i];
        object[group[0]] = match[group[1]];
      }
    }

    return match;
  };
}

module.exports = patchedExec;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");

// `RegExp.prototype.flags` getter implementation
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
module.exports = function () {
  var that = anObject(this);
  var result = '';
  if (that.global) result += 'g';
  if (that.ignoreCase) result += 'i';
  if (that.multiline) result += 'm';
  if (that.dotAll) result += 's';
  if (that.unicode) result += 'u';
  if (that.sticky) result += 'y';
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('a', 'y') -> /a/y and it causes SyntaxError
var $RegExp = global.RegExp;

var UNSUPPORTED_Y = fails(function () {
  var re = $RegExp('a', 'y');
  re.lastIndex = 2;
  return re.exec('abcd') != null;
});

// UC Browser bug
// https://github.com/zloirock/core-js/issues/1008
var MISSED_STICKY = UNSUPPORTED_Y || fails(function () {
  return !$RegExp('a', 'y').sticky;
});

var BROKEN_CARET = UNSUPPORTED_Y || fails(function () {
  // https://bugzilla.mozilla.org/show_bug.cgi?id=773687
  var re = $RegExp('^r', 'gy');
  re.lastIndex = 2;
  return re.exec('str') != null;
});

module.exports = {
  BROKEN_CARET: BROKEN_CARET,
  MISSED_STICKY: MISSED_STICKY,
  UNSUPPORTED_Y: UNSUPPORTED_Y
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js ***!
  \*********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('.', 's') -> /./s and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('.', 's');
  return !(re.dotAll && re.exec('\n') && re.flags === 's');
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// babel-minify and Closure Compiler transpiles RegExp('(?<a>b)', 'g') -> /(?<a>b)/g and it causes SyntaxError
var $RegExp = global.RegExp;

module.exports = fails(function () {
  var re = $RegExp('(?<a>b)', 'g');
  return re.exec('b').groups.a !== 'b' ||
    'b'.replace(re, '$<a>c') !== 'bc';
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var TypeError = global.TypeError;

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js ***!
  \*****************************************************************************************************************/
/***/ (function(module) {

// `SameValue` abstract operation
// https://tc39.es/ecma262/#sec-samevalue
// eslint-disable-next-line es/no-object-is -- safe
module.exports = Object.is || function is(x, y) {
  // eslint-disable-next-line no-self-compare -- NaN check
  return x === y ? x !== 0 || 1 / x === 1 / y : x != x && y != y;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// eslint-disable-next-line es/no-object-defineproperty -- safe
var defineProperty = Object.defineProperty;

module.exports = function (key, value) {
  try {
    defineProperty(global, key, { value: value, configurable: true, writable: true });
  } catch (error) {
    global[key] = value;
  } return value;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () { return this; }
    });
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (target, TAG, STATIC) {
  if (target && !STATIC) target = target.prototype;
  if (target && !hasOwn(target, TO_STRING_TAG)) {
    defineProperty(target, TO_STRING_TAG, { configurable: true, value: TAG });
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var setGlobal = __webpack_require__(/*! ../internals/set-global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-global.js");

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});

module.exports = store;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js ***!
  \*************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var store = __webpack_require__(/*! ../internals/shared-store */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-store.js");

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.21.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',
  license: 'https://github.com/zloirock/core-js/blob/v3.21.1/LICENSE',
  source: 'https://github.com/zloirock/core-js'
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-constructor.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var SPECIES = wellKnownSymbol('species');

// `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor
module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aConstructor(S);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// check the existence of a method, lowercase
// of a tag and escaping quotes in arguments
module.exports = function (METHOD_NAME) {
  return fails(function () {
    var test = ''[METHOD_NAME]('"');
    return test !== test.toLowerCase() || test.split('"').length > 3;
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var stringSlice = uncurryThis(''.slice);

var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = toString(requireObjectCoercible($this));
    var position = toIntegerOrInfinity(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = charCodeAt(S, position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size
      || (second = charCodeAt(S, position + 1)) < 0xDC00 || second > 0xDFFF
        ? CONVERT_TO_STRING
          ? charAt(S, position)
          : first
        : CONVERT_TO_STRING
          ? stringSlice(S, position, position + 2)
          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// https://github.com/zloirock/core-js/issues/280
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");

module.exports = /Version\/10(?:\.\d+){1,2}(?: [\w./]+)?(?: Mobile\/\w+)? Safari\//.test(userAgent);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js ***!
  \*****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// https://github.com/tc39/proposal-string-pad-start-end
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var $repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice);
var ceil = Math.ceil;

// `String.prototype.{ padStart, padEnd }` methods implementation
var createMethod = function (IS_END) {
  return function ($this, maxLength, fillString) {
    var S = toString(requireObjectCoercible($this));
    var intMaxLength = toLength(maxLength);
    var stringLength = S.length;
    var fillStr = fillString === undefined ? ' ' : toString(fillString);
    var fillLen, stringFiller;
    if (intMaxLength <= stringLength || fillStr == '') return S;
    fillLen = intMaxLength - stringLength;
    stringFiller = repeat(fillStr, ceil(fillLen / fillStr.length));
    if (stringFiller.length > fillLen) stringFiller = stringSlice(stringFiller, 0, fillLen);
    return IS_END ? S + stringFiller : stringFiller + S;
  };
};

module.exports = {
  // `String.prototype.padStart` method
  // https://tc39.es/ecma262/#sec-string.prototype.padstart
  start: createMethod(false),
  // `String.prototype.padEnd` method
  // https://tc39.es/ecma262/#sec-string.prototype.padend
  end: createMethod(true)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-punycode-to-ascii.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-punycode-to-ascii.js ***!
  \*******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// based on https://github.com/bestiejs/punycode.js/blob/master/punycode.js
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var maxInt = 2147483647; // aka. 0x7FFFFFFF or 2^31-1
var base = 36;
var tMin = 1;
var tMax = 26;
var skew = 38;
var damp = 700;
var initialBias = 72;
var initialN = 128; // 0x80
var delimiter = '-'; // '\x2D'
var regexNonASCII = /[^\0-\u007E]/; // non-ASCII chars
var regexSeparators = /[.\u3002\uFF0E\uFF61]/g; // RFC 3490 separators
var OVERFLOW_ERROR = 'Overflow: input needs wider integers to process';
var baseMinusTMin = base - tMin;

var RangeError = global.RangeError;
var exec = uncurryThis(regexSeparators.exec);
var floor = Math.floor;
var fromCharCode = String.fromCharCode;
var charCodeAt = uncurryThis(''.charCodeAt);
var join = uncurryThis([].join);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var split = uncurryThis(''.split);
var toLowerCase = uncurryThis(''.toLowerCase);

/**
 * Creates an array containing the numeric code points of each Unicode
 * character in the string. While JavaScript uses UCS-2 internally,
 * this function will convert a pair of surrogate halves (each of which
 * UCS-2 exposes as separate characters) into a single code point,
 * matching UTF-16.
 */
var ucs2decode = function (string) {
  var output = [];
  var counter = 0;
  var length = string.length;
  while (counter < length) {
    var value = charCodeAt(string, counter++);
    if (value >= 0xD800 && value <= 0xDBFF && counter < length) {
      // It's a high surrogate, and there is a next character.
      var extra = charCodeAt(string, counter++);
      if ((extra & 0xFC00) == 0xDC00) { // Low surrogate.
        push(output, ((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);
      } else {
        // It's an unmatched surrogate; only append this code unit, in case the
        // next code unit is the high surrogate of a surrogate pair.
        push(output, value);
        counter--;
      }
    } else {
      push(output, value);
    }
  }
  return output;
};

/**
 * Converts a digit/integer into a basic code point.
 */
var digitToBasic = function (digit) {
  //  0..25 map to ASCII a..z or A..Z
  // 26..35 map to ASCII 0..9
  return digit + 22 + 75 * (digit < 26);
};

/**
 * Bias adaptation function as per section 3.4 of RFC 3492.
 * https://tools.ietf.org/html/rfc3492#section-3.4
 */
var adapt = function (delta, numPoints, firstTime) {
  var k = 0;
  delta = firstTime ? floor(delta / damp) : delta >> 1;
  delta += floor(delta / numPoints);
  while (delta > baseMinusTMin * tMax >> 1) {
    delta = floor(delta / baseMinusTMin);
    k += base;
  }
  return floor(k + (baseMinusTMin + 1) * delta / (delta + skew));
};

/**
 * Converts a string of Unicode symbols (e.g. a domain name label) to a
 * Punycode string of ASCII-only symbols.
 */
var encode = function (input) {
  var output = [];

  // Convert the input in UCS-2 to an array of Unicode code points.
  input = ucs2decode(input);

  // Cache the length.
  var inputLength = input.length;

  // Initialize the state.
  var n = initialN;
  var delta = 0;
  var bias = initialBias;
  var i, currentValue;

  // Handle the basic code points.
  for (i = 0; i < input.length; i++) {
    currentValue = input[i];
    if (currentValue < 0x80) {
      push(output, fromCharCode(currentValue));
    }
  }

  var basicLength = output.length; // number of basic code points.
  var handledCPCount = basicLength; // number of code points that have been handled;

  // Finish the basic string with a delimiter unless it's empty.
  if (basicLength) {
    push(output, delimiter);
  }

  // Main encoding loop:
  while (handledCPCount < inputLength) {
    // All non-basic code points < n have been handled already. Find the next larger one:
    var m = maxInt;
    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue >= n && currentValue < m) {
        m = currentValue;
      }
    }

    // Increase `delta` enough to advance the decoder's <n,i> state to <m,0>, but guard against overflow.
    var handledCPCountPlusOne = handledCPCount + 1;
    if (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {
      throw RangeError(OVERFLOW_ERROR);
    }

    delta += (m - n) * handledCPCountPlusOne;
    n = m;

    for (i = 0; i < input.length; i++) {
      currentValue = input[i];
      if (currentValue < n && ++delta > maxInt) {
        throw RangeError(OVERFLOW_ERROR);
      }
      if (currentValue == n) {
        // Represent delta as a generalized variable-length integer.
        var q = delta;
        var k = base;
        while (true) {
          var t = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);
          if (q < t) break;
          var qMinusT = q - t;
          var baseMinusT = base - t;
          push(output, fromCharCode(digitToBasic(t + qMinusT % baseMinusT)));
          q = floor(qMinusT / baseMinusT);
          k += base;
        }

        push(output, fromCharCode(digitToBasic(q)));
        bias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);
        delta = 0;
        handledCPCount++;
      }
    }

    delta++;
    n++;
  }
  return join(output, '');
};

module.exports = function (input) {
  var encoded = [];
  var labels = split(replace(toLowerCase(input), regexSeparators, '\u002E'), '.');
  var i, label;
  for (i = 0; i < labels.length; i++) {
    label = labels[i];
    push(encoded, exec(regexNonASCII, label) ? 'xn--' + encode(label) : label);
  }
  return join(encoded, '.');
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

var RangeError = global.RangeError;

// `String.prototype.repeat` method implementation
// https://tc39.es/ecma262/#sec-string.prototype.repeat
module.exports = function repeat(count) {
  var str = toString(requireObjectCoercible(this));
  var result = '';
  var n = toIntegerOrInfinity(count);
  if (n < 0 || n == Infinity) throw RangeError('Wrong number of repetitions');
  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js ***!
  \*************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var PROPER_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js").PROPER);
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var non = '\u200B\u0085\u180E';

// check that a method works with the correct list
// of whitespaces and has a correct name
module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]()
      || non[METHOD_NAME]() !== non
      || (PROPER_FUNCTION_NAME && whitespaces[METHOD_NAME].name !== METHOD_NAME);
  });
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js ***!
  \******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var whitespaces = __webpack_require__(/*! ../internals/whitespaces */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js");

var replace = uncurryThis(''.replace);
var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$');

// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation
var createMethod = function (TYPE) {
  return function ($this) {
    var string = toString(requireObjectCoercible($this));
    if (TYPE & 1) string = replace(string, ltrim, '');
    if (TYPE & 2) string = replace(string, rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js ***!
  \***********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var html = __webpack_require__(/*! ../internals/html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/html.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");
var createElement = __webpack_require__(/*! ../internals/document-create-element */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/document-create-element.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var IS_IOS = __webpack_require__(/*! ../internals/engine-is-ios */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ios.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var Dispatch = global.Dispatch;
var Function = global.Function;
var MessageChannel = global.MessageChannel;
var String = global.String;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var location, defer, channel, port;

try {
  // Deno throws a ReferenceError on `location` access without `--location` flag
  location = global.location;
} catch (error) { /* empty */ }

var run = function (id) {
  if (hasOwn(queue, id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(String(id), location.protocol + '//' + location.host);
};

// Node.js 0.9+ & IE10+ has setImmediate, otherwise:
if (!set || !clear) {
  set = function setImmediate(handler) {
    validateArgumentsLength(arguments.length, 1);
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = arraySlice(arguments, 1);
    queue[++counter] = function () {
      apply(fn, undefined, args);
    };
    defer(counter);
    return counter;
  };
  clear = function clearImmediate(id) {
    delete queue[id];
  };
  // Node.js 0.8-
  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    };
  // Sphere (JS game engine) Dispatch API
  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    };
  // Browsers with MessageChannel, includes WebWorkers
  // except iOS - https://github.com/zloirock/core-js/issues/624
  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port);
  // Browsers with postMessage, skip WebWorkers
  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (
    global.addEventListener &&
    isCallable(global.postMessage) &&
    !global.importScripts &&
    location && location.protocol !== 'file:' &&
    !fails(post)
  ) {
    defer = post;
    global.addEventListener('message', listener, false);
  // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    };
  // Rest old browsers
  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

// `thisNumberValue` abstract operation
// https://tc39.es/ecma262/#sec-thisnumbervalue
module.exports = uncurryThis(1.0.valueOf);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");

var max = Math.max;
var min = Math.min;

// Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).
module.exports = function (index, length) {
  var integer = toIntegerOrInfinity(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js ***!
  \***************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");

var RangeError = global.RangeError;

// `ToIndex` abstract operation
// https://tc39.es/ecma262/#sec-toindex
module.exports = function (it) {
  if (it === undefined) return 0;
  var number = toIntegerOrInfinity(it);
  var length = toLength(number);
  if (number !== length) throw RangeError('Wrong length or index');
  return length;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js ***!
  \*****************************************************************************************************************************/
/***/ (function(module) {

var ceil = Math.ceil;
var floor = Math.floor;

// `ToIntegerOrInfinity` abstract operation
// https://tc39.es/ecma262/#sec-tointegerorinfinity
module.exports = function (argument) {
  var number = +argument;
  // eslint-disable-next-line no-self-compare -- safe
  return number !== number || number === 0 ? 0 : (number > 0 ? floor : ceil)(number);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");

var min = Math.min;

// `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength
module.exports = function (argument) {
  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");

var Object = global.Object;

// `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject
module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toPositiveInteger = __webpack_require__(/*! ../internals/to-positive-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-positive-integer.js");

var RangeError = global.RangeError;

module.exports = function (it, BYTES) {
  var offset = toPositiveInteger(it);
  if (offset % BYTES) throw RangeError('Wrong offset');
  return offset;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-positive-integer.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-positive-integer.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");

var RangeError = global.RangeError;

module.exports = function (it) {
  var result = toIntegerOrInfinity(it);
  if (result < 0) throw RangeError("The argument can't be less than 0");
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js ***!
  \*******************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var ordinaryToPrimitive = __webpack_require__(/*! ../internals/ordinary-to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/ordinary-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TypeError = global.TypeError;
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

// `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
module.exports = function (input, pref) {
  if (!isObject(input) || isSymbol(input)) return input;
  var exoticToPrim = getMethod(input, TO_PRIMITIVE);
  var result;
  if (exoticToPrim) {
    if (pref === undefined) pref = 'default';
    result = call(exoticToPrim, input, pref);
    if (!isObject(result) || isSymbol(result)) return result;
    throw TypeError("Can't convert object to primitive value");
  }
  if (pref === undefined) pref = 'number';
  return ordinaryToPrimitive(input, pref);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");

// `ToPropertyKey` abstract operation
// https://tc39.es/ecma262/#sec-topropertykey
module.exports = function (argument) {
  var key = toPrimitive(argument, 'string');
  return isSymbol(key) ? key : key + '';
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js ***!
  \****************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};

test[TO_STRING_TAG] = 'z';

module.exports = String(test) === '[object z]';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js ***!
  \****************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");

var String = global.String;

module.exports = function (argument) {
  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');
  return String(argument);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-node-require.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-node-require.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

module.exports = function (name) {
  try {
    // eslint-disable-next-line no-new-func -- safe
    if (IS_NODE) return Function('return require("' + name + '")')();
  } catch (error) { /* empty */ }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-to-string.js ***!
  \********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var String = global.String;

module.exports = function (argument) {
  try {
    return String(argument);
  } catch (error) {
    return 'Object';
  }
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var isIntegralNumber = __webpack_require__(/*! ../internals/is-integral-number */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integral-number.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toIndex = __webpack_require__(/*! ../internals/to-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-index.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f);
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js");
var forEach = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach);
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");

var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var round = Math.round;
var RangeError = global.RangeError;
var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var ArrayBufferPrototype = ArrayBuffer.prototype;
var DataView = ArrayBufferModule.DataView;
var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;
var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var TYPED_ARRAY_TAG = ArrayBufferViewCore.TYPED_ARRAY_TAG;
var TypedArray = ArrayBufferViewCore.TypedArray;
var TypedArrayPrototype = ArrayBufferViewCore.TypedArrayPrototype;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var isTypedArray = ArrayBufferViewCore.isTypedArray;
var BYTES_PER_ELEMENT = 'BYTES_PER_ELEMENT';
var WRONG_LENGTH = 'Wrong length';

var fromList = function (C, list) {
  aTypedArrayConstructor(C);
  var index = 0;
  var length = list.length;
  var result = new C(length);
  while (length > index) result[index] = list[index++];
  return result;
};

var addGetter = function (it, key) {
  nativeDefineProperty(it, key, { get: function () {
    return getInternalState(this)[key];
  } });
};

var isArrayBuffer = function (it) {
  var klass;
  return isPrototypeOf(ArrayBufferPrototype, it) || (klass = classof(it)) == 'ArrayBuffer' || klass == 'SharedArrayBuffer';
};

var isTypedArrayIndex = function (target, key) {
  return isTypedArray(target)
    && !isSymbol(key)
    && key in target
    && isIntegralNumber(+key)
    && key >= 0;
};

var wrappedGetOwnPropertyDescriptor = function getOwnPropertyDescriptor(target, key) {
  key = toPropertyKey(key);
  return isTypedArrayIndex(target, key)
    ? createPropertyDescriptor(2, target[key])
    : nativeGetOwnPropertyDescriptor(target, key);
};

var wrappedDefineProperty = function defineProperty(target, key, descriptor) {
  key = toPropertyKey(key);
  if (isTypedArrayIndex(target, key)
    && isObject(descriptor)
    && hasOwn(descriptor, 'value')
    && !hasOwn(descriptor, 'get')
    && !hasOwn(descriptor, 'set')
    // TODO: add validation descriptor w/o calling accessors
    && !descriptor.configurable
    && (!hasOwn(descriptor, 'writable') || descriptor.writable)
    && (!hasOwn(descriptor, 'enumerable') || descriptor.enumerable)
  ) {
    target[key] = descriptor.value;
    return target;
  } return nativeDefineProperty(target, key, descriptor);
};

if (DESCRIPTORS) {
  if (!NATIVE_ARRAY_BUFFER_VIEWS) {
    getOwnPropertyDescriptorModule.f = wrappedGetOwnPropertyDescriptor;
    definePropertyModule.f = wrappedDefineProperty;
    addGetter(TypedArrayPrototype, 'buffer');
    addGetter(TypedArrayPrototype, 'byteOffset');
    addGetter(TypedArrayPrototype, 'byteLength');
    addGetter(TypedArrayPrototype, 'length');
  }

  $({ target: 'Object', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
    getOwnPropertyDescriptor: wrappedGetOwnPropertyDescriptor,
    defineProperty: wrappedDefineProperty
  });

  module.exports = function (TYPE, wrapper, CLAMPED) {
    var BYTES = TYPE.match(/\d+$/)[0] / 8;
    var CONSTRUCTOR_NAME = TYPE + (CLAMPED ? 'Clamped' : '') + 'Array';
    var GETTER = 'get' + TYPE;
    var SETTER = 'set' + TYPE;
    var NativeTypedArrayConstructor = global[CONSTRUCTOR_NAME];
    var TypedArrayConstructor = NativeTypedArrayConstructor;
    var TypedArrayConstructorPrototype = TypedArrayConstructor && TypedArrayConstructor.prototype;
    var exported = {};

    var getter = function (that, index) {
      var data = getInternalState(that);
      return data.view[GETTER](index * BYTES + data.byteOffset, true);
    };

    var setter = function (that, index, value) {
      var data = getInternalState(that);
      if (CLAMPED) value = (value = round(value)) < 0 ? 0 : value > 0xFF ? 0xFF : value & 0xFF;
      data.view[SETTER](index * BYTES + data.byteOffset, value, true);
    };

    var addElement = function (that, index) {
      nativeDefineProperty(that, index, {
        get: function () {
          return getter(this, index);
        },
        set: function (value) {
          return setter(this, index, value);
        },
        enumerable: true
      });
    };

    if (!NATIVE_ARRAY_BUFFER_VIEWS) {
      TypedArrayConstructor = wrapper(function (that, data, offset, $length) {
        anInstance(that, TypedArrayConstructorPrototype);
        var index = 0;
        var byteOffset = 0;
        var buffer, byteLength, length;
        if (!isObject(data)) {
          length = toIndex(data);
          byteLength = length * BYTES;
          buffer = new ArrayBuffer(byteLength);
        } else if (isArrayBuffer(data)) {
          buffer = data;
          byteOffset = toOffset(offset, BYTES);
          var $len = data.byteLength;
          if ($length === undefined) {
            if ($len % BYTES) throw RangeError(WRONG_LENGTH);
            byteLength = $len - byteOffset;
            if (byteLength < 0) throw RangeError(WRONG_LENGTH);
          } else {
            byteLength = toLength($length) * BYTES;
            if (byteLength + byteOffset > $len) throw RangeError(WRONG_LENGTH);
          }
          length = byteLength / BYTES;
        } else if (isTypedArray(data)) {
          return fromList(TypedArrayConstructor, data);
        } else {
          return call(typedArrayFrom, TypedArrayConstructor, data);
        }
        setInternalState(that, {
          buffer: buffer,
          byteOffset: byteOffset,
          byteLength: byteLength,
          length: length,
          view: new DataView(buffer)
        });
        while (index < length) addElement(that, index++);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      TypedArrayConstructorPrototype = TypedArrayConstructor.prototype = create(TypedArrayPrototype);
    } else if (TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS) {
      TypedArrayConstructor = wrapper(function (dummy, data, typedArrayOffset, $length) {
        anInstance(dummy, TypedArrayConstructorPrototype);
        return inheritIfRequired(function () {
          if (!isObject(data)) return new NativeTypedArrayConstructor(toIndex(data));
          if (isArrayBuffer(data)) return $length !== undefined
            ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES), $length)
            : typedArrayOffset !== undefined
              ? new NativeTypedArrayConstructor(data, toOffset(typedArrayOffset, BYTES))
              : new NativeTypedArrayConstructor(data);
          if (isTypedArray(data)) return fromList(TypedArrayConstructor, data);
          return call(typedArrayFrom, TypedArrayConstructor, data);
        }(), dummy, TypedArrayConstructor);
      });

      if (setPrototypeOf) setPrototypeOf(TypedArrayConstructor, TypedArray);
      forEach(getOwnPropertyNames(NativeTypedArrayConstructor), function (key) {
        if (!(key in TypedArrayConstructor)) {
          createNonEnumerableProperty(TypedArrayConstructor, key, NativeTypedArrayConstructor[key]);
        }
      });
      TypedArrayConstructor.prototype = TypedArrayConstructorPrototype;
    }

    if (TypedArrayConstructorPrototype.constructor !== TypedArrayConstructor) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, 'constructor', TypedArrayConstructor);
    }

    createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_CONSTRUCTOR, TypedArrayConstructor);

    if (TYPED_ARRAY_TAG) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, TYPED_ARRAY_TAG, CONSTRUCTOR_NAME);
    }

    exported[CONSTRUCTOR_NAME] = TypedArrayConstructor;

    $({
      global: true, forced: TypedArrayConstructor != NativeTypedArrayConstructor, sham: !NATIVE_ARRAY_BUFFER_VIEWS
    }, exported);

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructor)) {
      createNonEnumerableProperty(TypedArrayConstructor, BYTES_PER_ELEMENT, BYTES);
    }

    if (!(BYTES_PER_ELEMENT in TypedArrayConstructorPrototype)) {
      createNonEnumerableProperty(TypedArrayConstructorPrototype, BYTES_PER_ELEMENT, BYTES);
    }

    setSpecies(CONSTRUCTOR_NAME);
  };
} else module.exports = function () { /* empty */ };


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js":
/*!************************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js ***!
  \************************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-new -- required for testing */
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");
var NATIVE_ARRAY_BUFFER_VIEWS = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").NATIVE_ARRAY_BUFFER_VIEWS);

var ArrayBuffer = global.ArrayBuffer;
var Int8Array = global.Int8Array;

module.exports = !NATIVE_ARRAY_BUFFER_VIEWS || !fails(function () {
  Int8Array(1);
}) || !fails(function () {
  new Int8Array(-1);
}) || !checkCorrectnessOfIteration(function (iterable) {
  new Int8Array();
  new Int8Array(null);
  new Int8Array(1.5);
  new Int8Array(iterable);
}, true) || fails(function () {
  // Safari (11+) bug - a reason why even Safari 13 should load a typed array polyfill
  return new Int8Array(new ArrayBuffer(2), 1, undefined).length !== 1;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from-species-and-list.js":
/*!****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from-species-and-list.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var arrayFromConstructorAndList = __webpack_require__(/*! ../internals/array-from-constructor-and-list */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from-constructor-and-list.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");

module.exports = function (instance, list) {
  return arrayFromConstructorAndList(typedArraySpeciesConstructor(instance), list);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js ***!
  \***********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-constructor.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");
var isArrayIteratorMethod = __webpack_require__(/*! ../internals/is-array-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array-iterator-method.js");
var aTypedArrayConstructor = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").aTypedArrayConstructor);

module.exports = function from(source /* , mapfn, thisArg */) {
  var C = aConstructor(this);
  var O = toObject(source);
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var i, length, result, step, iterator, next;
  if (iteratorMethod && !isArrayIteratorMethod(iteratorMethod)) {
    iterator = getIterator(O, iteratorMethod);
    next = iterator.next;
    O = [];
    while (!(step = call(next, iterator)).done) {
      O.push(step.value);
    }
  }
  if (mapping && argumentsLength > 2) {
    mapfn = bind(mapfn, arguments[2]);
  }
  length = lengthOfArrayLike(O);
  result = new (aTypedArrayConstructor(C))(length);
  for (i = 0; length > i; i++) {
    result[i] = mapping ? mapfn(O[i], i) : O[i];
  }
  return result;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js":
/*!**************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js ***!
  \**************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");

var TYPED_ARRAY_CONSTRUCTOR = ArrayBufferViewCore.TYPED_ARRAY_CONSTRUCTOR;
var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;

// a part of `TypedArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#typedarray-species-create
module.exports = function (originalArray) {
  return aTypedArrayConstructor(speciesConstructor(originalArray, originalArray[TYPED_ARRAY_CONSTRUCTOR]));
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js":
/*!**********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js ***!
  \**********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var id = 0;
var postfix = Math.random();
var toString = uncurryThis(1.0.toString);

module.exports = function (key) {
  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js");

module.exports = NATIVE_SYMBOL
  && !Symbol.sham
  && typeof Symbol.iterator == 'symbol';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/v8-prototype-define-bug.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/v8-prototype-define-bug.js ***!
  \******************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// V8 ~ Chrome 36-
// https://bugs.chromium.org/p/v8/issues/detail?id=3334
module.exports = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty(function () { /* empty */ }, 'prototype', {
    value: 42,
    writable: false
  }).prototype != 42;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js ***!
  \********************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

var TypeError = global.TypeError;

module.exports = function (passed, required) {
  if (passed < required) throw TypeError('Not enough arguments');
  return passed;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

exports.f = wellKnownSymbol;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js ***!
  \************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js");
var USE_SYMBOL_AS_UID = __webpack_require__(/*! ../internals/use-symbol-as-uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/use-symbol-as-uid.js");

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var symbolFor = Symbol && Symbol['for'];
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    var description = 'Symbol.' + name;
    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else if (USE_SYMBOL_AS_UID && symbolFor) {
      WellKnownSymbolsStore[name] = symbolFor(description);
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);
    }
  } return WellKnownSymbolsStore[name];
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/whitespaces.js ***!
  \******************************************************************************************************************/
/***/ (function(module) {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' +
  '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/wrap-error-constructor-with-cause.js":
/*!****************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/wrap-error-constructor-with-cause.js ***!
  \****************************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");
var normalizeStringArgument = __webpack_require__(/*! ../internals/normalize-string-argument */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js");
var installErrorCause = __webpack_require__(/*! ../internals/install-error-cause */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/install-error-cause.js");
var clearErrorStack = __webpack_require__(/*! ../internals/clear-error-stack */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/clear-error-stack.js");
var ERROR_STACK_INSTALLABLE = __webpack_require__(/*! ../internals/error-stack-installable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-stack-installable.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

module.exports = function (FULL_NAME, wrapper, FORCED, IS_AGGREGATE_ERROR) {
  var OPTIONS_POSITION = IS_AGGREGATE_ERROR ? 2 : 1;
  var path = FULL_NAME.split('.');
  var ERROR_NAME = path[path.length - 1];
  var OriginalError = getBuiltIn.apply(null, path);

  if (!OriginalError) return;

  var OriginalErrorPrototype = OriginalError.prototype;

  // V8 9.3- bug https://bugs.chromium.org/p/v8/issues/detail?id=12006
  if (!IS_PURE && hasOwn(OriginalErrorPrototype, 'cause')) delete OriginalErrorPrototype.cause;

  if (!FORCED) return OriginalError;

  var BaseError = getBuiltIn('Error');

  var WrappedError = wrapper(function (a, b) {
    var message = normalizeStringArgument(IS_AGGREGATE_ERROR ? b : a, undefined);
    var result = IS_AGGREGATE_ERROR ? new OriginalError(a) : new OriginalError();
    if (message !== undefined) createNonEnumerableProperty(result, 'message', message);
    if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(result, 'stack', clearErrorStack(result.stack, 2));
    if (this && isPrototypeOf(OriginalErrorPrototype, this)) inheritIfRequired(result, this, WrappedError);
    if (arguments.length > OPTIONS_POSITION) installErrorCause(result, arguments[OPTIONS_POSITION]);
    return result;
  });

  WrappedError.prototype = OriginalErrorPrototype;

  if (ERROR_NAME !== 'Error') {
    if (setPrototypeOf) setPrototypeOf(WrappedError, BaseError);
    else copyConstructorProperties(WrappedError, BaseError, { name: true });
  }

  copyConstructorProperties(WrappedError, OriginalError);

  if (!IS_PURE) try {
    // Safari 13- bug: WebAssembly errors does not have a proper `.name`
    if (OriginalErrorPrototype.name !== ERROR_NAME) {
      createNonEnumerableProperty(OriginalErrorPrototype, 'name', ERROR_NAME);
    }
    OriginalErrorPrototype.constructor = WrappedError;
  } catch (error) { /* empty */ }

  return WrappedError;
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.cause.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.cause.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wrapErrorConstructorWithCause = __webpack_require__(/*! ../internals/wrap-error-constructor-with-cause */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/wrap-error-constructor-with-cause.js");

var AGGREGATE_ERROR = 'AggregateError';
var $AggregateError = getBuiltIn(AGGREGATE_ERROR);
var FORCED = !fails(function () {
  return $AggregateError([1]).errors[0] !== 1;
}) && fails(function () {
  return $AggregateError([1], AGGREGATE_ERROR, { cause: 7 }).cause !== 7;
});

// https://github.com/tc39/proposal-error-cause
$({ global: true, forced: FORCED }, {
  AggregateError: wrapErrorConstructorWithCause(AGGREGATE_ERROR, function (init) {
    // eslint-disable-next-line no-unused-vars -- required for functions `.length`
    return function AggregateError(errors, message) { return apply(init, this, arguments); };
  }, FORCED, true)
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var clearErrorStack = __webpack_require__(/*! ../internals/clear-error-stack */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/clear-error-stack.js");
var installErrorCause = __webpack_require__(/*! ../internals/install-error-cause */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/install-error-cause.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var normalizeStringArgument = __webpack_require__(/*! ../internals/normalize-string-argument */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var ERROR_STACK_INSTALLABLE = __webpack_require__(/*! ../internals/error-stack-installable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-stack-installable.js");

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var Error = global.Error;
var push = [].push;

var $AggregateError = function AggregateError(errors, message /* , options */) {
  var options = arguments.length > 2 ? arguments[2] : undefined;
  var isInstance = isPrototypeOf(AggregateErrorPrototype, this);
  var that;
  if (setPrototypeOf) {
    that = setPrototypeOf(new Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);
  } else {
    that = isInstance ? this : create(AggregateErrorPrototype);
    createNonEnumerableProperty(that, TO_STRING_TAG, 'Error');
  }
  if (message !== undefined) createNonEnumerableProperty(that, 'message', normalizeStringArgument(message));
  if (ERROR_STACK_INSTALLABLE) createNonEnumerableProperty(that, 'stack', clearErrorStack(that.stack, 1));
  installErrorCause(that, options);
  var errorsArray = [];
  iterate(errors, push, { that: errorsArray });
  createNonEnumerableProperty(that, 'errors', errorsArray);
  return that;
};

if (setPrototypeOf) setPrototypeOf($AggregateError, Error);
else copyConstructorProperties($AggregateError, Error, { name: true });

var AggregateErrorPrototype = $AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(1, $AggregateError),
  message: createPropertyDescriptor(1, ''),
  name: createPropertyDescriptor(1, 'AggregateError')
});

// `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor
$({ global: true }, {
  AggregateError: $AggregateError
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.constructor.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.constructor.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var arrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");

var ARRAY_BUFFER = 'ArrayBuffer';
var ArrayBuffer = arrayBufferModule[ARRAY_BUFFER];
var NativeArrayBuffer = global[ARRAY_BUFFER];

// `ArrayBuffer` constructor
// https://tc39.es/ecma262/#sec-arraybuffer-constructor
$({ global: true, forced: NativeArrayBuffer !== ArrayBuffer }, {
  ArrayBuffer: ArrayBuffer
});

setSpecies(ARRAY_BUFFER);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.is-view.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.is-view.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");

var NATIVE_ARRAY_BUFFER_VIEWS = ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS;

// `ArrayBuffer.isView` method
// https://tc39.es/ecma262/#sec-arraybuffer.isview
$({ target: 'ArrayBuffer', stat: true, forced: !NATIVE_ARRAY_BUFFER_VIEWS }, {
  isView: ArrayBufferViewCore.isView
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.slice.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.slice.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");

var ArrayBuffer = ArrayBufferModule.ArrayBuffer;
var DataView = ArrayBufferModule.DataView;
var DataViewPrototype = DataView.prototype;
var un$ArrayBufferSlice = uncurryThis(ArrayBuffer.prototype.slice);
var getUint8 = uncurryThis(DataViewPrototype.getUint8);
var setUint8 = uncurryThis(DataViewPrototype.setUint8);

var INCORRECT_SLICE = fails(function () {
  return !new ArrayBuffer(2).slice(1, undefined).byteLength;
});

// `ArrayBuffer.prototype.slice` method
// https://tc39.es/ecma262/#sec-arraybuffer.prototype.slice
$({ target: 'ArrayBuffer', proto: true, unsafe: true, forced: INCORRECT_SLICE }, {
  slice: function slice(start, end) {
    if (un$ArrayBufferSlice && end === undefined) {
      return un$ArrayBufferSlice(anObject(this), start); // FF fix
    }
    var length = anObject(this).byteLength;
    var first = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    var result = new (speciesConstructor(this, ArrayBuffer))(toLength(fin - first));
    var viewSource = new DataView(this);
    var viewTarget = new DataView(result);
    var index = 0;
    while (first < fin) {
      setUint8(viewTarget, index++, getUint8(viewSource, first++));
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.at.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.at.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method
$({ target: 'Array', proto: true }, {
  at: function at(index) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var relativeIndex = toIntegerOrInfinity(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return (k < 0 || k >= len) ? undefined : O[k];
  }
});

addToUnscopables('at');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.concat.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.concat.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded';
var TypeError = global.TypeError;

// We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679
var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});

var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT;

// `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species
$({ target: 'Array', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;
    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];
      if (isConcatSpreadable(E)) {
        len = lengthOfArrayLike(E);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }
    A.length = n;
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.copy-within.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.copy-within.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var copyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-array.prototype.copywithin
$({ target: 'Array', proto: true }, {
  copyWithin: copyWithin
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('copyWithin');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.every.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.every.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $every = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").every);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('every');

// `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  every: function every(callbackfn /* , thisArg */) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.fill.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.fill.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fill = __webpack_require__(/*! ../internals/array-fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.fill` method
// https://tc39.es/ecma262/#sec-array.prototype.fill
$({ target: 'Array', proto: true }, {
  fill: fill
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('fill');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.filter.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.filter.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $filter = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").filter);
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');

// `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  filter: function filter(callbackfn /* , thisArg */) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find-index.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find-index.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $findIndex = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").findIndex);
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

var FIND_INDEX = 'findIndex';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });

// `Array.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-array.prototype.findindex
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  findIndex: function findIndex(callbackfn /* , that = undefined */) {
    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND_INDEX);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $find = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").find);
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

var FIND = 'find';
var SKIPS_HOLES = true;

// Shouldn't skip holes
if (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES = false; });

// `Array.prototype.find` method
// https://tc39.es/ecma262/#sec-array.prototype.find
$({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {
  find: function find(callbackfn /* , that = undefined */) {
    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables(FIND);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat-map.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat-map.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flatMap` method
// https://tc39.es/ecma262/#sec-array.prototype.flatmap
$({ target: 'Array', proto: true }, {
  flatMap: function flatMap(callbackfn /* , thisArg */) {
    var O = toObject(this);
    var sourceLen = lengthOfArrayLike(O);
    var A;
    aCallable(callbackfn);
    A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var flattenIntoArray = __webpack_require__(/*! ../internals/flatten-into-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/flatten-into-array.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");

// `Array.prototype.flat` method
// https://tc39.es/ecma262/#sec-array.prototype.flat
$({ target: 'Array', proto: true }, {
  flat: function flat(/* depthArg = 1 */) {
    var depthArg = arguments.length ? arguments[0] : undefined;
    var O = toObject(this);
    var sourceLen = lengthOfArrayLike(O);
    var A = arraySpeciesCreate(O, 0);
    A.length = flattenIntoArray(A, O, O, sourceLen, 0, depthArg === undefined ? 1 : toIntegerOrInfinity(depthArg));
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.for-each.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.for-each.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js");

// `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe
$({ target: 'Array', proto: true, forced: [].forEach != forEach }, {
  forEach: forEach
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.from.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.from.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var from = __webpack_require__(/*! ../internals/array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
});

// `Array.from` method
// https://tc39.es/ecma262/#sec-array.from
$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {
  from: from
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.includes.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.includes.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $includes = (__webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").includes);
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes
$({ target: 'Array', proto: true }, {
  includes: function includes(el /* , fromIndex = 0 */) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
});

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('includes');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.index-of.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.index-of.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-array-prototype-indexof -- required for testing */
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var $IndexOf = (__webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").indexOf);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var un$IndexOf = uncurryThis([].indexOf);

var NEGATIVE_ZERO = !!un$IndexOf && 1 / un$IndexOf([1], 1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf');

// `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof
$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD }, {
  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {
    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;
    return NEGATIVE_ZERO
      // convert -0 to +0
      ? un$IndexOf(this, searchElement, fromIndex) || 0
      : $IndexOf(this, searchElement, fromIndex);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.is-array.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.is-array.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");

// `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray
$({ target: 'Array', stat: true }, {
  isArray: isArray
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js ***!
  \**********************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");
var Iterators = __webpack_require__(/*! ../internals/iterators */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterators.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR);

// `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator
module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated), // target
    index: 0,                          // next index
    kind: kind                         // kind
  });
// `%ArrayIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;
  if (!target || index >= target.length) {
    state.target = undefined;
    return { value: undefined, done: true };
  }
  if (kind == 'keys') return { value: index, done: false };
  if (kind == 'values') return { value: target[index], done: false };
  return { value: [index, target[index]], done: false };
}, 'values');

// argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject
var values = Iterators.Arguments = Iterators.Array;

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

// V8 ~ Chrome 45- bug
if (!IS_PURE && DESCRIPTORS && values.name !== 'values') try {
  defineProperty(values, 'name', { value: 'values' });
} catch (error) { /* empty */ }


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.join.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.join.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var IndexedObject = __webpack_require__(/*! ../internals/indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/indexed-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var un$Join = uncurryThis([].join);

var ES3_STRINGS = IndexedObject != Object;
var STRICT_METHOD = arrayMethodIsStrict('join', ',');

// `Array.prototype.join` method
// https://tc39.es/ecma262/#sec-array.prototype.join
$({ target: 'Array', proto: true, forced: ES3_STRINGS || !STRICT_METHOD }, {
  join: function join(separator) {
    return un$Join(toIndexedObject(this), separator === undefined ? ',' : separator);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.last-index-of.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.last-index-of.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js");

// `Array.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.lastindexof
// eslint-disable-next-line es/no-array-prototype-lastindexof -- required for testing
$({ target: 'Array', proto: true, forced: lastIndexOf !== [].lastIndexOf }, {
  lastIndexOf: lastIndexOf
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.map.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.map.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $map = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").map);
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');

// `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  map: function map(callbackfn /* , thisArg */) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.of.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.of.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

var Array = global.Array;

var ISNT_GENERIC = fails(function () {
  function F() { /* empty */ }
  return !(Array.of.call(F) instanceof F);
});

// `Array.of` method
// https://tc39.es/ecma262/#sec-array.of
// WebKit Array.of isn't generic
$({ target: 'Array', stat: true, forced: ISNT_GENERIC }, {
  of: function of(/* ...args */) {
    var index = 0;
    var argumentsLength = arguments.length;
    var result = new (isConstructor(this) ? this : Array)(argumentsLength);
    while (argumentsLength > index) createProperty(result, index, arguments[index++]);
    result.length = argumentsLength;
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce-right.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce-right.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $reduceRight = (__webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").right);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");
var CHROME_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var STRICT_METHOD = arrayMethodIsStrict('reduceRight');
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduceRight` method
// https://tc39.es/ecma262/#sec-array.prototype.reduceright
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
  reduceRight: function reduceRight(callbackfn /* , initialValue */) {
    return $reduceRight(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $reduce = (__webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").left);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");
var CHROME_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var STRICT_METHOD = arrayMethodIsStrict('reduce');
// Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982
var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;

// `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce
$({ target: 'Array', proto: true, forced: !STRICT_METHOD || CHROME_BUG }, {
  reduce: function reduce(callbackfn /* , initialValue */) {
    var length = arguments.length;
    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reverse.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reverse.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");

var un$Reverse = uncurryThis([].reverse);
var test = [1, 2];

// `Array.prototype.reverse` method
// https://tc39.es/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794
$({ target: 'Array', proto: true, forced: String(test) === String(test.reverse()) }, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign -- dirty hack
    if (isArray(this)) this.length = this.length;
    return un$Reverse(this);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.slice.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.slice.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");
var un$Slice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');

var SPECIES = wellKnownSymbol('species');
var Array = global.Array;
var max = Math.max;

// `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = lengthOfArrayLike(O);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length);
    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible
    var Constructor, result, n;
    if (isArray(O)) {
      Constructor = O.constructor;
      // cross-realm fallback
      if (isConstructor(Constructor) && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }
      if (Constructor === Array || Constructor === undefined) {
        return un$Slice(O, k, fin);
      }
    }
    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));
    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);
    result.length = n;
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.some.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.some.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $some = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").some);
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");

var STRICT_METHOD = arrayMethodIsStrict('some');

// `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some
$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {
  some: function some(callbackfn /* , thisArg */) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.sort.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.sort.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var internalSort = __webpack_require__(/*! ../internals/array-sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js");
var arrayMethodIsStrict = __webpack_require__(/*! ../internals/array-method-is-strict */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-is-strict.js");
var FF = __webpack_require__(/*! ../internals/engine-ff-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js");
var IE_OR_EDGE = __webpack_require__(/*! ../internals/engine-is-ie-or-edge */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js");
var V8 = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js");

var test = [];
var un$Sort = uncurryThis(test.sort);
var push = uncurryThis(test.push);

// IE8-
var FAILS_ON_UNDEFINED = fails(function () {
  test.sort(undefined);
});
// V8 bug
var FAILS_ON_NULL = fails(function () {
  test.sort(null);
});
// Old WebKit
var STRICT_METHOD = arrayMethodIsStrict('sort');

var STABLE_SORT = !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 70;
  if (FF && FF > 3) return;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 603;

  var result = '';
  var code, chr, value, index;

  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)
  for (code = 65; code < 76; code++) {
    chr = String.fromCharCode(code);

    switch (code) {
      case 66: case 69: case 70: case 72: value = 3; break;
      case 68: case 71: value = 4; break;
      default: value = 2;
    }

    for (index = 0; index < 47; index++) {
      test.push({ k: chr + index, v: value });
    }
  }

  test.sort(function (a, b) { return b.v - a.v; });

  for (index = 0; index < test.length; index++) {
    chr = test[index].k.charAt(0);
    if (result.charAt(result.length - 1) !== chr) result += chr;
  }

  return result !== 'DGBEFHACIJK';
});

var FORCED = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD || !STABLE_SORT;

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (y === undefined) return -1;
    if (x === undefined) return 1;
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    return toString(x) > toString(y) ? 1 : -1;
  };
};

// `Array.prototype.sort` method
// https://tc39.es/ecma262/#sec-array.prototype.sort
$({ target: 'Array', proto: true, forced: FORCED }, {
  sort: function sort(comparefn) {
    if (comparefn !== undefined) aCallable(comparefn);

    var array = toObject(this);

    if (STABLE_SORT) return comparefn === undefined ? un$Sort(array) : un$Sort(array, comparefn);

    var items = [];
    var arrayLength = lengthOfArrayLike(array);
    var itemsLength, index;

    for (index = 0; index < arrayLength; index++) {
      if (index in array) push(items, array[index]);
    }

    internalSort(items, getSortCompare(comparefn));

    itemsLength = items.length;
    index = 0;

    while (index < itemsLength) array[index] = items[index++];
    while (index < arrayLength) delete array[index++];

    return array;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.species.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.species.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");

// `Array[@@species]` getter
// https://tc39.es/ecma262/#sec-get-array-@@species
setSpecies('Array');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.splice.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.splice.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var arraySpeciesCreate = __webpack_require__(/*! ../internals/array-species-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-species-create.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var arrayMethodHasSpeciesSupport = __webpack_require__(/*! ../internals/array-method-has-species-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-method-has-species-support.js");

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('splice');

var TypeError = global.TypeError;
var max = Math.max;
var min = Math.min;
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_LENGTH_EXCEEDED = 'Maximum allowed length exceeded';

// `Array.prototype.splice` method
// https://tc39.es/ecma262/#sec-array.prototype.splice
// with adding support of @@species
$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {
  splice: function splice(start, deleteCount /* , ...items */) {
    var O = toObject(this);
    var len = lengthOfArrayLike(O);
    var actualStart = toAbsoluteIndex(start, len);
    var argumentsLength = arguments.length;
    var insertCount, actualDeleteCount, A, k, from, to;
    if (argumentsLength === 0) {
      insertCount = actualDeleteCount = 0;
    } else if (argumentsLength === 1) {
      insertCount = 0;
      actualDeleteCount = len - actualStart;
    } else {
      insertCount = argumentsLength - 2;
      actualDeleteCount = min(max(toIntegerOrInfinity(deleteCount), 0), len - actualStart);
    }
    if (len + insertCount - actualDeleteCount > MAX_SAFE_INTEGER) {
      throw TypeError(MAXIMUM_ALLOWED_LENGTH_EXCEEDED);
    }
    A = arraySpeciesCreate(O, actualDeleteCount);
    for (k = 0; k < actualDeleteCount; k++) {
      from = actualStart + k;
      if (from in O) createProperty(A, k, O[from]);
    }
    A.length = actualDeleteCount;
    if (insertCount < actualDeleteCount) {
      for (k = actualStart; k < len - actualDeleteCount; k++) {
        from = k + actualDeleteCount;
        to = k + insertCount;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
      for (k = len; k > len - actualDeleteCount + insertCount; k--) delete O[k - 1];
    } else if (insertCount > actualDeleteCount) {
      for (k = len - actualDeleteCount; k > actualStart; k--) {
        from = k + actualDeleteCount - 1;
        to = k + insertCount - 1;
        if (from in O) O[to] = O[from];
        else delete O[to];
      }
    }
    for (k = 0; k < insertCount; k++) {
      O[k + actualStart] = arguments[k + 2];
    }
    O.length = len - actualDeleteCount + insertCount;
    return A;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat-map.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat-map.js ***!
  \**********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('flatMap');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

// this method was added to unscopables after implementation
// in popular engines, so it's moved to a separate module
var addToUnscopables = __webpack_require__(/*! ../internals/add-to-unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/add-to-unscopables.js");

// https://tc39.es/ecma262/#sec-array.prototype-@@unscopables
addToUnscopables('flat');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.data-view.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.data-view.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var ArrayBufferModule = __webpack_require__(/*! ../internals/array-buffer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer.js");
var NATIVE_ARRAY_BUFFER = __webpack_require__(/*! ../internals/array-buffer-native */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-native.js");

// `DataView` constructor
// https://tc39.es/ecma262/#sec-dataview-constructor
$({ global: true, forced: !NATIVE_ARRAY_BUFFER }, {
  DataView: ArrayBufferModule.DataView
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.get-year.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.get-year.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var FORCED = fails(function () {
  return new Date(16e11).getYear() !== 120;
});

var getFullYear = uncurryThis(Date.prototype.getFullYear);

// `Date.prototype.getYear` method
// https://tc39.es/ecma262/#sec-date.prototype.getyear
$({ target: 'Date', proto: true, forced: FORCED }, {
  getYear: function getYear() {
    return getFullYear(this) - 1900;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.now.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.now.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var Date = global.Date;
var getTime = uncurryThis(Date.prototype.getTime);

// `Date.now` method
// https://tc39.es/ecma262/#sec-date.now
$({ target: 'Date', stat: true }, {
  now: function now() {
    return getTime(new Date());
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.set-year.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.set-year.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");

var DatePrototype = Date.prototype;
var getTime = uncurryThis(DatePrototype.getTime);
var setFullYear = uncurryThis(DatePrototype.setFullYear);

// `Date.prototype.setYear` method
// https://tc39.es/ecma262/#sec-date.prototype.setyear
$({ target: 'Date', proto: true }, {
  setYear: function setYear(year) {
    // validate
    getTime(this);
    var yi = toIntegerOrInfinity(year);
    var yyyy = 0 <= yi && yi <= 99 ? yi + 1900 : yi;
    return setFullYear(this, yyyy);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-gmt-string.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-gmt-string.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Date.prototype.toGMTString` method
// https://tc39.es/ecma262/#sec-date.prototype.togmtstring
$({ target: 'Date', proto: true }, {
  toGMTString: Date.prototype.toUTCString
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-iso-string.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-iso-string.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toISOString = __webpack_require__(/*! ../internals/date-to-iso-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-iso-string.js");

// `Date.prototype.toISOString` method
// https://tc39.es/ecma262/#sec-date.prototype.toisostring
// PhantomJS / old WebKit has a broken implementations
$({ target: 'Date', proto: true, forced: Date.prototype.toISOString !== toISOString }, {
  toISOString: toISOString
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-json.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-json.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js");

var FORCED = fails(function () {
  return new Date(NaN).toJSON() !== null
    || Date.prototype.toJSON.call({ toISOString: function () { return 1; } }) !== 1;
});

// `Date.prototype.toJSON` method
// https://tc39.es/ecma262/#sec-date.prototype.tojson
$({ target: 'Date', proto: true, forced: FORCED }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  toJSON: function toJSON(key) {
    var O = toObject(this);
    var pv = toPrimitive(O, 'number');
    return typeof pv == 'number' && !isFinite(pv) ? null : O.toISOString();
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-primitive.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-primitive.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var dateToPrimitive = __webpack_require__(/*! ../internals/date-to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/date-to-primitive.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var DatePrototype = Date.prototype;

// `Date.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-date.prototype-@@toprimitive
if (!hasOwn(DatePrototype, TO_PRIMITIVE)) {
  redefine(DatePrototype, TO_PRIMITIVE, dateToPrimitive);
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-string.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-string.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");

var DatePrototype = Date.prototype;
var INVALID_DATE = 'Invalid Date';
var TO_STRING = 'toString';
var un$DateToString = uncurryThis(DatePrototype[TO_STRING]);
var getTime = uncurryThis(DatePrototype.getTime);

// `Date.prototype.toString` method
// https://tc39.es/ecma262/#sec-date.prototype.tostring
if (String(new Date(NaN)) != INVALID_DATE) {
  redefine(DatePrototype, TO_STRING, function toString() {
    var value = getTime(this);
    // eslint-disable-next-line no-self-compare -- NaN check
    return value === value ? un$DateToString(this) : INVALID_DATE;
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.error.cause.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.error.cause.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

/* eslint-disable no-unused-vars -- required for functions `.length` */
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var wrapErrorConstructorWithCause = __webpack_require__(/*! ../internals/wrap-error-constructor-with-cause */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/wrap-error-constructor-with-cause.js");

var WEB_ASSEMBLY = 'WebAssembly';
var WebAssembly = global[WEB_ASSEMBLY];

var FORCED = Error('e', { cause: 7 }).cause !== 7;

var exportGlobalErrorCauseWrapper = function (ERROR_NAME, wrapper) {
  var O = {};
  O[ERROR_NAME] = wrapErrorConstructorWithCause(ERROR_NAME, wrapper, FORCED);
  $({ global: true, forced: FORCED }, O);
};

var exportWebAssemblyErrorCauseWrapper = function (ERROR_NAME, wrapper) {
  if (WebAssembly && WebAssembly[ERROR_NAME]) {
    var O = {};
    O[ERROR_NAME] = wrapErrorConstructorWithCause(WEB_ASSEMBLY + '.' + ERROR_NAME, wrapper, FORCED);
    $({ target: WEB_ASSEMBLY, stat: true, forced: FORCED }, O);
  }
};

// https://github.com/tc39/proposal-error-cause
exportGlobalErrorCauseWrapper('Error', function (init) {
  return function Error(message) { return apply(init, this, arguments); };
});
exportGlobalErrorCauseWrapper('EvalError', function (init) {
  return function EvalError(message) { return apply(init, this, arguments); };
});
exportGlobalErrorCauseWrapper('RangeError', function (init) {
  return function RangeError(message) { return apply(init, this, arguments); };
});
exportGlobalErrorCauseWrapper('ReferenceError', function (init) {
  return function ReferenceError(message) { return apply(init, this, arguments); };
});
exportGlobalErrorCauseWrapper('SyntaxError', function (init) {
  return function SyntaxError(message) { return apply(init, this, arguments); };
});
exportGlobalErrorCauseWrapper('TypeError', function (init) {
  return function TypeError(message) { return apply(init, this, arguments); };
});
exportGlobalErrorCauseWrapper('URIError', function (init) {
  return function URIError(message) { return apply(init, this, arguments); };
});
exportWebAssemblyErrorCauseWrapper('CompileError', function (init) {
  return function CompileError(message) { return apply(init, this, arguments); };
});
exportWebAssemblyErrorCauseWrapper('LinkError', function (init) {
  return function LinkError(message) { return apply(init, this, arguments); };
});
exportWebAssemblyErrorCauseWrapper('RuntimeError', function (init) {
  return function RuntimeError(message) { return apply(init, this, arguments); };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.error.to-string.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.error.to-string.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var errorToString = __webpack_require__(/*! ../internals/error-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-to-string.js");

var ErrorPrototype = Error.prototype;

// `Error.prototype.toString` method fix
// https://tc39.es/ecma262/#sec-error.prototype.tostring
if (ErrorPrototype.toString !== errorToString) {
  redefine(ErrorPrototype, 'toString', errorToString);
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.escape.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.escape.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var exec = uncurryThis(/./.exec);
var numberToString = uncurryThis(1.0.toString);
var toUpperCase = uncurryThis(''.toUpperCase);

var raw = /[\w*+\-./@]/;

var hex = function (code, length) {
  var result = numberToString(code, 16);
  while (result.length < length) result = '0' + result;
  return result;
};

// `escape` method
// https://tc39.es/ecma262/#sec-escape-string
$({ global: true }, {
  escape: function escape(string) {
    var str = toString(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, code;
    while (index < length) {
      chr = charAt(str, index++);
      if (exec(raw, chr)) {
        result += chr;
      } else {
        code = charCodeAt(chr, 0);
        if (code < 256) {
          result += '%' + hex(code, 2);
        } else {
          result += '%u' + toUpperCase(hex(code, 4));
        }
      }
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.bind.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.bind.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js");

// `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind
$({ target: 'Function', proto: true, forced: Function.bind !== bind }, {
  bind: bind
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.has-instance.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.has-instance.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var HAS_INSTANCE = wellKnownSymbol('hasInstance');
var FunctionPrototype = Function.prototype;

// `Function.prototype[@@hasInstance]` method
// https://tc39.es/ecma262/#sec-function.prototype-@@hasinstance
if (!(HAS_INSTANCE in FunctionPrototype)) {
  definePropertyModule.f(FunctionPrototype, HAS_INSTANCE, { value: function (O) {
    if (!isCallable(this) || !isObject(O)) return false;
    var P = this.prototype;
    if (!isObject(P)) return O instanceof this;
    // for environment w/o native `@@hasInstance` logic enough `instanceof`, but add this:
    while (O = getPrototypeOf(O)) if (P === O) return true;
    return false;
  } });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.name.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.name.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FUNCTION_NAME_EXISTS = (__webpack_require__(/*! ../internals/function-name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js").EXISTS);
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);

var FunctionPrototype = Function.prototype;
var functionToString = uncurryThis(FunctionPrototype.toString);
var nameRE = /function\b(?:\s|\/\*[\S\s]*?\*\/|\/\/[^\n\r]*[\n\r]+)*([^\s(/]*)/;
var regExpExec = uncurryThis(nameRE.exec);
var NAME = 'name';

// Function instances `.name` property
// https://tc39.es/ecma262/#sec-function-instances-name
if (DESCRIPTORS && !FUNCTION_NAME_EXISTS) {
  defineProperty(FunctionPrototype, NAME, {
    configurable: true,
    get: function () {
      try {
        return regExpExec(nameRE, functionToString(this))[1];
      } catch (error) {
        return '';
      }
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.global-this.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.global-this.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");

// `globalThis` object
// https://tc39.es/ecma262/#sec-globalthis
$({ global: true }, {
  globalThis: global
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.stringify.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.stringify.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var Array = global.Array;
var $stringify = getBuiltIn('JSON', 'stringify');
var exec = uncurryThis(/./.exec);
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);
var replace = uncurryThis(''.replace);
var numberToString = uncurryThis(1.0.toString);

var tester = /[\uD800-\uDFFF]/g;
var low = /^[\uD800-\uDBFF]$/;
var hi = /^[\uDC00-\uDFFF]$/;

var fix = function (match, offset, string) {
  var prev = charAt(string, offset - 1);
  var next = charAt(string, offset + 1);
  if ((exec(low, match) && !exec(hi, next)) || (exec(hi, match) && !exec(low, prev))) {
    return '\\u' + numberToString(charCodeAt(match, 0), 16);
  } return match;
};

var FORCED = fails(function () {
  return $stringify('\uDF06\uD834') !== '"\\udf06\\ud834"'
    || $stringify('\uDEAD') !== '"\\udead"';
});

if ($stringify) {
  // `JSON.stringify` method
  // https://tc39.es/ecma262/#sec-json.stringify
  // https://github.com/tc39/proposal-well-formed-stringify
  $({ target: 'JSON', stat: true, forced: FORCED }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      for (var i = 0, l = arguments.length, args = Array(l); i < l; i++) args[i] = arguments[i];
      var result = apply($stringify, null, args);
      return typeof result == 'string' ? replace(result, tester, fix) : result;
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.to-string-tag.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.to-string-tag.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

// JSON[@@toStringTag] property
// https://tc39.es/ecma262/#sec-json-@@tostringtag
setToStringTag(global.JSON, 'JSON', true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.map.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.map.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js");

// `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects
collection('Map', function (init) {
  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.acosh.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.acosh.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var log1p = __webpack_require__(/*! ../internals/math-log1p */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js");

// eslint-disable-next-line es/no-math-acosh -- required for testing
var $acosh = Math.acosh;
var log = Math.log;
var sqrt = Math.sqrt;
var LN2 = Math.LN2;

var FORCED = !$acosh
  // V8 bug: https://code.google.com/p/v8/issues/detail?id=3509
  || Math.floor($acosh(Number.MAX_VALUE)) != 710
  // Tor Browser bug: Math.acosh(Infinity) -> NaN
  || $acosh(Infinity) != Infinity;

// `Math.acosh` method
// https://tc39.es/ecma262/#sec-math.acosh
$({ target: 'Math', stat: true, forced: FORCED }, {
  acosh: function acosh(x) {
    return (x = +x) < 1 ? NaN : x > 94906265.62425156
      ? log(x) + LN2
      : log1p(x - 1 + sqrt(x - 1) * sqrt(x + 1));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.asinh.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.asinh.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// eslint-disable-next-line es/no-math-asinh -- required for testing
var $asinh = Math.asinh;
var log = Math.log;
var sqrt = Math.sqrt;

function asinh(x) {
  return !isFinite(x = +x) || x == 0 ? x : x < 0 ? -asinh(-x) : log(x + sqrt(x * x + 1));
}

// `Math.asinh` method
// https://tc39.es/ecma262/#sec-math.asinh
// Tor Browser bug: Math.asinh(0) -> -0
$({ target: 'Math', stat: true, forced: !($asinh && 1 / $asinh(0) > 0) }, {
  asinh: asinh
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.atanh.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.atanh.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// eslint-disable-next-line es/no-math-atanh -- required for testing
var $atanh = Math.atanh;
var log = Math.log;

// `Math.atanh` method
// https://tc39.es/ecma262/#sec-math.atanh
// Tor Browser bug: Math.atanh(-0) -> 0
$({ target: 'Math', stat: true, forced: !($atanh && 1 / $atanh(-0) < 0) }, {
  atanh: function atanh(x) {
    return (x = +x) == 0 ? x : log((1 + x) / (1 - x)) / 2;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cbrt.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cbrt.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js");

var abs = Math.abs;
var pow = Math.pow;

// `Math.cbrt` method
// https://tc39.es/ecma262/#sec-math.cbrt
$({ target: 'Math', stat: true }, {
  cbrt: function cbrt(x) {
    return sign(x = +x) * pow(abs(x), 1 / 3);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.clz32.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.clz32.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var floor = Math.floor;
var log = Math.log;
var LOG2E = Math.LOG2E;

// `Math.clz32` method
// https://tc39.es/ecma262/#sec-math.clz32
$({ target: 'Math', stat: true }, {
  clz32: function clz32(x) {
    return (x >>>= 0) ? 31 - floor(log(x + 0.5) * LOG2E) : 32;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cosh.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cosh.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

// eslint-disable-next-line es/no-math-cosh -- required for testing
var $cosh = Math.cosh;
var abs = Math.abs;
var E = Math.E;

// `Math.cosh` method
// https://tc39.es/ecma262/#sec-math.cosh
$({ target: 'Math', stat: true, forced: !$cosh || $cosh(710) === Infinity }, {
  cosh: function cosh(x) {
    var t = expm1(abs(x) - 1) + 1;
    return (t + 1 / (t * E * E)) * (E / 2);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.expm1.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.expm1.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

// `Math.expm1` method
// https://tc39.es/ecma262/#sec-math.expm1
// eslint-disable-next-line es/no-math-expm1 -- required for testing
$({ target: 'Math', stat: true, forced: expm1 != Math.expm1 }, { expm1: expm1 });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.fround.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.fround.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fround = __webpack_require__(/*! ../internals/math-fround */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-fround.js");

// `Math.fround` method
// https://tc39.es/ecma262/#sec-math.fround
$({ target: 'Math', stat: true }, { fround: fround });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.hypot.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.hypot.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// eslint-disable-next-line es/no-math-hypot -- required for testing
var $hypot = Math.hypot;
var abs = Math.abs;
var sqrt = Math.sqrt;

// Chrome 77 bug
// https://bugs.chromium.org/p/v8/issues/detail?id=9546
var BUGGY = !!$hypot && $hypot(Infinity, NaN) !== Infinity;

// `Math.hypot` method
// https://tc39.es/ecma262/#sec-math.hypot
$({ target: 'Math', stat: true, forced: BUGGY }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  hypot: function hypot(value1, value2) {
    var sum = 0;
    var i = 0;
    var aLen = arguments.length;
    var larg = 0;
    var arg, div;
    while (i < aLen) {
      arg = abs(arguments[i++]);
      if (larg < arg) {
        div = larg / arg;
        sum = sum * div * div + 1;
        larg = arg;
      } else if (arg > 0) {
        div = arg / larg;
        sum += div * div;
      } else sum += arg;
    }
    return larg === Infinity ? Infinity : larg * sqrt(sum);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.imul.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.imul.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-math-imul -- required for testing
var $imul = Math.imul;

var FORCED = fails(function () {
  return $imul(0xFFFFFFFF, 5) != -5 || $imul.length != 2;
});

// `Math.imul` method
// https://tc39.es/ecma262/#sec-math.imul
// some WebKit versions fails with big numbers, some has wrong arity
$({ target: 'Math', stat: true, forced: FORCED }, {
  imul: function imul(x, y) {
    var UINT16 = 0xFFFF;
    var xn = +x;
    var yn = +y;
    var xl = UINT16 & xn;
    var yl = UINT16 & yn;
    return 0 | xl * yl + ((UINT16 & xn >>> 16) * yl + xl * (UINT16 & yn >>> 16) << 16 >>> 0);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log10.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log10.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var log10 = __webpack_require__(/*! ../internals/math-log10 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log10.js");

// `Math.log10` method
// https://tc39.es/ecma262/#sec-math.log10
$({ target: 'Math', stat: true }, {
  log10: log10
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log1p.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log1p.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var log1p = __webpack_require__(/*! ../internals/math-log1p */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log1p.js");

// `Math.log1p` method
// https://tc39.es/ecma262/#sec-math.log1p
$({ target: 'Math', stat: true }, { log1p: log1p });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log2.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log2.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var log = Math.log;
var LN2 = Math.LN2;

// `Math.log2` method
// https://tc39.es/ecma262/#sec-math.log2
$({ target: 'Math', stat: true }, {
  log2: function log2(x) {
    return log(x) / LN2;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sign.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sign.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var sign = __webpack_require__(/*! ../internals/math-sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-sign.js");

// `Math.sign` method
// https://tc39.es/ecma262/#sec-math.sign
$({ target: 'Math', stat: true }, {
  sign: sign
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sinh.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sinh.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

var abs = Math.abs;
var exp = Math.exp;
var E = Math.E;

var FORCED = fails(function () {
  // eslint-disable-next-line es/no-math-sinh -- required for testing
  return Math.sinh(-2e-17) != -2e-17;
});

// `Math.sinh` method
// https://tc39.es/ecma262/#sec-math.sinh
// V8 near Chromium 38 has a problem with very small numbers
$({ target: 'Math', stat: true, forced: FORCED }, {
  sinh: function sinh(x) {
    return abs(x = +x) < 1 ? (expm1(x) - expm1(-x)) / 2 : (exp(x - 1) - exp(-x - 1)) * (E / 2);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.tanh.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.tanh.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var expm1 = __webpack_require__(/*! ../internals/math-expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-expm1.js");

var exp = Math.exp;

// `Math.tanh` method
// https://tc39.es/ecma262/#sec-math.tanh
$({ target: 'Math', stat: true }, {
  tanh: function tanh(x) {
    var a = expm1(x = +x);
    var b = expm1(-x);
    return a == Infinity ? 1 : b == Infinity ? -1 : (a - b) / (exp(x) + exp(-x));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.to-string-tag.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.to-string-tag.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

// Math[@@toStringTag] property
// https://tc39.es/ecma262/#sec-math-@@tostringtag
setToStringTag(Math, 'Math', true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.trunc.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.trunc.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

var ceil = Math.ceil;
var floor = Math.floor;

// `Math.trunc` method
// https://tc39.es/ecma262/#sec-math.trunc
$({ target: 'Math', stat: true }, {
  trunc: function trunc(it) {
    return (it > 0 ? floor : ceil)(it);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.constructor.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.constructor.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var toPrimitive = __webpack_require__(/*! ../internals/to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-primitive.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f);
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js");
var trim = (__webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim);

var NUMBER = 'Number';
var NativeNumber = global[NUMBER];
var NumberPrototype = NativeNumber.prototype;
var TypeError = global.TypeError;
var arraySlice = uncurryThis(''.slice);
var charCodeAt = uncurryThis(''.charCodeAt);

// `ToNumeric` abstract operation
// https://tc39.es/ecma262/#sec-tonumeric
var toNumeric = function (value) {
  var primValue = toPrimitive(value, 'number');
  return typeof primValue == 'bigint' ? primValue : toNumber(primValue);
};

// `ToNumber` abstract operation
// https://tc39.es/ecma262/#sec-tonumber
var toNumber = function (argument) {
  var it = toPrimitive(argument, 'number');
  var first, third, radix, maxCode, digits, length, index, code;
  if (isSymbol(it)) throw TypeError('Cannot convert a Symbol value to a number');
  if (typeof it == 'string' && it.length > 2) {
    it = trim(it);
    first = charCodeAt(it, 0);
    if (first === 43 || first === 45) {
      third = charCodeAt(it, 2);
      if (third === 88 || third === 120) return NaN; // Number('+0x1') should be NaN, old V8 fix
    } else if (first === 48) {
      switch (charCodeAt(it, 1)) {
        case 66: case 98: radix = 2; maxCode = 49; break; // fast equal of /^0b[01]+$/i
        case 79: case 111: radix = 8; maxCode = 55; break; // fast equal of /^0o[0-7]+$/i
        default: return +it;
      }
      digits = arraySlice(it, 2);
      length = digits.length;
      for (index = 0; index < length; index++) {
        code = charCodeAt(digits, index);
        // parseInt parses a string to a first unavailable symbol
        // but ToNumber should return NaN if a string contains unavailable symbols
        if (code < 48 || code > maxCode) return NaN;
      } return parseInt(digits, radix);
    }
  } return +it;
};

// `Number` constructor
// https://tc39.es/ecma262/#sec-number-constructor
if (isForced(NUMBER, !NativeNumber(' 0o1') || !NativeNumber('0b1') || NativeNumber('+0x1'))) {
  var NumberWrapper = function Number(value) {
    var n = arguments.length < 1 ? 0 : NativeNumber(toNumeric(value));
    var dummy = this;
    // check on 1..constructor(foo) case
    return isPrototypeOf(NumberPrototype, dummy) && fails(function () { thisNumberValue(dummy); })
      ? inheritIfRequired(Object(n), dummy, NumberWrapper) : n;
  };
  for (var keys = DESCRIPTORS ? getOwnPropertyNames(NativeNumber) : (
    // ES3:
    'MAX_VALUE,MIN_VALUE,NaN,NEGATIVE_INFINITY,POSITIVE_INFINITY,' +
    // ES2015 (in case, if modules with ES2015 Number statics required before):
    'EPSILON,MAX_SAFE_INTEGER,MIN_SAFE_INTEGER,isFinite,isInteger,isNaN,isSafeInteger,parseFloat,parseInt,' +
    // ESNext
    'fromString,range'
  ).split(','), j = 0, key; keys.length > j; j++) {
    if (hasOwn(NativeNumber, key = keys[j]) && !hasOwn(NumberWrapper, key)) {
      defineProperty(NumberWrapper, key, getOwnPropertyDescriptor(NativeNumber, key));
    }
  }
  NumberWrapper.prototype = NumberPrototype;
  NumberPrototype.constructor = NumberWrapper;
  redefine(global, NUMBER, NumberWrapper);
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.epsilon.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.epsilon.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.EPSILON` constant
// https://tc39.es/ecma262/#sec-number.epsilon
$({ target: 'Number', stat: true }, {
  EPSILON: Math.pow(2, -52)
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-finite.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-finite.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var numberIsFinite = __webpack_require__(/*! ../internals/number-is-finite */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-is-finite.js");

// `Number.isFinite` method
// https://tc39.es/ecma262/#sec-number.isfinite
$({ target: 'Number', stat: true }, { isFinite: numberIsFinite });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-integer.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-integer.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isIntegralNumber = __webpack_require__(/*! ../internals/is-integral-number */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integral-number.js");

// `Number.isInteger` method
// https://tc39.es/ecma262/#sec-number.isinteger
$({ target: 'Number', stat: true }, {
  isInteger: isIntegralNumber
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-nan.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-nan.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.isNaN` method
// https://tc39.es/ecma262/#sec-number.isnan
$({ target: 'Number', stat: true }, {
  isNaN: function isNaN(number) {
    // eslint-disable-next-line no-self-compare -- NaN check
    return number != number;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-safe-integer.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-safe-integer.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isIntegralNumber = __webpack_require__(/*! ../internals/is-integral-number */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-integral-number.js");

var abs = Math.abs;

// `Number.isSafeInteger` method
// https://tc39.es/ecma262/#sec-number.issafeinteger
$({ target: 'Number', stat: true }, {
  isSafeInteger: function isSafeInteger(number) {
    return isIntegralNumber(number) && abs(number) <= 0x1FFFFFFFFFFFFF;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.max-safe-integer.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.max-safe-integer.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.MAX_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.max_safe_integer
$({ target: 'Number', stat: true }, {
  MAX_SAFE_INTEGER: 0x1FFFFFFFFFFFFF
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.min-safe-integer.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.min-safe-integer.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Number.MIN_SAFE_INTEGER` constant
// https://tc39.es/ecma262/#sec-number.min_safe_integer
$({ target: 'Number', stat: true }, {
  MIN_SAFE_INTEGER: -0x1FFFFFFFFFFFFF
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-float.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-float.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var parseFloat = __webpack_require__(/*! ../internals/number-parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js");

// `Number.parseFloat` method
// https://tc39.es/ecma262/#sec-number.parseFloat
// eslint-disable-next-line es/no-number-parsefloat -- required for testing
$({ target: 'Number', stat: true, forced: Number.parseFloat != parseFloat }, {
  parseFloat: parseFloat
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-int.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-int.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var parseInt = __webpack_require__(/*! ../internals/number-parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js");

// `Number.parseInt` method
// https://tc39.es/ecma262/#sec-number.parseint
// eslint-disable-next-line es/no-number-parseint -- required for testing
$({ target: 'Number', stat: true, forced: Number.parseInt != parseInt }, {
  parseInt: parseInt
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-exponential.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-exponential.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js");
var $repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");
var log10 = __webpack_require__(/*! ../internals/math-log10 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/math-log10.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var RangeError = global.RangeError;
var String = global.String;
var isFinite = global.isFinite;
var abs = Math.abs;
var floor = Math.floor;
var pow = Math.pow;
var round = Math.round;
var un$ToExponential = uncurryThis(1.0.toExponential);
var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice);

// Edge 17-
var ROUNDS_PROPERLY = un$ToExponential(-6.9e-11, 4) === '-6.9000e-11'
  // IE11- && Edge 14-
  && un$ToExponential(1.255, 2) === '1.25e+0'
  // FF86-, V8 ~ Chrome 49-50
  && un$ToExponential(12345, 3) === '1.235e+4'
  // FF86-, V8 ~ Chrome 49-50
  && un$ToExponential(25, 0) === '3e+1';

// IE8-
var THROWS_ON_INFINITY_FRACTION = fails(function () {
  un$ToExponential(1, Infinity);
}) && fails(function () {
  un$ToExponential(1, -Infinity);
});

// Safari <11 && FF <50
var PROPER_NON_FINITE_THIS_CHECK = !fails(function () {
  un$ToExponential(Infinity, Infinity);
}) && !fails(function () {
  un$ToExponential(NaN, Infinity);
});

var FORCED = !ROUNDS_PROPERLY || !THROWS_ON_INFINITY_FRACTION || !PROPER_NON_FINITE_THIS_CHECK;

// `Number.prototype.toExponential` method
// https://tc39.es/ecma262/#sec-number.prototype.toexponential
$({ target: 'Number', proto: true, forced: FORCED }, {
  toExponential: function toExponential(fractionDigits) {
    var x = thisNumberValue(this);
    if (fractionDigits === undefined) return un$ToExponential(x);
    var f = toIntegerOrInfinity(fractionDigits);
    if (!isFinite(x)) return String(x);
    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation
    if (f < 0 || f > 20) throw RangeError('Incorrect fraction digits');
    if (ROUNDS_PROPERLY) return un$ToExponential(x, f);
    var s = '';
    var m = '';
    var e = 0;
    var c = '';
    var d = '';
    if (x < 0) {
      s = '-';
      x = -x;
    }
    if (x === 0) {
      e = 0;
      m = repeat('0', f + 1);
    } else {
      // this block is based on https://gist.github.com/SheetJSDev/1100ad56b9f856c95299ed0e068eea08
      // TODO: improve accuracy with big fraction digits
      var l = log10(x);
      e = floor(l);
      var n = 0;
      var w = pow(10, e - f);
      n = round(x / w);
      if (2 * x >= (2 * n + 1) * w) {
        n += 1;
      }
      if (n >= pow(10, f + 1)) {
        n /= 10;
        e += 1;
      }
      m = String(n);
    }
    if (f !== 0) {
      m = stringSlice(m, 0, 1) + '.' + stringSlice(m, 1);
    }
    if (e === 0) {
      c = '+';
      d = '0';
    } else {
      c = e > 0 ? '+' : '-';
      d = String(abs(e));
    }
    m += 'e' + c + d;
    return s + m;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-fixed.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-fixed.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js");
var $repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var RangeError = global.RangeError;
var String = global.String;
var floor = Math.floor;
var repeat = uncurryThis($repeat);
var stringSlice = uncurryThis(''.slice);
var un$ToFixed = uncurryThis(1.0.toFixed);

var pow = function (x, n, acc) {
  return n === 0 ? acc : n % 2 === 1 ? pow(x, n - 1, acc * x) : pow(x * x, n / 2, acc);
};

var log = function (x) {
  var n = 0;
  var x2 = x;
  while (x2 >= 4096) {
    n += 12;
    x2 /= 4096;
  }
  while (x2 >= 2) {
    n += 1;
    x2 /= 2;
  } return n;
};

var multiply = function (data, n, c) {
  var index = -1;
  var c2 = c;
  while (++index < 6) {
    c2 += n * data[index];
    data[index] = c2 % 1e7;
    c2 = floor(c2 / 1e7);
  }
};

var divide = function (data, n) {
  var index = 6;
  var c = 0;
  while (--index >= 0) {
    c += data[index];
    data[index] = floor(c / n);
    c = (c % n) * 1e7;
  }
};

var dataToString = function (data) {
  var index = 6;
  var s = '';
  while (--index >= 0) {
    if (s !== '' || index === 0 || data[index] !== 0) {
      var t = String(data[index]);
      s = s === '' ? t : s + repeat('0', 7 - t.length) + t;
    }
  } return s;
};

var FORCED = fails(function () {
  return un$ToFixed(0.00008, 3) !== '0.000' ||
    un$ToFixed(0.9, 0) !== '1' ||
    un$ToFixed(1.255, 2) !== '1.25' ||
    un$ToFixed(1000000000000000128.0, 0) !== '1000000000000000128';
}) || !fails(function () {
  // V8 ~ Android 4.3-
  un$ToFixed({});
});

// `Number.prototype.toFixed` method
// https://tc39.es/ecma262/#sec-number.prototype.tofixed
$({ target: 'Number', proto: true, forced: FORCED }, {
  toFixed: function toFixed(fractionDigits) {
    var number = thisNumberValue(this);
    var fractDigits = toIntegerOrInfinity(fractionDigits);
    var data = [0, 0, 0, 0, 0, 0];
    var sign = '';
    var result = '0';
    var e, z, j, k;

    // TODO: ES2018 increased the maximum number of fraction digits to 100, need to improve the implementation
    if (fractDigits < 0 || fractDigits > 20) throw RangeError('Incorrect fraction digits');
    // eslint-disable-next-line no-self-compare -- NaN check
    if (number != number) return 'NaN';
    if (number <= -1e21 || number >= 1e21) return String(number);
    if (number < 0) {
      sign = '-';
      number = -number;
    }
    if (number > 1e-21) {
      e = log(number * pow(2, 69, 1)) - 69;
      z = e < 0 ? number * pow(2, -e, 1) : number / pow(2, e, 1);
      z *= 0x10000000000000;
      e = 52 - e;
      if (e > 0) {
        multiply(data, 0, z);
        j = fractDigits;
        while (j >= 7) {
          multiply(data, 1e7, 0);
          j -= 7;
        }
        multiply(data, pow(10, j, 1), 0);
        j = e - 1;
        while (j >= 23) {
          divide(data, 1 << 23);
          j -= 23;
        }
        divide(data, 1 << j);
        multiply(data, 1, 1);
        divide(data, 2);
        result = dataToString(data);
      } else {
        multiply(data, 0, z);
        multiply(data, 1 << -e, 0);
        result = dataToString(data) + repeat('0', fractDigits);
      }
    }
    if (fractDigits > 0) {
      k = result.length;
      result = sign + (k <= fractDigits
        ? '0.' + repeat('0', fractDigits - k) + result
        : stringSlice(result, 0, k - fractDigits) + '.' + stringSlice(result, k - fractDigits));
    } else {
      result = sign + result;
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-precision.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-precision.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var thisNumberValue = __webpack_require__(/*! ../internals/this-number-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/this-number-value.js");

var un$ToPrecision = uncurryThis(1.0.toPrecision);

var FORCED = fails(function () {
  // IE7-
  return un$ToPrecision(1, undefined) !== '1';
}) || !fails(function () {
  // V8 ~ Android 4.3-
  un$ToPrecision({});
});

// `Number.prototype.toPrecision` method
// https://tc39.es/ecma262/#sec-number.prototype.toprecision
$({ target: 'Number', proto: true, forced: FORCED }, {
  toPrecision: function toPrecision(precision) {
    return precision === undefined
      ? un$ToPrecision(thisNumberValue(this))
      : un$ToPrecision(thisNumberValue(this), precision);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.assign.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.assign.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js");

// `Object.assign` method
// https://tc39.es/ecma262/#sec-object.assign
// eslint-disable-next-line es/no-object-assign -- required for testing
$({ target: 'Object', stat: true, forced: Object.assign !== assign }, {
  assign: assign
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.create.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.create.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");

// `Object.create` method
// https://tc39.es/ecma262/#sec-object.create
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  create: create
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-getter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-getter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

// `Object.prototype.__defineGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineGetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __defineGetter__: function __defineGetter__(P, getter) {
      definePropertyModule.f(toObject(this), P, { get: aCallable(getter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-properties.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-properties.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var defineProperties = (__webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js").f);

// `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe
$({ target: 'Object', stat: true, forced: Object.defineProperties !== defineProperties, sham: !DESCRIPTORS }, {
  defineProperties: defineProperties
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-property.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-property.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);

// `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty
// eslint-disable-next-line es/no-object-defineproperty -- safe
$({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty, sham: !DESCRIPTORS }, {
  defineProperty: defineProperty
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-setter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-setter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");

// `Object.prototype.__defineSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__defineSetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __defineSetter__: function __defineSetter__(P, setter) {
      definePropertyModule.f(toObject(this), P, { set: aCallable(setter), enumerable: true, configurable: true });
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.entries.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.entries.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $entries = (__webpack_require__(/*! ../internals/object-to-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js").entries);

// `Object.entries` method
// https://tc39.es/ecma262/#sec-object.entries
$({ target: 'Object', stat: true }, {
  entries: function entries(O) {
    return $entries(O);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.freeze.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.freeze.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var onFreeze = (__webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").onFreeze);

// eslint-disable-next-line es/no-object-freeze -- safe
var $freeze = Object.freeze;
var FAILS_ON_PRIMITIVES = fails(function () { $freeze(1); });

// `Object.freeze` method
// https://tc39.es/ecma262/#sec-object.freeze
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  freeze: function freeze(it) {
    return $freeze && isObject(it) ? $freeze(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.from-entries.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.from-entries.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

// `Object.fromEntries` method
// https://github.com/tc39/proposal-object-from-entries
$({ target: 'Object', stat: true }, {
  fromEntries: function fromEntries(iterable) {
    var obj = {};
    iterate(iterable, function (k, v) {
      createProperty(obj, k, v);
    }, { AS_ENTRIES: true });
    return obj;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptor.js":
/*!******************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptor.js ***!
  \******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var nativeGetOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetOwnPropertyDescriptor(1); });
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES;

// `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor
$({ target: 'Object', stat: true, forced: FORCED, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptors.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptors.js ***!
  \*******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");

// `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
$({ target: 'Object', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;
    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-names.js":
/*!*************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-names.js ***!
  \*************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js").f);

// eslint-disable-next-line es/no-object-getownpropertynames -- required for testing
var FAILS_ON_PRIMITIVES = fails(function () { return !Object.getOwnPropertyNames(1); });

// `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  getOwnPropertyNames: getOwnPropertyNames
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-prototype-of.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-prototype-of.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var nativeGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeGetPrototypeOf(1); });

// `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});



/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.has-own.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.has-own.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");

// `Object.hasOwn` method
// https://github.com/tc39/proposal-accessible-object-hasownproperty
$({ target: 'Object', stat: true }, {
  hasOwn: hasOwn
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-extensible.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-extensible.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-extensible.js");

// `Object.isExtensible` method
// https://tc39.es/ecma262/#sec-object.isextensible
// eslint-disable-next-line es/no-object-isextensible -- safe
$({ target: 'Object', stat: true, forced: Object.isExtensible !== $isExtensible }, {
  isExtensible: $isExtensible
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-frozen.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-frozen.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-isfrozen -- safe
var $isFrozen = Object.isFrozen;
var FAILS_ON_PRIMITIVES = fails(function () { $isFrozen(1); });

// `Object.isFrozen` method
// https://tc39.es/ecma262/#sec-object.isfrozen
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE }, {
  isFrozen: function isFrozen(it) {
    if (!isObject(it)) return true;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return true;
    return $isFrozen ? $isFrozen(it) : false;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-sealed.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-sealed.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var ARRAY_BUFFER_NON_EXTENSIBLE = __webpack_require__(/*! ../internals/array-buffer-non-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-non-extensible.js");

// eslint-disable-next-line es/no-object-issealed -- safe
var $isSealed = Object.isSealed;
var FAILS_ON_PRIMITIVES = fails(function () { $isSealed(1); });

// `Object.isSealed` method
// https://tc39.es/ecma262/#sec-object.issealed
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE }, {
  isSealed: function isSealed(it) {
    if (!isObject(it)) return true;
    if (ARRAY_BUFFER_NON_EXTENSIBLE && classof(it) == 'ArrayBuffer') return true;
    return $isSealed ? $isSealed(it) : false;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var is = __webpack_require__(/*! ../internals/same-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js");

// `Object.is` method
// https://tc39.es/ecma262/#sec-object.is
$({ target: 'Object', stat: true }, {
  is: is
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.keys.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.keys.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var nativeKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var FAILS_ON_PRIMITIVES = fails(function () { nativeKeys(1); });

// `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES }, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-getter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-getter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);

// `Object.prototype.__lookupGetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupGetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupGetter__: function __lookupGetter__(P) {
      var O = toObject(this);
      var key = toPropertyKey(P);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.get;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-setter.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-setter.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var FORCED = __webpack_require__(/*! ../internals/object-prototype-accessors-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-prototype-accessors-forced.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);

// `Object.prototype.__lookupSetter__` method
// https://tc39.es/ecma262/#sec-object.prototype.__lookupSetter__
if (DESCRIPTORS) {
  $({ target: 'Object', proto: true, forced: FORCED }, {
    __lookupSetter__: function __lookupSetter__(P) {
      var O = toObject(this);
      var key = toPropertyKey(P);
      var desc;
      do {
        if (desc = getOwnPropertyDescriptor(O, key)) return desc.set;
      } while (O = getPrototypeOf(O));
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.prevent-extensions.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.prevent-extensions.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var onFreeze = (__webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").onFreeze);
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-preventextensions -- safe
var $preventExtensions = Object.preventExtensions;
var FAILS_ON_PRIMITIVES = fails(function () { $preventExtensions(1); });

// `Object.preventExtensions` method
// https://tc39.es/ecma262/#sec-object.preventextensions
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  preventExtensions: function preventExtensions(it) {
    return $preventExtensions && isObject(it) ? $preventExtensions(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.seal.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.seal.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var onFreeze = (__webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js").onFreeze);
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// eslint-disable-next-line es/no-object-seal -- safe
var $seal = Object.seal;
var FAILS_ON_PRIMITIVES = fails(function () { $seal(1); });

// `Object.seal` method
// https://tc39.es/ecma262/#sec-object.seal
$({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES, sham: !FREEZING }, {
  seal: function seal(it) {
    return $seal && isObject(it) ? $seal(onFreeze(it)) : it;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.set-prototype-of.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.set-prototype-of.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");

// `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
$({ target: 'Object', stat: true }, {
  setPrototypeOf: setPrototypeOf
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.to-string.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.to-string.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var TO_STRING_TAG_SUPPORT = __webpack_require__(/*! ../internals/to-string-tag-support */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string-tag-support.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var toString = __webpack_require__(/*! ../internals/object-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-string.js");

// `Object.prototype.toString` method
// https://tc39.es/ecma262/#sec-object.prototype.tostring
if (!TO_STRING_TAG_SUPPORT) {
  redefine(Object.prototype, 'toString', toString, { unsafe: true });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.values.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.values.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $values = (__webpack_require__(/*! ../internals/object-to-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-to-array.js").values);

// `Object.values` method
// https://tc39.es/ecma262/#sec-object.values
$({ target: 'Object', stat: true }, {
  values: function values(O) {
    return $values(O);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-float.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-float.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $parseFloat = __webpack_require__(/*! ../internals/number-parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-float.js");

// `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string
$({ global: true, forced: parseFloat != $parseFloat }, {
  parseFloat: $parseFloat
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-int.js":
/*!*****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-int.js ***!
  \*****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $parseInt = __webpack_require__(/*! ../internals/number-parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/number-parse-int.js");

// `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix
$({ global: true, forced: parseInt != $parseInt }, {
  parseInt: $parseInt
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.all-settled.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.all-settled.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");

// `Promise.allSettled` method
// https://tc39.es/ecma262/#sec-promise.allsettled
$({ target: 'Promise', stat: true }, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call(promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'fulfilled', value: value };
          --remaining || resolve(values);
        }, function (error) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = { status: 'rejected', reason: error };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.any.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.any.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");

var PROMISE_ANY_ERROR = 'No one promise resolved';

// `Promise.any` method
// https://tc39.es/ecma262/#sec-promise.any
$({ target: 'Promise', stat: true }, {
  any: function any(iterable) {
    var C = this;
    var AggregateError = getBuiltIn('AggregateError');
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aCallable(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        remaining++;
        call(promiseResolve, C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (error) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = error;
          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.finally.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.finally.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");

// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829
var NON_GENERIC = !!NativePromise && fails(function () {
  // eslint-disable-next-line unicorn/no-thenable -- required for testing
  NativePromise.prototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });
});

// `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally
$({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = isCallable(onFinally);
    return this.then(
      isFunction ? function (x) {
        return promiseResolve(C, onFinally()).then(function () { return x; });
      } : onFinally,
      isFunction ? function (e) {
        return promiseResolve(C, onFinally()).then(function () { throw e; });
      } : onFinally
    );
  }
});

// makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`
if (!IS_PURE && isCallable(NativePromise)) {
  var method = getBuiltIn('Promise').prototype['finally'];
  if (NativePromise.prototype['finally'] !== method) {
    redefine(NativePromise.prototype, 'finally', method, { unsafe: true });
  }
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var NativePromise = __webpack_require__(/*! ../internals/native-promise-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-promise-constructor.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var setPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var inspectSource = __webpack_require__(/*! ../internals/inspect-source */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inspect-source.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var checkCorrectnessOfIteration = __webpack_require__(/*! ../internals/check-correctness-of-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/check-correctness-of-iteration.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var task = (__webpack_require__(/*! ../internals/task */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js").set);
var microtask = __webpack_require__(/*! ../internals/microtask */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js");
var promiseResolve = __webpack_require__(/*! ../internals/promise-resolve */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/promise-resolve.js");
var hostReportErrors = __webpack_require__(/*! ../internals/host-report-errors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/host-report-errors.js");
var newPromiseCapabilityModule = __webpack_require__(/*! ../internals/new-promise-capability */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/new-promise-capability.js");
var perform = __webpack_require__(/*! ../internals/perform */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/perform.js");
var Queue = __webpack_require__(/*! ../internals/queue */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/queue.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_BROWSER = __webpack_require__(/*! ../internals/engine-is-browser */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-browser.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");
var V8_VERSION = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';

var getInternalState = InternalStateModule.getterFor(PROMISE);
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var NativePromisePrototype = NativePromise && NativePromise.prototype;
var PromiseConstructor = NativePromise;
var PromisePrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;

var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = isCallable(global.PromiseRejectionEvent);
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var SUBCLASSING = false;

var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;

var FORCED = isForced(PROMISE, function () {
  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(PromiseConstructor);
  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(PromiseConstructor);
  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions
  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;
  // We need Promise#finally in the pure version for preventing prototype pollution
  if (IS_PURE && !PromisePrototype['finally']) return true;
  // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679
  if (V8_VERSION >= 51 && /native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) return false;
  // Detect correctness of subclassing with @@species support
  var promise = new PromiseConstructor(function (resolve) { resolve(1); });
  var FakePromise = function (exec) {
    exec(function () { /* empty */ }, function () { /* empty */ });
  };
  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;
  if (!SUBCLASSING) return true;
  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test
  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
});

var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () { /* empty */ });
});

// helpers
var isThenable = function (it) {
  var then;
  return isObject(it) && isCallable(then = it.then) ? then : false;
};

var callReaction = function (reaction, state) {
  var value = state.value;
  var ok = state.state == FULFILLED;
  var handler = ok ? reaction.ok : reaction.fail;
  var resolve = reaction.resolve;
  var reject = reaction.reject;
  var domain = reaction.domain;
  var result, then, exited;
  try {
    if (handler) {
      if (!ok) {
        if (state.rejection === UNHANDLED) onHandleUnhandled(state);
        state.rejection = HANDLED;
      }
      if (handler === true) result = value;
      else {
        if (domain) domain.enter();
        result = handler(value); // can throw
        if (domain) {
          domain.exit();
          exited = true;
        }
      }
      if (result === reaction.promise) {
        reject(TypeError('Promise-chain cycle'));
      } else if (then = isThenable(result)) {
        call(then, result, resolve, reject);
      } else resolve(result);
    } else reject(value);
  } catch (error) {
    if (domain && !exited) domain.exit();
    reject(error);
  }
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  microtask(function () {
    var reactions = state.reactions;
    var reaction;
    while (reaction = reactions.get()) {
      callReaction(reaction, state);
    }
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;
  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = { promise: promise, reason: reason };
  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);
  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;
    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      });
      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should
      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  call(task, global, function () {
    var promise = state.facade;
    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);
    if (then) {
      microtask(function () {
        var wrapper = { done: false };
        try {
          call(then, value,
            bind(internalResolve, wrapper, state),
            bind(internalReject, wrapper, state)
          );
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({ done: false }, error, state);
  }
};

// constructor polyfill
if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromisePrototype);
    aCallable(executor);
    call(Internal, this);
    var state = getInternalState(this);
    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };
  PromisePrototype = PromiseConstructor.prototype;
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: new Queue(),
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };
  Internal.prototype = redefineAll(PromisePrototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    // eslint-disable-next-line unicorn/no-thenable -- safe
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      state.parent = true;
      reaction.ok = isCallable(onFulfilled) ? onFulfilled : true;
      reaction.fail = isCallable(onRejected) && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      if (state.state == PENDING) state.reactions.add(reaction);
      else microtask(function () {
        callReaction(reaction, state);
      });
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });
  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };
  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper
      ? new OwnPromiseCapability(C)
      : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && isCallable(NativePromise) && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          call(nativeThen, that, resolve, reject);
        }).then(onFulfilled, onRejected);
      // https://github.com/zloirock/core-js/issues/640
      }, { unsafe: true });

      // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`
      redefine(NativePromisePrototype, 'catch', PromisePrototype['catch'], { unsafe: true });
    }

    // make `.constructor === Promise` work for native promise-based APIs
    try {
      delete NativePromisePrototype.constructor;
    } catch (error) { /* empty */ }

    // make `instanceof Promise` work for native promise-based APIs
    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromisePrototype);
    }
  }
}

$({ global: true, wrap: true, forced: FORCED }, {
  Promise: PromiseConstructor
});

setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);

PromiseWrapper = getBuiltIn(PROMISE);

// statics
$({ target: PROMISE, stat: true, forced: FORCED }, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    call(capability.reject, undefined, r);
    return capability.promise;
  }
});

$({ target: PROMISE, stat: true, forced: IS_PURE || FORCED }, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});

$({ target: PROMISE, stat: true, forced: INCORRECT_ITERATION }, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        remaining++;
        call($promiseResolve, C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aCallable(C.resolve);
      iterate(iterable, function (promise) {
        call($promiseResolve, C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.apply.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.apply.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var functionApply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// MS Edge argumentsList argument is optional
var OPTIONAL_ARGUMENTS_LIST = !fails(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.apply(function () { /* empty */ });
});

// `Reflect.apply` method
// https://tc39.es/ecma262/#sec-reflect.apply
$({ target: 'Reflect', stat: true, forced: OPTIONAL_ARGUMENTS_LIST }, {
  apply: function apply(target, thisArgument, argumentsList) {
    return functionApply(aCallable(target), thisArgument, anObject(argumentsList));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.construct.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.construct.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var bind = __webpack_require__(/*! ../internals/function-bind */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind.js");
var aConstructor = __webpack_require__(/*! ../internals/a-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-constructor.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var nativeConstruct = getBuiltIn('Reflect', 'construct');
var ObjectPrototype = Object.prototype;
var push = [].push;

// `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it
var NEW_TARGET_BUG = fails(function () {
  function F() { /* empty */ }
  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);
});

var ARGS_BUG = !fails(function () {
  nativeConstruct(function () { /* empty */ });
});

var FORCED = NEW_TARGET_BUG || ARGS_BUG;

$({ target: 'Reflect', stat: true, forced: FORCED, sham: FORCED }, {
  construct: function construct(Target, args /* , newTarget */) {
    aConstructor(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);
    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0: return new Target();
        case 1: return new Target(args[0]);
        case 2: return new Target(args[0], args[1]);
        case 3: return new Target(args[0], args[1], args[2]);
        case 4: return new Target(args[0], args[1], args[2], args[3]);
      }
      // w/o altered newTarget, lot of arguments case
      var $args = [null];
      apply(push, $args, args);
      return new (apply(bind, Target, $args))();
    }
    // with altered newTarget, not support built-in constructors
    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : ObjectPrototype);
    var result = apply(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.define-property.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.define-property.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

// MS Edge has broken Reflect.defineProperty - throwing instead of returning false
var ERROR_INSTEAD_OF_FALSE = fails(function () {
  // eslint-disable-next-line es/no-reflect -- required for testing
  Reflect.defineProperty(definePropertyModule.f({}, 1, { value: 1 }), 1, { value: 2 });
});

// `Reflect.defineProperty` method
// https://tc39.es/ecma262/#sec-reflect.defineproperty
$({ target: 'Reflect', stat: true, forced: ERROR_INSTEAD_OF_FALSE, sham: !DESCRIPTORS }, {
  defineProperty: function defineProperty(target, propertyKey, attributes) {
    anObject(target);
    var key = toPropertyKey(propertyKey);
    anObject(attributes);
    try {
      definePropertyModule.f(target, key, attributes);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.delete-property.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.delete-property.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);

// `Reflect.deleteProperty` method
// https://tc39.es/ecma262/#sec-reflect.deleteproperty
$({ target: 'Reflect', stat: true }, {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);
    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js":
/*!*******************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js ***!
  \*******************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");

// `Reflect.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-reflect.getownpropertydescriptor
$({ target: 'Reflect', stat: true, sham: !DESCRIPTORS }, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(target, propertyKey) {
    return getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-prototype-of.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-prototype-of.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var objectGetPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var CORRECT_PROTOTYPE_GETTER = __webpack_require__(/*! ../internals/correct-prototype-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-prototype-getter.js");

// `Reflect.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.getprototypeof
$({ target: 'Reflect', stat: true, sham: !CORRECT_PROTOTYPE_GETTER }, {
  getPrototypeOf: function getPrototypeOf(target) {
    return objectGetPrototypeOf(anObject(target));
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isDataDescriptor = __webpack_require__(/*! ../internals/is-data-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");

// `Reflect.get` method
// https://tc39.es/ecma262/#sec-reflect.get
function get(target, propertyKey /* , receiver */) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject(target) === receiver) return target[propertyKey];
  descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey);
  if (descriptor) return isDataDescriptor(descriptor)
    ? descriptor.value
    : descriptor.get === undefined ? undefined : call(descriptor.get, receiver);
  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);
}

$({ target: 'Reflect', stat: true }, {
  get: get
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.has.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.has.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");

// `Reflect.has` method
// https://tc39.es/ecma262/#sec-reflect.has
$({ target: 'Reflect', stat: true }, {
  has: function has(target, propertyKey) {
    return propertyKey in target;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.is-extensible.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.is-extensible.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var $isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-extensible.js");

// `Reflect.isExtensible` method
// https://tc39.es/ecma262/#sec-reflect.isextensible
$({ target: 'Reflect', stat: true }, {
  isExtensible: function isExtensible(target) {
    anObject(target);
    return $isExtensible(target);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.own-keys.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.own-keys.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var ownKeys = __webpack_require__(/*! ../internals/own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/own-keys.js");

// `Reflect.ownKeys` method
// https://tc39.es/ecma262/#sec-reflect.ownkeys
$({ target: 'Reflect', stat: true }, {
  ownKeys: ownKeys
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.prevent-extensions.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.prevent-extensions.js ***!
  \**********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var FREEZING = __webpack_require__(/*! ../internals/freezing */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/freezing.js");

// `Reflect.preventExtensions` method
// https://tc39.es/ecma262/#sec-reflect.preventextensions
$({ target: 'Reflect', stat: true, sham: !FREEZING }, {
  preventExtensions: function preventExtensions(target) {
    anObject(target);
    try {
      var objectPreventExtensions = getBuiltIn('Object', 'preventExtensions');
      if (objectPreventExtensions) objectPreventExtensions(target);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set-prototype-of.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set-prototype-of.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var aPossiblePrototype = __webpack_require__(/*! ../internals/a-possible-prototype */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-possible-prototype.js");
var objectSetPrototypeOf = __webpack_require__(/*! ../internals/object-set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-set-prototype-of.js");

// `Reflect.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.setprototypeof
if (objectSetPrototypeOf) $({ target: 'Reflect', stat: true }, {
  setPrototypeOf: function setPrototypeOf(target, proto) {
    anObject(target);
    aPossiblePrototype(proto);
    try {
      objectSetPrototypeOf(target, proto);
      return true;
    } catch (error) {
      return false;
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isDataDescriptor = __webpack_require__(/*! ../internals/is-data-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-data-descriptor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var getPrototypeOf = __webpack_require__(/*! ../internals/object-get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-prototype-of.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");

// `Reflect.set` method
// https://tc39.es/ecma262/#sec-reflect.set
function set(target, propertyKey, V /* , receiver */) {
  var receiver = arguments.length < 4 ? target : arguments[3];
  var ownDescriptor = getOwnPropertyDescriptorModule.f(anObject(target), propertyKey);
  var existingDescriptor, prototype, setter;
  if (!ownDescriptor) {
    if (isObject(prototype = getPrototypeOf(target))) {
      return set(prototype, propertyKey, V, receiver);
    }
    ownDescriptor = createPropertyDescriptor(0);
  }
  if (isDataDescriptor(ownDescriptor)) {
    if (ownDescriptor.writable === false || !isObject(receiver)) return false;
    if (existingDescriptor = getOwnPropertyDescriptorModule.f(receiver, propertyKey)) {
      if (existingDescriptor.get || existingDescriptor.set || existingDescriptor.writable === false) return false;
      existingDescriptor.value = V;
      definePropertyModule.f(receiver, propertyKey, existingDescriptor);
    } else definePropertyModule.f(receiver, propertyKey, createPropertyDescriptor(0, V));
  } else {
    setter = ownDescriptor.set;
    if (setter === undefined) return false;
    call(setter, receiver, V);
  } return true;
}

// MS Edge 17-18 Reflect.set allows setting the property to object
// with non-writable property on the prototype
var MS_EDGE_BUG = fails(function () {
  var Constructor = function () { /* empty */ };
  var object = definePropertyModule.f(new Constructor(), 'a', { configurable: true });
  // eslint-disable-next-line es/no-reflect -- required for testing
  return Reflect.set(Constructor.prototype, 'a', 1, object) !== false;
});

$({ target: 'Reflect', stat: true, forced: MS_EDGE_BUG }, {
  set: set
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.to-string-tag.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.to-string-tag.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

$({ global: true }, { Reflect: {} });

// Reflect[@@toStringTag] property
// https://tc39.es/ecma262/#sec-reflect-@@tostringtag
setToStringTag(global.Reflect, 'Reflect', true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.constructor.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.constructor.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isForced = __webpack_require__(/*! ../internals/is-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-forced.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var getOwnPropertyNames = (__webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js").f);
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var enforceInternalState = (__webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").enforce);
var setSpecies = __webpack_require__(/*! ../internals/set-species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-species.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var UNSUPPORTED_NCG = __webpack_require__(/*! ../internals/regexp-unsupported-ncg */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-ncg.js");

var MATCH = wellKnownSymbol('match');
var NativeRegExp = global.RegExp;
var RegExpPrototype = NativeRegExp.prototype;
var SyntaxError = global.SyntaxError;
var getFlags = uncurryThis(regExpFlags);
var exec = uncurryThis(RegExpPrototype.exec);
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);
// TODO: Use only propper RegExpIdentifierName
var IS_NCG = /^\?<[^\s\d!#%&*+<=>@^][^\s!#%&*+<=>@^]*>/;
var re1 = /a/g;
var re2 = /a/g;

// "new" should create a new object, old webkit bug
var CORRECT_NEW = new NativeRegExp(re1) !== re1;

var MISSED_STICKY = stickyHelpers.MISSED_STICKY;
var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;

var BASE_FORCED = DESCRIPTORS &&
  (!CORRECT_NEW || MISSED_STICKY || UNSUPPORTED_DOT_ALL || UNSUPPORTED_NCG || fails(function () {
    re2[MATCH] = false;
    // RegExp constructor can alter flags and IsRegExp works correct with @@match
    return NativeRegExp(re1) != re1 || NativeRegExp(re2) == re2 || NativeRegExp(re1, 'i') != '/a/i';
  }));

var handleDotAll = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var brackets = false;
  var chr;
  for (; index <= length; index++) {
    chr = charAt(string, index);
    if (chr === '\\') {
      result += chr + charAt(string, ++index);
      continue;
    }
    if (!brackets && chr === '.') {
      result += '[\\s\\S]';
    } else {
      if (chr === '[') {
        brackets = true;
      } else if (chr === ']') {
        brackets = false;
      } result += chr;
    }
  } return result;
};

var handleNCG = function (string) {
  var length = string.length;
  var index = 0;
  var result = '';
  var named = [];
  var names = {};
  var brackets = false;
  var ncg = false;
  var groupid = 0;
  var groupname = '';
  var chr;
  for (; index <= length; index++) {
    chr = charAt(string, index);
    if (chr === '\\') {
      chr = chr + charAt(string, ++index);
    } else if (chr === ']') {
      brackets = false;
    } else if (!brackets) switch (true) {
      case chr === '[':
        brackets = true;
        break;
      case chr === '(':
        if (exec(IS_NCG, stringSlice(string, index + 1))) {
          index += 2;
          ncg = true;
        }
        result += chr;
        groupid++;
        continue;
      case chr === '>' && ncg:
        if (groupname === '' || hasOwn(names, groupname)) {
          throw new SyntaxError('Invalid capture group name');
        }
        names[groupname] = true;
        named[named.length] = [groupname, groupid];
        ncg = false;
        groupname = '';
        continue;
    }
    if (ncg) groupname += chr;
    else result += chr;
  } return [result, named];
};

// `RegExp` constructor
// https://tc39.es/ecma262/#sec-regexp-constructor
if (isForced('RegExp', BASE_FORCED)) {
  var RegExpWrapper = function RegExp(pattern, flags) {
    var thisIsRegExp = isPrototypeOf(RegExpPrototype, this);
    var patternIsRegExp = isRegExp(pattern);
    var flagsAreUndefined = flags === undefined;
    var groups = [];
    var rawPattern = pattern;
    var rawFlags, dotAll, sticky, handled, result, state;

    if (!thisIsRegExp && patternIsRegExp && flagsAreUndefined && pattern.constructor === RegExpWrapper) {
      return pattern;
    }

    if (patternIsRegExp || isPrototypeOf(RegExpPrototype, pattern)) {
      pattern = pattern.source;
      if (flagsAreUndefined) flags = 'flags' in rawPattern ? rawPattern.flags : getFlags(rawPattern);
    }

    pattern = pattern === undefined ? '' : toString(pattern);
    flags = flags === undefined ? '' : toString(flags);
    rawPattern = pattern;

    if (UNSUPPORTED_DOT_ALL && 'dotAll' in re1) {
      dotAll = !!flags && stringIndexOf(flags, 's') > -1;
      if (dotAll) flags = replace(flags, /s/g, '');
    }

    rawFlags = flags;

    if (MISSED_STICKY && 'sticky' in re1) {
      sticky = !!flags && stringIndexOf(flags, 'y') > -1;
      if (sticky && UNSUPPORTED_Y) flags = replace(flags, /y/g, '');
    }

    if (UNSUPPORTED_NCG) {
      handled = handleNCG(pattern);
      pattern = handled[0];
      groups = handled[1];
    }

    result = inheritIfRequired(NativeRegExp(pattern, flags), thisIsRegExp ? this : RegExpPrototype, RegExpWrapper);

    if (dotAll || sticky || groups.length) {
      state = enforceInternalState(result);
      if (dotAll) {
        state.dotAll = true;
        state.raw = RegExpWrapper(handleDotAll(pattern), rawFlags);
      }
      if (sticky) state.sticky = true;
      if (groups.length) state.groups = groups;
    }

    if (pattern !== rawPattern) try {
      // fails in old engines, but we have no alternatives for unsupported regex syntax
      createNonEnumerableProperty(result, 'source', rawPattern === '' ? '(?:)' : rawPattern);
    } catch (error) { /* empty */ }

    return result;
  };

  var proxy = function (key) {
    key in RegExpWrapper || defineProperty(RegExpWrapper, key, {
      configurable: true,
      get: function () { return NativeRegExp[key]; },
      set: function (it) { NativeRegExp[key] = it; }
    });
  };

  for (var keys = getOwnPropertyNames(NativeRegExp), index = 0; keys.length > index;) {
    proxy(keys[index++]);
  }

  RegExpPrototype.constructor = RegExpWrapper;
  RegExpWrapper.prototype = RegExpPrototype;
  redefine(global, 'RegExp', RegExpWrapper);
}

// https://tc39.es/ecma262/#sec-get-regexp-@@species
setSpecies('RegExp');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.dot-all.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.dot-all.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var UNSUPPORTED_DOT_ALL = __webpack_require__(/*! ../internals/regexp-unsupported-dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-unsupported-dot-all.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").get);

var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError;

// `RegExp.prototype.dotAll` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.dotall
if (DESCRIPTORS && UNSUPPORTED_DOT_ALL) {
  defineProperty(RegExpPrototype, 'dotAll', {
    configurable: true,
    get: function () {
      if (this === RegExpPrototype) return undefined;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (classof(this) === 'RegExp') {
        return !!getInternalState(this).dotAll;
      }
      throw TypeError('Incompatible receiver, RegExp required');
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var exec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");

// `RegExp.prototype.exec` method
// https://tc39.es/ecma262/#sec-regexp.prototype.exec
$({ target: 'RegExp', proto: true, forced: /./.exec !== exec }, {
  exec: exec
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.flags.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.flags.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var objectDefinePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var RegExpPrototype = RegExp.prototype;

var FORCED = DESCRIPTORS && fails(function () {
  // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
  return Object.getOwnPropertyDescriptor(RegExpPrototype, 'flags').get.call({ dotAll: true, sticky: true }) !== 'sy';
});

// `RegExp.prototype.flags` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags
if (FORCED) objectDefinePropertyModule.f(RegExpPrototype, 'flags', {
  configurable: true,
  get: regExpFlags
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.sticky.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.sticky.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var MISSED_STICKY = (__webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js").MISSED_STICKY);
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var getInternalState = (__webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").get);

var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError;

// `RegExp.prototype.sticky` getter
// https://tc39.es/ecma262/#sec-get-regexp.prototype.sticky
if (DESCRIPTORS && MISSED_STICKY) {
  defineProperty(RegExpPrototype, 'sticky', {
    configurable: true,
    get: function () {
      if (this === RegExpPrototype) return undefined;
      // We can't use InternalStateModule.getterFor because
      // we don't add metadata for regexps created by a literal.
      if (classof(this) === 'RegExp') {
        return !!getInternalState(this).sticky;
      }
      throw TypeError('Incompatible receiver, RegExp required');
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.test.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.test.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: Remove from `core-js@4` since it's moved to entry points
__webpack_require__(/*! ../modules/es.regexp.exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");

var DELEGATES_TO_EXEC = function () {
  var execCalled = false;
  var re = /[ac]/;
  re.exec = function () {
    execCalled = true;
    return /./.exec.apply(this, arguments);
  };
  return re.test('abc') === true && execCalled;
}();

var Error = global.Error;
var un$Test = uncurryThis(/./.test);

// `RegExp.prototype.test` method
// https://tc39.es/ecma262/#sec-regexp.prototype.test
$({ target: 'RegExp', proto: true, forced: !DELEGATES_TO_EXEC }, {
  test: function (str) {
    var exec = this.exec;
    if (!isCallable(exec)) return un$Test(this, str);
    var result = call(exec, this, str);
    if (result !== null && !isObject(result)) {
      throw new Error('RegExp exec method returned something other than an Object or null');
    }
    return !!result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.to-string.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.to-string.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var PROPER_FUNCTION_NAME = (__webpack_require__(/*! ../internals/function-name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-name.js").PROPER);
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");

var TO_STRING = 'toString';
var RegExpPrototype = RegExp.prototype;
var n$ToString = RegExpPrototype[TO_STRING];
var getFlags = uncurryThis(regExpFlags);

var NOT_GENERIC = fails(function () { return n$ToString.call({ source: 'a', flags: 'b' }) != '/a/b'; });
// FF44- RegExp#toString has a wrong name
var INCORRECT_NAME = PROPER_FUNCTION_NAME && n$ToString.name != TO_STRING;

// `RegExp.prototype.toString` method
// https://tc39.es/ecma262/#sec-regexp.prototype.tostring
if (NOT_GENERIC || INCORRECT_NAME) {
  redefine(RegExp.prototype, TO_STRING, function toString() {
    var R = anObject(this);
    var p = $toString(R.source);
    var rf = R.flags;
    var f = $toString(rf === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype) ? getFlags(R) : rf);
    return '/' + p + '/' + f;
  }, { unsafe: true });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.set.js":
/*!***********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.set.js ***!
  \***********************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionStrong = __webpack_require__(/*! ../internals/collection-strong */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-strong.js");

// `Set` constructor
// https://tc39.es/ecma262/#sec-set-objects
collection('Set', function (init) {
  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionStrong);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.anchor.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.anchor.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.anchor` method
// https://tc39.es/ecma262/#sec-string.prototype.anchor
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('anchor') }, {
  anchor: function anchor(name) {
    return createHTML(this, 'a', 'name', name);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.at-alternative.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.at-alternative.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var charAt = uncurryThis(''.charAt);

var FORCED = fails(function () {
  return '𠮷'.at(-2) !== '\uD842';
});

// `String.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method
$({ target: 'String', proto: true, forced: FORCED }, {
  at: function at(index) {
    var S = toString(requireObjectCoercible(this));
    var len = S.length;
    var relativeIndex = toIntegerOrInfinity(index);
    var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
    return (k < 0 || k >= len) ? undefined : charAt(S, k);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.big.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.big.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.big` method
// https://tc39.es/ecma262/#sec-string.prototype.big
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('big') }, {
  big: function big() {
    return createHTML(this, 'big', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.blink.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.blink.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.blink` method
// https://tc39.es/ecma262/#sec-string.prototype.blink
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('blink') }, {
  blink: function blink() {
    return createHTML(this, 'blink', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.bold.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.bold.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.bold` method
// https://tc39.es/ecma262/#sec-string.prototype.bold
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('bold') }, {
  bold: function bold() {
    return createHTML(this, 'b', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.code-point-at.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.code-point-at.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var codeAt = (__webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").codeAt);

// `String.prototype.codePointAt` method
// https://tc39.es/ecma262/#sec-string.prototype.codepointat
$({ target: 'String', proto: true }, {
  codePointAt: function codePointAt(pos) {
    return codeAt(this, pos);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.ends-with.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.ends-with.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

// eslint-disable-next-line es/no-string-prototype-endswith -- safe
var un$EndsWith = uncurryThis(''.endsWith);
var slice = uncurryThis(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('endsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'endsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.endsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.endswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  endsWith: function endsWith(searchString /* , endPosition = @length */) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var endPosition = arguments.length > 1 ? arguments[1] : undefined;
    var len = that.length;
    var end = endPosition === undefined ? len : min(toLength(endPosition), len);
    var search = toString(searchString);
    return un$EndsWith
      ? un$EndsWith(that, search, end)
      : slice(that, end - search.length, end) === search;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fixed.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fixed.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.fixed` method
// https://tc39.es/ecma262/#sec-string.prototype.fixed
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fixed') }, {
  fixed: function fixed() {
    return createHTML(this, 'tt', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontcolor.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontcolor.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.fontcolor` method
// https://tc39.es/ecma262/#sec-string.prototype.fontcolor
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontcolor') }, {
  fontcolor: function fontcolor(color) {
    return createHTML(this, 'font', 'color', color);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontsize.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontsize.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.fontsize` method
// https://tc39.es/ecma262/#sec-string.prototype.fontsize
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('fontsize') }, {
  fontsize: function fontsize(size) {
    return createHTML(this, 'font', 'size', size);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.from-code-point.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.from-code-point.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");

var RangeError = global.RangeError;
var fromCharCode = String.fromCharCode;
// eslint-disable-next-line es/no-string-fromcodepoint -- required for testing
var $fromCodePoint = String.fromCodePoint;
var join = uncurryThis([].join);

// length should be 1, old FF problem
var INCORRECT_LENGTH = !!$fromCodePoint && $fromCodePoint.length != 1;

// `String.fromCodePoint` method
// https://tc39.es/ecma262/#sec-string.fromcodepoint
$({ target: 'String', stat: true, forced: INCORRECT_LENGTH }, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  fromCodePoint: function fromCodePoint(x) {
    var elements = [];
    var length = arguments.length;
    var i = 0;
    var code;
    while (length > i) {
      code = +arguments[i++];
      if (toAbsoluteIndex(code, 0x10FFFF) !== code) throw RangeError(code + ' is not a valid code point');
      elements[i] = code < 0x10000
        ? fromCharCode(code)
        : fromCharCode(((code -= 0x10000) >> 10) + 0xD800, code % 0x400 + 0xDC00);
    } return join(elements, '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.includes.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.includes.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js");

var stringIndexOf = uncurryThis(''.indexOf);

// `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes
$({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {
  includes: function includes(searchString /* , position = 0 */) {
    return !!~stringIndexOf(
      toString(requireObjectCoercible(this)),
      toString(notARegExp(searchString)),
      arguments.length > 1 ? arguments[1] : undefined
    );
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.italics.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.italics.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.italics` method
// https://tc39.es/ecma262/#sec-string.prototype.italics
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('italics') }, {
  italics: function italics() {
    return createHTML(this, 'i', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var charAt = (__webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").charAt);
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var defineIterator = __webpack_require__(/*! ../internals/define-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-iterator.js");

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR);

// `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator
defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: toString(iterated),
    index: 0
  });
// `%StringIteratorPrototype%.next` method
// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return { value: undefined, done: true };
  point = charAt(string, index);
  state.index += point.length;
  return { value: point, done: false };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.link.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.link.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.link` method
// https://tc39.es/ecma262/#sec-string.prototype.link
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('link') }, {
  link: function link(url) {
    return createHTML(this, 'a', 'href', url);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match-all.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match-all.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

/* eslint-disable es/no-string-prototype-matchall -- safe */
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var classof = __webpack_require__(/*! ../internals/classof-raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof-raw.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var MATCH_ALL = wellKnownSymbol('matchAll');
var REGEXP_STRING = 'RegExp String';
var REGEXP_STRING_ITERATOR = REGEXP_STRING + ' Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(REGEXP_STRING_ITERATOR);
var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError;
var getFlags = uncurryThis(regExpFlags);
var stringIndexOf = uncurryThis(''.indexOf);
var un$MatchAll = uncurryThis(''.matchAll);

var WORKS_WITH_NON_GLOBAL_REGEX = !!un$MatchAll && !fails(function () {
  un$MatchAll('a', /./);
});

var $RegExpStringIterator = createIteratorConstructor(function RegExpStringIterator(regexp, string, $global, fullUnicode) {
  setInternalState(this, {
    type: REGEXP_STRING_ITERATOR,
    regexp: regexp,
    string: string,
    global: $global,
    unicode: fullUnicode,
    done: false
  });
}, REGEXP_STRING, function next() {
  var state = getInternalState(this);
  if (state.done) return { value: undefined, done: true };
  var R = state.regexp;
  var S = state.string;
  var match = regExpExec(R, S);
  if (match === null) return { value: undefined, done: state.done = true };
  if (state.global) {
    if (toString(match[0]) === '') R.lastIndex = advanceStringIndex(S, toLength(R.lastIndex), state.unicode);
    return { value: match, done: false };
  }
  state.done = true;
  return { value: match, done: false };
});

var $matchAll = function (string) {
  var R = anObject(this);
  var S = toString(string);
  var C, flagsValue, flags, matcher, $global, fullUnicode;
  C = speciesConstructor(R, RegExp);
  flagsValue = R.flags;
  if (flagsValue === undefined && isPrototypeOf(RegExpPrototype, R) && !('flags' in RegExpPrototype)) {
    flagsValue = getFlags(R);
  }
  flags = flagsValue === undefined ? '' : toString(flagsValue);
  matcher = new C(C === RegExp ? R.source : R, flags);
  $global = !!~stringIndexOf(flags, 'g');
  fullUnicode = !!~stringIndexOf(flags, 'u');
  matcher.lastIndex = toLength(R.lastIndex);
  return new $RegExpStringIterator(matcher, S, $global, fullUnicode);
};

// `String.prototype.matchAll` method
// https://tc39.es/ecma262/#sec-string.prototype.matchall
$({ target: 'String', proto: true, forced: WORKS_WITH_NON_GLOBAL_REGEX }, {
  matchAll: function matchAll(regexp) {
    var O = requireObjectCoercible(this);
    var flags, S, matcher, rx;
    if (regexp != null) {
      if (isRegExp(regexp)) {
        flags = toString(requireObjectCoercible('flags' in RegExpPrototype
          ? regexp.flags
          : getFlags(regexp)
        ));
        if (!~stringIndexOf(flags, 'g')) throw TypeError('`.matchAll` does not allow non-global regexes');
      }
      if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);
      matcher = getMethod(regexp, MATCH_ALL);
      if (matcher === undefined && IS_PURE && classof(regexp) == 'RegExp') matcher = $matchAll;
      if (matcher) return call(matcher, regexp, O);
    } else if (WORKS_WITH_NON_GLOBAL_REGEX) return un$MatchAll(O, regexp);
    S = toString(O);
    rx = new RegExp(regexp, 'g');
    return IS_PURE ? call($matchAll, rx, S) : rx[MATCH_ALL](S);
  }
});

IS_PURE || MATCH_ALL in RegExpPrototype || redefine(RegExpPrototype, MATCH_ALL, $matchAll);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");

// @@match logic
fixRegExpWellKnownSymbolLogic('match', function (MATCH, nativeMatch, maybeCallNative) {
  return [
    // `String.prototype.match` method
    // https://tc39.es/ecma262/#sec-string.prototype.match
    function match(regexp) {
      var O = requireObjectCoercible(this);
      var matcher = regexp == undefined ? undefined : getMethod(regexp, MATCH);
      return matcher ? call(matcher, regexp, O) : new RegExp(regexp)[MATCH](toString(O));
    },
    // `RegExp.prototype[@@match]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@match
    function (string) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(nativeMatch, rx, S);

      if (res.done) return res.value;

      if (!rx.global) return regExpExec(rx, S);

      var fullUnicode = rx.unicode;
      rx.lastIndex = 0;
      var A = [];
      var n = 0;
      var result;
      while ((result = regExpExec(rx, S)) !== null) {
        var matchStr = toString(result[0]);
        A[n] = matchStr;
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
        n++;
      }
      return n === 0 ? null : A;
    }
  ];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-end.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-end.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $padEnd = (__webpack_require__(/*! ../internals/string-pad */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js").end);
var WEBKIT_BUG = __webpack_require__(/*! ../internals/string-pad-webkit-bug */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js");

// `String.prototype.padEnd` method
// https://tc39.es/ecma262/#sec-string.prototype.padend
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padEnd: function padEnd(maxLength /* , fillString = ' ' */) {
    return $padEnd(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-start.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-start.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $padStart = (__webpack_require__(/*! ../internals/string-pad */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad.js").start);
var WEBKIT_BUG = __webpack_require__(/*! ../internals/string-pad-webkit-bug */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-pad-webkit-bug.js");

// `String.prototype.padStart` method
// https://tc39.es/ecma262/#sec-string.prototype.padstart
$({ target: 'String', proto: true, forced: WEBKIT_BUG }, {
  padStart: function padStart(maxLength /* , fillString = ' ' */) {
    return $padStart(this, maxLength, arguments.length > 1 ? arguments[1] : undefined);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.raw.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.raw.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");

var push = uncurryThis([].push);
var join = uncurryThis([].join);

// `String.raw` method
// https://tc39.es/ecma262/#sec-string.raw
$({ target: 'String', stat: true }, {
  raw: function raw(template) {
    var rawTemplate = toIndexedObject(toObject(template).raw);
    var literalSegments = lengthOfArrayLike(rawTemplate);
    var argumentsLength = arguments.length;
    var elements = [];
    var i = 0;
    while (literalSegments > i) {
      push(elements, toString(rawTemplate[i++]));
      if (i === literalSegments) return join(elements, '');
      if (i < argumentsLength) push(elements, toString(arguments[i]));
    }
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.repeat.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.repeat.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var repeat = __webpack_require__(/*! ../internals/string-repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-repeat.js");

// `String.prototype.repeat` method
// https://tc39.es/ecma262/#sec-string.prototype.repeat
$({ target: 'String', proto: true }, {
  repeat: repeat
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace-all.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace-all.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var REPLACE = wellKnownSymbol('replace');
var RegExpPrototype = RegExp.prototype;
var TypeError = global.TypeError;
var getFlags = uncurryThis(regExpFlags);
var indexOf = uncurryThis(''.indexOf);
var replace = uncurryThis(''.replace);
var stringSlice = uncurryThis(''.slice);
var max = Math.max;

var stringIndexOf = function (string, searchValue, fromIndex) {
  if (fromIndex > string.length) return -1;
  if (searchValue === '') return fromIndex;
  return indexOf(string, searchValue, fromIndex);
};

// `String.prototype.replaceAll` method
// https://tc39.es/ecma262/#sec-string.prototype.replaceall
$({ target: 'String', proto: true }, {
  replaceAll: function replaceAll(searchValue, replaceValue) {
    var O = requireObjectCoercible(this);
    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;
    var position = 0;
    var endOfLastMatch = 0;
    var result = '';
    if (searchValue != null) {
      IS_REG_EXP = isRegExp(searchValue);
      if (IS_REG_EXP) {
        flags = toString(requireObjectCoercible('flags' in RegExpPrototype
          ? searchValue.flags
          : getFlags(searchValue)
        ));
        if (!~indexOf(flags, 'g')) throw TypeError('`.replaceAll` does not allow non-global regexes');
      }
      replacer = getMethod(searchValue, REPLACE);
      if (replacer) {
        return call(replacer, searchValue, O, replaceValue);
      } else if (IS_PURE && IS_REG_EXP) {
        return replace(toString(O), searchValue, replaceValue);
      }
    }
    string = toString(O);
    searchString = toString(searchValue);
    functionalReplace = isCallable(replaceValue);
    if (!functionalReplace) replaceValue = toString(replaceValue);
    searchLength = searchString.length;
    advanceBy = max(1, searchLength);
    position = stringIndexOf(string, searchString, 0);
    while (position !== -1) {
      replacement = functionalReplace
        ? toString(replaceValue(searchString, position, string))
        : getSubstitution(searchString, string, position, [], undefined, replaceValue);
      result += stringSlice(string, endOfLastMatch, position) + replacement;
      endOfLastMatch = position + searchLength;
      position = stringIndexOf(string, searchString, position + advanceBy);
    }
    if (endOfLastMatch < string.length) {
      result += stringSlice(string, endOfLastMatch);
    }
    return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var getSubstitution = __webpack_require__(/*! ../internals/get-substitution */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-substitution.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var REPLACE = wellKnownSymbol('replace');
var max = Math.max;
var min = Math.min;
var concat = uncurryThis([].concat);
var push = uncurryThis([].push);
var stringIndexOf = uncurryThis(''.indexOf);
var stringSlice = uncurryThis(''.slice);

var maybeToString = function (it) {
  return it === undefined ? it : String(it);
};

// IE <= 11 replaces $0 with the whole match, as if it was $&
// https://stackoverflow.com/questions/6024666/getting-ie-to-replace-a-regex-with-the-literal-string-0
var REPLACE_KEEPS_$0 = (function () {
  // eslint-disable-next-line regexp/prefer-escape-replacement-dollar-char -- required for testing
  return 'a'.replace(/./, '$0') === '$0';
})();

// Safari <= 13.0.3(?) substitutes nth capture where n>m with an empty string
var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = (function () {
  if (/./[REPLACE]) {
    return /./[REPLACE]('a', '$0') === '';
  }
  return false;
})();

var REPLACE_SUPPORTS_NAMED_GROUPS = !fails(function () {
  var re = /./;
  re.exec = function () {
    var result = [];
    result.groups = { a: '7' };
    return result;
  };
  // eslint-disable-next-line regexp/no-useless-dollar-replacements -- false positive
  return ''.replace(re, '$<a>') !== '7';
});

// @@replace logic
fixRegExpWellKnownSymbolLogic('replace', function (_, nativeReplace, maybeCallNative) {
  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';

  return [
    // `String.prototype.replace` method
    // https://tc39.es/ecma262/#sec-string.prototype.replace
    function replace(searchValue, replaceValue) {
      var O = requireObjectCoercible(this);
      var replacer = searchValue == undefined ? undefined : getMethod(searchValue, REPLACE);
      return replacer
        ? call(replacer, searchValue, O, replaceValue)
        : call(nativeReplace, toString(O), searchValue, replaceValue);
    },
    // `RegExp.prototype[@@replace]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@replace
    function (string, replaceValue) {
      var rx = anObject(this);
      var S = toString(string);

      if (
        typeof replaceValue == 'string' &&
        stringIndexOf(replaceValue, UNSAFE_SUBSTITUTE) === -1 &&
        stringIndexOf(replaceValue, '$<') === -1
      ) {
        var res = maybeCallNative(nativeReplace, rx, S, replaceValue);
        if (res.done) return res.value;
      }

      var functionalReplace = isCallable(replaceValue);
      if (!functionalReplace) replaceValue = toString(replaceValue);

      var global = rx.global;
      if (global) {
        var fullUnicode = rx.unicode;
        rx.lastIndex = 0;
      }
      var results = [];
      while (true) {
        var result = regExpExec(rx, S);
        if (result === null) break;

        push(results, result);
        if (!global) break;

        var matchStr = toString(result[0]);
        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);
      }

      var accumulatedResult = '';
      var nextSourcePosition = 0;
      for (var i = 0; i < results.length; i++) {
        result = results[i];

        var matched = toString(result[0]);
        var position = max(min(toIntegerOrInfinity(result.index), S.length), 0);
        var captures = [];
        // NOTE: This is equivalent to
        //   captures = result.slice(1).map(maybeToString)
        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in
        // the slice polyfill when slicing native arrays) "doesn't work" in safari 9 and
        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.
        for (var j = 1; j < result.length; j++) push(captures, maybeToString(result[j]));
        var namedCaptures = result.groups;
        if (functionalReplace) {
          var replacerArgs = concat([matched], captures, position, S);
          if (namedCaptures !== undefined) push(replacerArgs, namedCaptures);
          var replacement = toString(apply(replaceValue, undefined, replacerArgs));
        } else {
          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);
        }
        if (position >= nextSourcePosition) {
          accumulatedResult += stringSlice(S, nextSourcePosition, position) + replacement;
          nextSourcePosition = position + matched.length;
        }
      }
      return accumulatedResult + stringSlice(S, nextSourcePosition);
    }
  ];
}, !REPLACE_SUPPORTS_NAMED_GROUPS || !REPLACE_KEEPS_$0 || REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.search.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.search.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var sameValue = __webpack_require__(/*! ../internals/same-value */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/same-value.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var regExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");

// @@search logic
fixRegExpWellKnownSymbolLogic('search', function (SEARCH, nativeSearch, maybeCallNative) {
  return [
    // `String.prototype.search` method
    // https://tc39.es/ecma262/#sec-string.prototype.search
    function search(regexp) {
      var O = requireObjectCoercible(this);
      var searcher = regexp == undefined ? undefined : getMethod(regexp, SEARCH);
      return searcher ? call(searcher, regexp, O) : new RegExp(regexp)[SEARCH](toString(O));
    },
    // `RegExp.prototype[@@search]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@search
    function (string) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(nativeSearch, rx, S);

      if (res.done) return res.value;

      var previousLastIndex = rx.lastIndex;
      if (!sameValue(previousLastIndex, 0)) rx.lastIndex = 0;
      var result = regExpExec(rx, S);
      if (!sameValue(rx.lastIndex, previousLastIndex)) rx.lastIndex = previousLastIndex;
      return result === null ? -1 : result.index;
    }
  ];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.small.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.small.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.small` method
// https://tc39.es/ecma262/#sec-string.prototype.small
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('small') }, {
  small: function small() {
    return createHTML(this, 'small', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.split.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.split.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fixRegExpWellKnownSymbolLogic = __webpack_require__(/*! ../internals/fix-regexp-well-known-symbol-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fix-regexp-well-known-symbol-logic.js");
var isRegExp = __webpack_require__(/*! ../internals/is-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-regexp.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var speciesConstructor = __webpack_require__(/*! ../internals/species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/species-constructor.js");
var advanceStringIndex = __webpack_require__(/*! ../internals/advance-string-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/advance-string-index.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var getMethod = __webpack_require__(/*! ../internals/get-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-method.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js");
var callRegExpExec = __webpack_require__(/*! ../internals/regexp-exec-abstract */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec-abstract.js");
var regexpExec = __webpack_require__(/*! ../internals/regexp-exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-exec.js");
var stickyHelpers = __webpack_require__(/*! ../internals/regexp-sticky-helpers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-sticky-helpers.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var UNSUPPORTED_Y = stickyHelpers.UNSUPPORTED_Y;
var MAX_UINT32 = 0xFFFFFFFF;
var min = Math.min;
var $push = [].push;
var exec = uncurryThis(/./.exec);
var push = uncurryThis($push);
var stringSlice = uncurryThis(''.slice);

// Chrome 51 has a buggy "split" implementation when RegExp#exec !== nativeExec
// Weex JS has frozen built-in prototypes, so use try / catch wrapper
var SPLIT_WORKS_WITH_OVERWRITTEN_EXEC = !fails(function () {
  // eslint-disable-next-line regexp/no-empty-group -- required for testing
  var re = /(?:)/;
  var originalExec = re.exec;
  re.exec = function () { return originalExec.apply(this, arguments); };
  var result = 'ab'.split(re);
  return result.length !== 2 || result[0] !== 'a' || result[1] !== 'b';
});

// @@split logic
fixRegExpWellKnownSymbolLogic('split', function (SPLIT, nativeSplit, maybeCallNative) {
  var internalSplit;
  if (
    'abbc'.split(/(b)*/)[1] == 'c' ||
    // eslint-disable-next-line regexp/no-empty-group -- required for testing
    'test'.split(/(?:)/, -1).length != 4 ||
    'ab'.split(/(?:ab)*/).length != 2 ||
    '.'.split(/(.?)(.?)/).length != 4 ||
    // eslint-disable-next-line regexp/no-empty-capturing-group, regexp/no-empty-group -- required for testing
    '.'.split(/()()/).length > 1 ||
    ''.split(/.?/).length
  ) {
    // based on es5-shim implementation, need to rework it
    internalSplit = function (separator, limit) {
      var string = toString(requireObjectCoercible(this));
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (separator === undefined) return [string];
      // If `separator` is not a regex, use native split
      if (!isRegExp(separator)) {
        return call(nativeSplit, string, separator, lim);
      }
      var output = [];
      var flags = (separator.ignoreCase ? 'i' : '') +
                  (separator.multiline ? 'm' : '') +
                  (separator.unicode ? 'u' : '') +
                  (separator.sticky ? 'y' : '');
      var lastLastIndex = 0;
      // Make `global` and avoid `lastIndex` issues by working with a copy
      var separatorCopy = new RegExp(separator.source, flags + 'g');
      var match, lastIndex, lastLength;
      while (match = call(regexpExec, separatorCopy, string)) {
        lastIndex = separatorCopy.lastIndex;
        if (lastIndex > lastLastIndex) {
          push(output, stringSlice(string, lastLastIndex, match.index));
          if (match.length > 1 && match.index < string.length) apply($push, output, arraySlice(match, 1));
          lastLength = match[0].length;
          lastLastIndex = lastIndex;
          if (output.length >= lim) break;
        }
        if (separatorCopy.lastIndex === match.index) separatorCopy.lastIndex++; // Avoid an infinite loop
      }
      if (lastLastIndex === string.length) {
        if (lastLength || !exec(separatorCopy, '')) push(output, '');
      } else push(output, stringSlice(string, lastLastIndex));
      return output.length > lim ? arraySlice(output, 0, lim) : output;
    };
  // Chakra, V8
  } else if ('0'.split(undefined, 0).length) {
    internalSplit = function (separator, limit) {
      return separator === undefined && limit === 0 ? [] : call(nativeSplit, this, separator, limit);
    };
  } else internalSplit = nativeSplit;

  return [
    // `String.prototype.split` method
    // https://tc39.es/ecma262/#sec-string.prototype.split
    function split(separator, limit) {
      var O = requireObjectCoercible(this);
      var splitter = separator == undefined ? undefined : getMethod(separator, SPLIT);
      return splitter
        ? call(splitter, separator, O, limit)
        : call(internalSplit, toString(O), separator, limit);
    },
    // `RegExp.prototype[@@split]` method
    // https://tc39.es/ecma262/#sec-regexp.prototype-@@split
    //
    // NOTE: This cannot be properly polyfilled in engines that don't support
    // the 'y' flag.
    function (string, limit) {
      var rx = anObject(this);
      var S = toString(string);
      var res = maybeCallNative(internalSplit, rx, S, limit, internalSplit !== nativeSplit);

      if (res.done) return res.value;

      var C = speciesConstructor(rx, RegExp);

      var unicodeMatching = rx.unicode;
      var flags = (rx.ignoreCase ? 'i' : '') +
                  (rx.multiline ? 'm' : '') +
                  (rx.unicode ? 'u' : '') +
                  (UNSUPPORTED_Y ? 'g' : 'y');

      // ^(? + rx + ) is needed, in combination with some S slicing, to
      // simulate the 'y' flag.
      var splitter = new C(UNSUPPORTED_Y ? '^(?:' + rx.source + ')' : rx, flags);
      var lim = limit === undefined ? MAX_UINT32 : limit >>> 0;
      if (lim === 0) return [];
      if (S.length === 0) return callRegExpExec(splitter, S) === null ? [S] : [];
      var p = 0;
      var q = 0;
      var A = [];
      while (q < S.length) {
        splitter.lastIndex = UNSUPPORTED_Y ? 0 : q;
        var z = callRegExpExec(splitter, UNSUPPORTED_Y ? stringSlice(S, q) : S);
        var e;
        if (
          z === null ||
          (e = min(toLength(splitter.lastIndex + (UNSUPPORTED_Y ? q : 0)), S.length)) === p
        ) {
          q = advanceStringIndex(S, q, unicodeMatching);
        } else {
          push(A, stringSlice(S, p, q));
          if (A.length === lim) return A;
          for (var i = 1; i <= z.length - 1; i++) {
            push(A, z[i]);
            if (A.length === lim) return A;
          }
          q = p = e;
        }
      }
      push(A, stringSlice(S, p));
      return A;
    }
  ];
}, !SPLIT_WORKS_WITH_OVERWRITTEN_EXEC, UNSUPPORTED_Y);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.starts-with.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.starts-with.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var getOwnPropertyDescriptor = (__webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js").f);
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var notARegExp = __webpack_require__(/*! ../internals/not-a-regexp */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/not-a-regexp.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var correctIsRegExpLogic = __webpack_require__(/*! ../internals/correct-is-regexp-logic */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/correct-is-regexp-logic.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

// eslint-disable-next-line es/no-string-prototype-startswith -- safe
var un$StartsWith = uncurryThis(''.startsWith);
var stringSlice = uncurryThis(''.slice);
var min = Math.min;

var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');
// https://github.com/zloirock/core-js/pull/702
var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}();

// `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith
$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {
  startsWith: function startsWith(searchString /* , position = 0 */) {
    var that = toString(requireObjectCoercible(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = toString(searchString);
    return un$StartsWith
      ? un$StartsWith(that, search, index)
      : stringSlice(that, index, index + search.length) === search;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.strike.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.strike.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.strike` method
// https://tc39.es/ecma262/#sec-string.prototype.strike
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('strike') }, {
  strike: function strike() {
    return createHTML(this, 'strike', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sub.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sub.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.sub` method
// https://tc39.es/ecma262/#sec-string.prototype.sub
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sub') }, {
  sub: function sub() {
    return createHTML(this, 'sub', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.substr.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.substr.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var requireObjectCoercible = __webpack_require__(/*! ../internals/require-object-coercible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/require-object-coercible.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var stringSlice = uncurryThis(''.slice);
var max = Math.max;
var min = Math.min;

// eslint-disable-next-line unicorn/prefer-string-slice -- required for testing
var FORCED = !''.substr || 'ab'.substr(-1) !== 'b';

// `String.prototype.substr` method
// https://tc39.es/ecma262/#sec-string.prototype.substr
$({ target: 'String', proto: true, forced: FORCED }, {
  substr: function substr(start, length) {
    var that = toString(requireObjectCoercible(this));
    var size = that.length;
    var intStart = toIntegerOrInfinity(start);
    var intLength, intEnd;
    if (intStart === Infinity) intStart = 0;
    if (intStart < 0) intStart = max(size + intStart, 0);
    intLength = length === undefined ? size : toIntegerOrInfinity(length);
    if (intLength <= 0 || intLength === Infinity) return '';
    intEnd = min(intStart + intLength, size);
    return intStart >= intEnd ? '' : stringSlice(that, intStart, intEnd);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sup.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sup.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var createHTML = __webpack_require__(/*! ../internals/create-html */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-html.js");
var forcedStringHTMLMethod = __webpack_require__(/*! ../internals/string-html-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-html-forced.js");

// `String.prototype.sup` method
// https://tc39.es/ecma262/#sec-string.prototype.sup
$({ target: 'String', proto: true, forced: forcedStringHTMLMethod('sup') }, {
  sup: function sup() {
    return createHTML(this, 'sup', '', '');
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-end.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-end.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $trimEnd = (__webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").end);
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js");

var FORCED = forcedStringTrimMethod('trimEnd');

var trimEnd = FORCED ? function trimEnd() {
  return $trimEnd(this);
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimEnd;

// `String.prototype.{ trimEnd, trimRight }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimend
// https://tc39.es/ecma262/#String.prototype.trimright
$({ target: 'String', proto: true, name: 'trimEnd', forced: FORCED }, {
  trimEnd: trimEnd,
  trimRight: trimEnd
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-start.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-start.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $trimStart = (__webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").start);
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js");

var FORCED = forcedStringTrimMethod('trimStart');

var trimStart = FORCED ? function trimStart() {
  return $trimStart(this);
// eslint-disable-next-line es/no-string-prototype-trimstart-trimend -- safe
} : ''.trimStart;

// `String.prototype.{ trimStart, trimLeft }` methods
// https://tc39.es/ecma262/#sec-string.prototype.trimstart
// https://tc39.es/ecma262/#String.prototype.trimleft
$({ target: 'String', proto: true, name: 'trimStart', forced: FORCED }, {
  trimStart: trimStart,
  trimLeft: trimStart
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim.js":
/*!*******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim.js ***!
  \*******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var $trim = (__webpack_require__(/*! ../internals/string-trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim.js").trim);
var forcedStringTrimMethod = __webpack_require__(/*! ../internals/string-trim-forced */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-trim-forced.js");

// `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim
$({ target: 'String', proto: true, forced: forcedStringTrimMethod('trim') }, {
  trim: function trim() {
    return $trim(this);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.async-iterator.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.async-iterator.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.asyncIterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.asynciterator
defineWellKnownSymbol('asyncIterator');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.description.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.description.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";
// `Symbol.prototype.description` getter
// https://tc39.es/ecma262/#sec-symbol.prototype.description

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var copyConstructorProperties = __webpack_require__(/*! ../internals/copy-constructor-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/copy-constructor-properties.js");

var NativeSymbol = global.Symbol;
var SymbolPrototype = NativeSymbol && NativeSymbol.prototype;

if (DESCRIPTORS && isCallable(NativeSymbol) && (!('description' in SymbolPrototype) ||
  // Safari 12 bug
  NativeSymbol().description !== undefined
)) {
  var EmptyStringDescriptionStore = {};
  // wrap Symbol constructor for correct work with undefined description
  var SymbolWrapper = function Symbol() {
    var description = arguments.length < 1 || arguments[0] === undefined ? undefined : toString(arguments[0]);
    var result = isPrototypeOf(SymbolPrototype, this)
      ? new NativeSymbol(description)
      // in Edge 13, String(Symbol(undefined)) === 'Symbol(undefined)'
      : description === undefined ? NativeSymbol() : NativeSymbol(description);
    if (description === '') EmptyStringDescriptionStore[result] = true;
    return result;
  };

  copyConstructorProperties(SymbolWrapper, NativeSymbol);
  SymbolWrapper.prototype = SymbolPrototype;
  SymbolPrototype.constructor = SymbolWrapper;

  var NATIVE_SYMBOL = String(NativeSymbol('test')) == 'Symbol(test)';
  var symbolToString = uncurryThis(SymbolPrototype.toString);
  var symbolValueOf = uncurryThis(SymbolPrototype.valueOf);
  var regexp = /^Symbol\((.*)\)[^)]+$/;
  var replace = uncurryThis(''.replace);
  var stringSlice = uncurryThis(''.slice);

  defineProperty(SymbolPrototype, 'description', {
    configurable: true,
    get: function description() {
      var symbol = symbolValueOf(this);
      var string = symbolToString(symbol);
      if (hasOwn(EmptyStringDescriptionStore, symbol)) return '';
      var desc = NATIVE_SYMBOL ? stringSlice(string, 7, -1) : replace(string, regexp, '$1');
      return desc === '' ? undefined : desc;
    }
  });

  $({ global: true, forced: true }, {
    Symbol: SymbolWrapper
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.has-instance.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.has-instance.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.hasInstance` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.hasinstance
defineWellKnownSymbol('hasInstance');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js":
/*!***********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js ***!
  \***********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable
defineWellKnownSymbol('isConcatSpreadable');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.iterator.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.iterator.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator
defineWellKnownSymbol('iterator');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.js":
/*!**************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.js ***!
  \**************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var NATIVE_SYMBOL = __webpack_require__(/*! ../internals/native-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-symbol.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var isArray = __webpack_require__(/*! ../internals/is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-array.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isPrototypeOf = __webpack_require__(/*! ../internals/object-is-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-prototype-of.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var toObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-indexed-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-indexed-object.js");
var toPropertyKey = __webpack_require__(/*! ../internals/to-property-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-property-key.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var nativeObjectCreate = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var objectKeys = __webpack_require__(/*! ../internals/object-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-keys.js");
var getOwnPropertyNamesModule = __webpack_require__(/*! ../internals/object-get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names.js");
var getOwnPropertyNamesExternal = __webpack_require__(/*! ../internals/object-get-own-property-names-external */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-names-external.js");
var getOwnPropertySymbolsModule = __webpack_require__(/*! ../internals/object-get-own-property-symbols */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-symbols.js");
var getOwnPropertyDescriptorModule = __webpack_require__(/*! ../internals/object-get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-get-own-property-descriptor.js");
var definePropertyModule = __webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js");
var definePropertiesModule = __webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js");
var propertyIsEnumerableModule = __webpack_require__(/*! ../internals/object-property-is-enumerable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-property-is-enumerable.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var shared = __webpack_require__(/*! ../internals/shared */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared.js");
var sharedKey = __webpack_require__(/*! ../internals/shared-key */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/shared-key.js");
var hiddenKeys = __webpack_require__(/*! ../internals/hidden-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/hidden-keys.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var wrappedWellKnownSymbolModule = __webpack_require__(/*! ../internals/well-known-symbol-wrapped */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol-wrapped.js");
var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach);

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');

var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);

var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];
var TypeError = global.TypeError;
var QObject = global.QObject;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var push = uncurryThis([].push);

var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');

// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173
var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;

// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687
var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);
  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPropertyKey(P);
  anObject(Attributes);
  if (hasOwn(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!hasOwn(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (hasOwn(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor(0, false) });
    } return setSymbolDescriptor(O, key, Attributes);
  } return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || call($propertyIsEnumerable, properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPropertyKey(V);
  var enumerable = call(nativePropertyIsEnumerable, this, P);
  if (this === ObjectPrototype && hasOwn(AllSymbols, P) && !hasOwn(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !hasOwn(this, P) || !hasOwn(AllSymbols, P) || hasOwn(this, HIDDEN) && this[HIDDEN][P]
    ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPropertyKey(P);
  if (it === ObjectPrototype && hasOwn(AllSymbols, key) && !hasOwn(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);
  if (descriptor && hasOwn(AllSymbols, key) && !(hasOwn(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }
  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!hasOwn(AllSymbols, key) && !hasOwn(hiddenKeys, key)) push(result, key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (hasOwn(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn(ObjectPrototype, key))) {
      push(result, AllSymbols[key]);
    }
  });
  return result;
};

// `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor
if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (isPrototypeOf(SymbolPrototype, this)) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);
    var tag = uid(description);
    var setter = function (value) {
      if (this === ObjectPrototype) call(setter, ObjectPrototypeSymbols, value);
      if (hasOwn(this, HIDDEN) && hasOwn(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };
    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, { configurable: true, set: setter });
    return wrap(tag, description);
  };

  SymbolPrototype = $Symbol[PROTOTYPE];

  redefine(SymbolPrototype, 'toString', function toString() {
    return getInternalState(this).tag;
  });

  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });

  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  definePropertiesModule.f = $defineProperties;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty(SymbolPrototype, 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });
    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, { unsafe: true });
    }
  }
}

$({ global: true, wrap: true, forced: !NATIVE_SYMBOL, sham: !NATIVE_SYMBOL }, {
  Symbol: $Symbol
});

$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});

$({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL }, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = $toString(key);
    if (hasOwn(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (hasOwn(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () { USE_SETTER = true; },
  useSimple: function () { USE_SETTER = false; }
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL, sham: !DESCRIPTORS }, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});

$({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL }, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
});

// Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443
$({ target: 'Object', stat: true, forced: fails(function () { getOwnPropertySymbolsModule.f(1); }) }, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
});

// `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify
if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol();
    // MS Edge converts symbol values to JSON as {}
    return $stringify([symbol]) != '[null]'
      // WebKit converts symbol values to JSON as null
      || $stringify({ a: symbol }) != '{}'
      // V8 throws on boxed symbols
      || $stringify(Object(symbol)) != '{}';
  });

  $({ target: 'JSON', stat: true, forced: FORCED_JSON_STRINGIFY }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = arraySlice(arguments);
      var $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined
      if (!isArray(replacer)) replacer = function (key, value) {
        if (isCallable($replacer)) value = call($replacer, this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return apply($stringify, null, args);
    }
  });
}

// `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive
if (!SymbolPrototype[TO_PRIMITIVE]) {
  var valueOf = SymbolPrototype.valueOf;
  // eslint-disable-next-line no-unused-vars -- required for .length
  redefine(SymbolPrototype, TO_PRIMITIVE, function (hint) {
    // TODO: improve hint logic
    return call(valueOf, this);
  });
}
// `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag
setToStringTag($Symbol, SYMBOL);

hiddenKeys[HIDDEN] = true;


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match-all.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match-all.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.matchAll` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.matchall
defineWellKnownSymbol('matchAll');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.match` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.match
defineWellKnownSymbol('match');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.replace.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.replace.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.replace` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.replace
defineWellKnownSymbol('replace');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.search.js":
/*!*********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.search.js ***!
  \*********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.search` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.search
defineWellKnownSymbol('search');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.species.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.species.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.species` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.species
defineWellKnownSymbol('species');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.split.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.split.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.split` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.split
defineWellKnownSymbol('split');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-primitive.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-primitive.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive
defineWellKnownSymbol('toPrimitive');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-string-tag.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-string-tag.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.toStringTag` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.tostringtag
defineWellKnownSymbol('toStringTag');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.unscopables.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.unscopables.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var defineWellKnownSymbol = __webpack_require__(/*! ../internals/define-well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/define-well-known-symbol.js");

// `Symbol.unscopables` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.unscopables
defineWellKnownSymbol('unscopables');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.at.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.at.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toIntegerOrInfinity = __webpack_require__(/*! ../internals/to-integer-or-infinity */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-integer-or-infinity.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.at` method
// https://github.com/tc39/proposal-relative-indexing-method
exportTypedArrayMethod('at', function at(index) {
  var O = aTypedArray(this);
  var len = lengthOfArrayLike(O);
  var relativeIndex = toIntegerOrInfinity(index);
  var k = relativeIndex >= 0 ? relativeIndex : len + relativeIndex;
  return (k < 0 || k >= len) ? undefined : O[k];
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.copy-within.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.copy-within.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $ArrayCopyWithin = __webpack_require__(/*! ../internals/array-copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-copy-within.js");

var u$ArrayCopyWithin = uncurryThis($ArrayCopyWithin);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.copyWithin` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.copywithin
exportTypedArrayMethod('copyWithin', function copyWithin(target, start /* , end */) {
  return u$ArrayCopyWithin(aTypedArray(this), target, start, arguments.length > 2 ? arguments[2] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.every.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.every.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $every = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").every);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.every` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.every
exportTypedArrayMethod('every', function every(callbackfn /* , thisArg */) {
  return $every(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.fill.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.fill.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var $fill = __webpack_require__(/*! ../internals/array-fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-fill.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.fill` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.fill
exportTypedArrayMethod('fill', function fill(value /* , start, end */) {
  var length = arguments.length;
  return call(
    $fill,
    aTypedArray(this),
    value,
    length > 1 ? arguments[1] : undefined,
    length > 2 ? arguments[2] : undefined
  );
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.filter.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.filter.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $filter = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").filter);
var fromSpeciesAndList = __webpack_require__(/*! ../internals/typed-array-from-species-and-list */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from-species-and-list.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.filter` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.filter
exportTypedArrayMethod('filter', function filter(callbackfn /* , thisArg */) {
  var list = $filter(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  return fromSpeciesAndList(this, list);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find-index.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find-index.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $findIndex = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").findIndex);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.findIndex` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.findindex
exportTypedArrayMethod('findIndex', function findIndex(predicate /* , thisArg */) {
  return $findIndex(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $find = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").find);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.find` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.find
exportTypedArrayMethod('find', function find(predicate /* , thisArg */) {
  return $find(aTypedArray(this), predicate, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float32-array.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float32-array.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Float32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Float32', function (init) {
  return function Float32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float64-array.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float64-array.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Float64Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Float64', function (init) {
  return function Float64Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.for-each.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.for-each.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $forEach = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").forEach);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.forEach` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.foreach
exportTypedArrayMethod('forEach', function forEach(callbackfn /* , thisArg */) {
  $forEach(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.from.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.from.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");
var exportTypedArrayStaticMethod = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").exportTypedArrayStaticMethod);
var typedArrayFrom = __webpack_require__(/*! ../internals/typed-array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-from.js");

// `%TypedArray%.from` method
// https://tc39.es/ecma262/#sec-%typedarray%.from
exportTypedArrayStaticMethod('from', typedArrayFrom, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.includes.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.includes.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $includes = (__webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").includes);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.includes` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.includes
exportTypedArrayMethod('includes', function includes(searchElement /* , fromIndex */) {
  return $includes(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.index-of.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.index-of.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $indexOf = (__webpack_require__(/*! ../internals/array-includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-includes.js").indexOf);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.indexof
exportTypedArrayMethod('indexOf', function indexOf(searchElement /* , fromIndex */) {
  return $indexOf(aTypedArray(this), searchElement, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int16-array.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int16-array.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Int16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Int16', function (init) {
  return function Int16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int32-array.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int32-array.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Int32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Int32', function (init) {
  return function Int32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int8-array.js":
/*!******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int8-array.js ***!
  \******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Int8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Int8', function (init) {
  return function Int8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.iterator.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.iterator.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var ArrayIterators = __webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var Uint8Array = global.Uint8Array;
var arrayValues = uncurryThis(ArrayIterators.values);
var arrayKeys = uncurryThis(ArrayIterators.keys);
var arrayEntries = uncurryThis(ArrayIterators.entries);
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var TypedArrayPrototype = Uint8Array && Uint8Array.prototype;

var GENERIC = !fails(function () {
  TypedArrayPrototype[ITERATOR].call([1]);
});

var ITERATOR_IS_VALUES = !!TypedArrayPrototype
  && TypedArrayPrototype.values
  && TypedArrayPrototype[ITERATOR] === TypedArrayPrototype.values
  && TypedArrayPrototype.values.name === 'values';

var typedArrayValues = function values() {
  return arrayValues(aTypedArray(this));
};

// `%TypedArray%.prototype.entries` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.entries
exportTypedArrayMethod('entries', function entries() {
  return arrayEntries(aTypedArray(this));
}, GENERIC);
// `%TypedArray%.prototype.keys` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.keys
exportTypedArrayMethod('keys', function keys() {
  return arrayKeys(aTypedArray(this));
}, GENERIC);
// `%TypedArray%.prototype.values` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.values
exportTypedArrayMethod('values', typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, { name: 'values' });
// `%TypedArray%.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype-@@iterator
exportTypedArrayMethod(ITERATOR, typedArrayValues, GENERIC || !ITERATOR_IS_VALUES, { name: 'values' });


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.join.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.join.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $join = uncurryThis([].join);

// `%TypedArray%.prototype.join` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.join
exportTypedArrayMethod('join', function join(separator) {
  return $join(aTypedArray(this), separator);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.last-index-of.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.last-index-of.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var $lastIndexOf = __webpack_require__(/*! ../internals/array-last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-last-index-of.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.lastIndexOf` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.lastindexof
exportTypedArrayMethod('lastIndexOf', function lastIndexOf(searchElement /* , fromIndex */) {
  var length = arguments.length;
  return apply($lastIndexOf, aTypedArray(this), length > 1 ? [searchElement, arguments[1]] : [searchElement]);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.map.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.map.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $map = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").map);
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.map` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.map
exportTypedArrayMethod('map', function map(mapfn /* , thisArg */) {
  return $map(aTypedArray(this), mapfn, arguments.length > 1 ? arguments[1] : undefined, function (O, length) {
    return new (typedArraySpeciesConstructor(O))(length);
  });
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.of.js":
/*!**********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.of.js ***!
  \**********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS = __webpack_require__(/*! ../internals/typed-array-constructors-require-wrappers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructors-require-wrappers.js");

var aTypedArrayConstructor = ArrayBufferViewCore.aTypedArrayConstructor;
var exportTypedArrayStaticMethod = ArrayBufferViewCore.exportTypedArrayStaticMethod;

// `%TypedArray%.of` method
// https://tc39.es/ecma262/#sec-%typedarray%.of
exportTypedArrayStaticMethod('of', function of(/* ...items */) {
  var index = 0;
  var length = arguments.length;
  var result = new (aTypedArrayConstructor(this))(length);
  while (length > index) result[index] = arguments[index++];
  return result;
}, TYPED_ARRAYS_CONSTRUCTORS_REQUIRES_WRAPPERS);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce-right.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce-right.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $reduceRight = (__webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").right);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduceRicht` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduceright
exportTypedArrayMethod('reduceRight', function reduceRight(callbackfn /* , initialValue */) {
  var length = arguments.length;
  return $reduceRight(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce.js ***!
  \**************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $reduce = (__webpack_require__(/*! ../internals/array-reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-reduce.js").left);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.reduce` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reduce
exportTypedArrayMethod('reduce', function reduce(callbackfn /* , initialValue */) {
  var length = arguments.length;
  return $reduce(aTypedArray(this), callbackfn, length, length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reverse.js":
/*!***************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reverse.js ***!
  \***************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var floor = Math.floor;

// `%TypedArray%.prototype.reverse` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.reverse
exportTypedArrayMethod('reverse', function reverse() {
  var that = this;
  var length = aTypedArray(that).length;
  var middle = floor(length / 2);
  var index = 0;
  var value;
  while (index < middle) {
    value = that[index];
    that[index++] = that[--length];
    that[length] = value;
  } return that;
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.set.js":
/*!***********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.set.js ***!
  \***********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var toOffset = __webpack_require__(/*! ../internals/to-offset */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-offset.js");
var toIndexedObject = __webpack_require__(/*! ../internals/to-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-object.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");

var RangeError = global.RangeError;
var Int8Array = global.Int8Array;
var Int8ArrayPrototype = Int8Array && Int8Array.prototype;
var $set = Int8ArrayPrototype && Int8ArrayPrototype.set;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

var WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS = !fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  var array = new Uint8ClampedArray(2);
  call($set, array, { length: 1, 0: 3 }, 1);
  return array[1] !== 3;
});

// https://bugs.chromium.org/p/v8/issues/detail?id=11294 and other
var TO_OBJECT_BUG = WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS && ArrayBufferViewCore.NATIVE_ARRAY_BUFFER_VIEWS && fails(function () {
  var array = new Int8Array(2);
  array.set(1);
  array.set('2', 1);
  return array[0] !== 0 || array[1] !== 2;
});

// `%TypedArray%.prototype.set` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.set
exportTypedArrayMethod('set', function set(arrayLike /* , offset */) {
  aTypedArray(this);
  var offset = toOffset(arguments.length > 1 ? arguments[1] : undefined, 1);
  var src = toIndexedObject(arrayLike);
  if (WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS) return call($set, this, src, offset);
  var length = this.length;
  var len = lengthOfArrayLike(src);
  var index = 0;
  if (len + offset > length) throw RangeError('Wrong length');
  while (index < len) this[offset + index] = src[index++];
}, !WORKS_WITH_OBJECTS_AND_GEERIC_ON_TYPED_ARRAYS || TO_OBJECT_BUG);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.slice.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.slice.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

var FORCED = fails(function () {
  // eslint-disable-next-line es/no-typed-arrays -- required for testing
  new Int8Array(1).slice();
});

// `%TypedArray%.prototype.slice` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.slice
exportTypedArrayMethod('slice', function slice(start, end) {
  var list = arraySlice(aTypedArray(this), start, end);
  var C = typedArraySpeciesConstructor(this);
  var index = 0;
  var length = list.length;
  var result = new C(length);
  while (length > index) result[index] = list[index++];
  return result;
}, FORCED);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.some.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.some.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var $some = (__webpack_require__(/*! ../internals/array-iteration */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-iteration.js").some);

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.some` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.some
exportTypedArrayMethod('some', function some(callbackfn /* , thisArg */) {
  return $some(aTypedArray(this), callbackfn, arguments.length > 1 ? arguments[1] : undefined);
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.sort.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.sort.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var internalSort = __webpack_require__(/*! ../internals/array-sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var FF = __webpack_require__(/*! ../internals/engine-ff-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-ff-version.js");
var IE_OR_EDGE = __webpack_require__(/*! ../internals/engine-is-ie-or-edge */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-ie-or-edge.js");
var V8 = __webpack_require__(/*! ../internals/engine-v8-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-v8-version.js");
var WEBKIT = __webpack_require__(/*! ../internals/engine-webkit-version */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-webkit-version.js");

var Array = global.Array;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var Uint16Array = global.Uint16Array;
var un$Sort = Uint16Array && uncurryThis(Uint16Array.prototype.sort);

// WebKit
var ACCEPT_INCORRECT_ARGUMENTS = !!un$Sort && !(fails(function () {
  un$Sort(new Uint16Array(2), null);
}) && fails(function () {
  un$Sort(new Uint16Array(2), {});
}));

var STABLE_SORT = !!un$Sort && !fails(function () {
  // feature detection can be too slow, so check engines versions
  if (V8) return V8 < 74;
  if (FF) return FF < 67;
  if (IE_OR_EDGE) return true;
  if (WEBKIT) return WEBKIT < 602;

  var array = new Uint16Array(516);
  var expected = Array(516);
  var index, mod;

  for (index = 0; index < 516; index++) {
    mod = index % 4;
    array[index] = 515 - index;
    expected[index] = index - 2 * mod + 3;
  }

  un$Sort(array, function (a, b) {
    return (a / 4 | 0) - (b / 4 | 0);
  });

  for (index = 0; index < 516; index++) {
    if (array[index] !== expected[index]) return true;
  }
});

var getSortCompare = function (comparefn) {
  return function (x, y) {
    if (comparefn !== undefined) return +comparefn(x, y) || 0;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (y !== y) return -1;
    // eslint-disable-next-line no-self-compare -- NaN check
    if (x !== x) return 1;
    if (x === 0 && y === 0) return 1 / x > 0 && 1 / y < 0 ? 1 : -1;
    return x > y;
  };
};

// `%TypedArray%.prototype.sort` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.sort
exportTypedArrayMethod('sort', function sort(comparefn) {
  if (comparefn !== undefined) aCallable(comparefn);
  if (STABLE_SORT) return un$Sort(this, comparefn);

  return internalSort(aTypedArray(this), getSortCompare(comparefn));
}, !STABLE_SORT || ACCEPT_INCORRECT_ARGUMENTS);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.subarray.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.subarray.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var toLength = __webpack_require__(/*! ../internals/to-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-length.js");
var toAbsoluteIndex = __webpack_require__(/*! ../internals/to-absolute-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-absolute-index.js");
var typedArraySpeciesConstructor = __webpack_require__(/*! ../internals/typed-array-species-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-species-constructor.js");

var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;

// `%TypedArray%.prototype.subarray` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.subarray
exportTypedArrayMethod('subarray', function subarray(begin, end) {
  var O = aTypedArray(this);
  var length = O.length;
  var beginIndex = toAbsoluteIndex(begin, length);
  var C = typedArraySpeciesConstructor(O);
  return new C(
    O.buffer,
    O.byteOffset + beginIndex * O.BYTES_PER_ELEMENT,
    toLength((end === undefined ? length : toAbsoluteIndex(end, length)) - beginIndex)
  );
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-locale-string.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-locale-string.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var ArrayBufferViewCore = __webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");

var Int8Array = global.Int8Array;
var aTypedArray = ArrayBufferViewCore.aTypedArray;
var exportTypedArrayMethod = ArrayBufferViewCore.exportTypedArrayMethod;
var $toLocaleString = [].toLocaleString;

// iOS Safari 6.x fails here
var TO_LOCALE_STRING_BUG = !!Int8Array && fails(function () {
  $toLocaleString.call(new Int8Array(1));
});

var FORCED = fails(function () {
  return [1, 2].toLocaleString() != new Int8Array([1, 2]).toLocaleString();
}) || !fails(function () {
  Int8Array.prototype.toLocaleString.call([1, 2]);
});

// `%TypedArray%.prototype.toLocaleString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tolocalestring
exportTypedArrayMethod('toLocaleString', function toLocaleString() {
  return apply(
    $toLocaleString,
    TO_LOCALE_STRING_BUG ? arraySlice(aTypedArray(this)) : aTypedArray(this),
    arraySlice(arguments)
  );
}, FORCED);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-string.js":
/*!*****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-string.js ***!
  \*****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var exportTypedArrayMethod = (__webpack_require__(/*! ../internals/array-buffer-view-core */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-buffer-view-core.js").exportTypedArrayMethod);
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");

var Uint8Array = global.Uint8Array;
var Uint8ArrayPrototype = Uint8Array && Uint8Array.prototype || {};
var arrayToString = [].toString;
var join = uncurryThis([].join);

if (fails(function () { arrayToString.call({}); })) {
  arrayToString = function toString() {
    return join(this);
  };
}

var IS_NOT_ARRAY_METHOD = Uint8ArrayPrototype.toString != arrayToString;

// `%TypedArray%.prototype.toString` method
// https://tc39.es/ecma262/#sec-%typedarray%.prototype.tostring
exportTypedArrayMethod('toString', arrayToString, IS_NOT_ARRAY_METHOD);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint16-array.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint16-array.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint16Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint16', function (init) {
  return function Uint16Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint32-array.js":
/*!********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint32-array.js ***!
  \********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint32Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint32', function (init) {
  return function Uint32Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-array.js":
/*!*******************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-array.js ***!
  \*******************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8Array` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8Array(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js":
/*!***************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js ***!
  \***************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var createTypedArrayConstructor = __webpack_require__(/*! ../internals/typed-array-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/typed-array-constructor.js");

// `Uint8ClampedArray` constructor
// https://tc39.es/ecma262/#sec-typedarray-objects
createTypedArrayConstructor('Uint8', function (init) {
  return function Uint8ClampedArray(data, byteOffset, length) {
    return init(this, data, byteOffset, length);
  };
}, true);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.unescape.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.unescape.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");

var fromCharCode = String.fromCharCode;
var charAt = uncurryThis(''.charAt);
var exec = uncurryThis(/./.exec);
var stringSlice = uncurryThis(''.slice);

var hex2 = /^[\da-f]{2}$/i;
var hex4 = /^[\da-f]{4}$/i;

// `unescape` method
// https://tc39.es/ecma262/#sec-unescape-string
$({ global: true }, {
  unescape: function unescape(string) {
    var str = toString(string);
    var result = '';
    var length = str.length;
    var index = 0;
    var chr, part;
    while (index < length) {
      chr = charAt(str, index++);
      if (chr === '%') {
        if (charAt(str, index) === 'u') {
          part = stringSlice(str, index + 1, index + 5);
          if (exec(hex4, part)) {
            result += fromCharCode(parseInt(part, 16));
            index += 5;
            continue;
          }
        } else {
          part = stringSlice(str, index, index + 2);
          if (exec(hex2, part)) {
            result += fromCharCode(parseInt(part, 16));
            index += 2;
            continue;
          }
        }
      }
      result += chr;
    } return result;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-map.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-map.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var InternalMetadataModule = __webpack_require__(/*! ../internals/internal-metadata */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-metadata.js");
var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isExtensible = __webpack_require__(/*! ../internals/object-is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-is-extensible.js");
var enforceInternalState = (__webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js").enforce);
var NATIVE_WEAK_MAP = __webpack_require__(/*! ../internals/native-weak-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-weak-map.js");

var IS_IE11 = !global.ActiveXObject && 'ActiveXObject' in global;
var InternalWeakMap;

var wrapper = function (init) {
  return function WeakMap() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
};

// `WeakMap` constructor
// https://tc39.es/ecma262/#sec-weakmap-constructor
var $WeakMap = collection('WeakMap', wrapper, collectionWeak);

// IE11 WeakMap frozen keys fix
// We can't use feature detection because it crash some old IE builds
// https://github.com/zloirock/core-js/issues/485
if (NATIVE_WEAK_MAP && IS_IE11) {
  InternalWeakMap = collectionWeak.getConstructor(wrapper, 'WeakMap', true);
  InternalMetadataModule.enable();
  var WeakMapPrototype = $WeakMap.prototype;
  var nativeDelete = uncurryThis(WeakMapPrototype['delete']);
  var nativeHas = uncurryThis(WeakMapPrototype.has);
  var nativeGet = uncurryThis(WeakMapPrototype.get);
  var nativeSet = uncurryThis(WeakMapPrototype.set);
  redefineAll(WeakMapPrototype, {
    'delete': function (key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeDelete(this, key) || state.frozen['delete'](key);
      } return nativeDelete(this, key);
    },
    has: function has(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) || state.frozen.has(key);
      } return nativeHas(this, key);
    },
    get: function get(key) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        return nativeHas(this, key) ? nativeGet(this, key) : state.frozen.get(key);
      } return nativeGet(this, key);
    },
    set: function set(key, value) {
      if (isObject(key) && !isExtensible(key)) {
        var state = enforceInternalState(this);
        if (!state.frozen) state.frozen = new InternalWeakMap();
        nativeHas(this, key) ? nativeSet(this, key, value) : state.frozen.set(key, value);
      } else nativeSet(this, key, value);
      return this;
    }
  });
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-set.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-set.js ***!
  \****************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var collection = __webpack_require__(/*! ../internals/collection */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection.js");
var collectionWeak = __webpack_require__(/*! ../internals/collection-weak */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/collection-weak.js");

// `WeakSet` constructor
// https://tc39.es/ecma262/#sec-weakset-constructor
collection('WeakSet', function (init) {
  return function WeakSet() { return init(this, arguments.length ? arguments[0] : undefined); };
}, collectionWeak);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.atob.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.atob.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var ctoi = (__webpack_require__(/*! ../internals/base64-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/base64-map.js").ctoi);

var disallowed = /[^\d+/a-z]/i;
var whitespaces = /[\t\n\f\r ]+/g;
var finalEq = /[=]+$/;

var $atob = getBuiltIn('atob');
var fromCharCode = String.fromCharCode;
var charAt = uncurryThis(''.charAt);
var replace = uncurryThis(''.replace);
var exec = uncurryThis(disallowed.exec);

var NO_SPACES_IGNORE = fails(function () {
  return atob(' ') !== '';
});

var NO_ARG_RECEIVING_CHECK = !NO_SPACES_IGNORE && !fails(function () {
  $atob();
});

// `atob` method
// https://html.spec.whatwg.org/multipage/webappapis.html#dom-atob
$({ global: true, enumerable: true, forced: NO_SPACES_IGNORE || NO_ARG_RECEIVING_CHECK }, {
  atob: function atob(data) {
    validateArgumentsLength(arguments.length, 1);
    if (NO_ARG_RECEIVING_CHECK) return $atob(data);
    var string = replace(toString(data), whitespaces, '');
    var output = '';
    var position = 0;
    var bc = 0;
    var chr, bs;
    if (string.length % 4 == 0) {
      string = replace(string, finalEq, '');
    }
    if (string.length % 4 == 1 || exec(disallowed, string)) {
      throw new (getBuiltIn('DOMException'))('The string is not correctly encoded', 'InvalidCharacterError');
    }
    while (chr = charAt(string, position++)) {
      if (hasOwn(ctoi, chr)) {
        bs = bc % 4 ? bs * 64 + ctoi[chr] : ctoi[chr];
        if (bc++ % 4) output += fromCharCode(255 & bs >> (-2 * bc & 6));
      }
    } return output;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.btoa.js":
/*!*************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.btoa.js ***!
  \*************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var itoc = (__webpack_require__(/*! ../internals/base64-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/base64-map.js").itoc);

var $btoa = getBuiltIn('btoa');
var charAt = uncurryThis(''.charAt);
var charCodeAt = uncurryThis(''.charCodeAt);

var NO_ARG_RECEIVING_CHECK = !!$btoa && !fails(function () {
  $btoa();
});

// `btoa` method
// https://html.spec.whatwg.org/multipage/webappapis.html#dom-btoa
$({ global: true, enumerable: true, forced: NO_ARG_RECEIVING_CHECK }, {
  btoa: function btoa(data) {
    validateArgumentsLength(arguments.length, 1);
    if (NO_ARG_RECEIVING_CHECK) return $btoa(data);
    var string = toString(data);
    var output = '';
    var position = 0;
    var map = itoc;
    var block, charCode;
    while (charAt(string, position) || (map = '=', position % 1)) {
      charCode = charCodeAt(string, position += 3 / 4);
      if (charCode > 0xFF) {
        throw new (getBuiltIn('DOMException'))('The string contains characters outside of the Latin1 range', 'InvalidCharacterError');
      }
      block = block << 8 | charCode;
      output += charAt(map, 63 & block >> 8 - position % 1 * 8);
    } return output;
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.for-each.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.for-each.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-token-list-prototype.js");
var forEach = __webpack_require__(/*! ../internals/array-for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-for-each.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");

var handlePrototype = function (CollectionPrototype) {
  // some Chrome versions have non-configurable methods on DOMTokenList
  if (CollectionPrototype && CollectionPrototype.forEach !== forEach) try {
    createNonEnumerableProperty(CollectionPrototype, 'forEach', forEach);
  } catch (error) {
    CollectionPrototype.forEach = forEach;
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  if (DOMIterables[COLLECTION_NAME]) {
    handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype);
  }
}

handlePrototype(DOMTokenListPrototype);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.iterator.js":
/*!*********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.iterator.js ***!
  \*********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var DOMIterables = __webpack_require__(/*! ../internals/dom-iterables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-iterables.js");
var DOMTokenListPrototype = __webpack_require__(/*! ../internals/dom-token-list-prototype */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-token-list-prototype.js");
var ArrayIteratorMethods = __webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");

var ITERATOR = wellKnownSymbol('iterator');
var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var ArrayValues = ArrayIteratorMethods.values;

var handlePrototype = function (CollectionPrototype, COLLECTION_NAME) {
  if (CollectionPrototype) {
    // some Chrome versions have non-configurable methods on DOMTokenList
    if (CollectionPrototype[ITERATOR] !== ArrayValues) try {
      createNonEnumerableProperty(CollectionPrototype, ITERATOR, ArrayValues);
    } catch (error) {
      CollectionPrototype[ITERATOR] = ArrayValues;
    }
    if (!CollectionPrototype[TO_STRING_TAG]) {
      createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
    }
    if (DOMIterables[COLLECTION_NAME]) for (var METHOD_NAME in ArrayIteratorMethods) {
      // some Chrome versions have non-configurable methods on DOMTokenList
      if (CollectionPrototype[METHOD_NAME] !== ArrayIteratorMethods[METHOD_NAME]) try {
        createNonEnumerableProperty(CollectionPrototype, METHOD_NAME, ArrayIteratorMethods[METHOD_NAME]);
      } catch (error) {
        CollectionPrototype[METHOD_NAME] = ArrayIteratorMethods[METHOD_NAME];
      }
    }
  }
};

for (var COLLECTION_NAME in DOMIterables) {
  handlePrototype(global[COLLECTION_NAME] && global[COLLECTION_NAME].prototype, COLLECTION_NAME);
}

handlePrototype(DOMTokenListPrototype, 'DOMTokenList');


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.constructor.js":
/*!**********************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.constructor.js ***!
  \**********************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var tryNodeRequire = __webpack_require__(/*! ../internals/try-node-require */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/try-node-require.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var defineProperties = (__webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js").f);
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var errorToString = __webpack_require__(/*! ../internals/error-to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-to-string.js");
var normalizeStringArgument = __webpack_require__(/*! ../internals/normalize-string-argument */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js");
var DOMExceptionConstants = __webpack_require__(/*! ../internals/dom-exception-constants */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-exception-constants.js");
var clearErrorStack = __webpack_require__(/*! ../internals/clear-error-stack */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/clear-error-stack.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var DOM_EXCEPTION = 'DOMException';
var DATA_CLONE_ERR = 'DATA_CLONE_ERR';
var Error = getBuiltIn('Error');
// NodeJS < 17.0 does not expose `DOMException` to global
var NativeDOMException = getBuiltIn(DOM_EXCEPTION) || (function () {
  try {
    // NodeJS < 15.0 does not expose `MessageChannel` to global
    var MessageChannel = getBuiltIn('MessageChannel') || tryNodeRequire('worker_threads').MessageChannel;
    // eslint-disable-next-line es/no-weak-map, unicorn/require-post-message-target-origin -- safe
    new MessageChannel().port1.postMessage(new WeakMap());
  } catch (error) {
    if (error.name == DATA_CLONE_ERR && error.code == 25) return error.constructor;
  }
})();
var NativeDOMExceptionPrototype = NativeDOMException && NativeDOMException.prototype;
var ErrorPrototype = Error.prototype;
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(DOM_EXCEPTION);
var HAS_STACK = 'stack' in Error(DOM_EXCEPTION);

var codeFor = function (name) {
  return hasOwn(DOMExceptionConstants, name) && DOMExceptionConstants[name].m ? DOMExceptionConstants[name].c : 0;
};

var $DOMException = function DOMException() {
  anInstance(this, DOMExceptionPrototype);
  var argumentsLength = arguments.length;
  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);
  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');
  var code = codeFor(name);
  setInternalState(this, {
    type: DOM_EXCEPTION,
    name: name,
    message: message,
    code: code
  });
  if (!DESCRIPTORS) {
    this.name = name;
    this.message = message;
    this.code = code;
  }
  if (HAS_STACK) {
    var error = Error(message);
    error.name = DOM_EXCEPTION;
    defineProperty(this, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));
  }
};

var DOMExceptionPrototype = $DOMException.prototype = create(ErrorPrototype);

var createGetterDescriptor = function (get) {
  return { enumerable: true, configurable: true, get: get };
};

var getterFor = function (key) {
  return createGetterDescriptor(function () {
    return getInternalState(this)[key];
  });
};

if (DESCRIPTORS) defineProperties(DOMExceptionPrototype, {
  name: getterFor('name'),
  message: getterFor('message'),
  code: getterFor('code')
});

defineProperty(DOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, $DOMException));

// FF36- DOMException is a function, but can't be constructed
var INCORRECT_CONSTRUCTOR = fails(function () {
  return !(new NativeDOMException() instanceof Error);
});

// Safari 10.1 / Chrome 32- / IE8- DOMException.prototype.toString bugs
var INCORRECT_TO_STRING = INCORRECT_CONSTRUCTOR || fails(function () {
  return ErrorPrototype.toString !== errorToString || String(new NativeDOMException(1, 2)) !== '2: 1';
});

// Deno 1.6.3- DOMException.prototype.code just missed
var INCORRECT_CODE = INCORRECT_CONSTRUCTOR || fails(function () {
  return new NativeDOMException(1, 'DataCloneError').code !== 25;
});

// Deno 1.6.3- DOMException constants just missed
var MISSED_CONSTANTS = INCORRECT_CONSTRUCTOR
  || NativeDOMException[DATA_CLONE_ERR] !== 25
  || NativeDOMExceptionPrototype[DATA_CLONE_ERR] !== 25;

var FORCED_CONSTRUCTOR = IS_PURE ? INCORRECT_TO_STRING || INCORRECT_CODE || MISSED_CONSTANTS : INCORRECT_CONSTRUCTOR;

// `DOMException` constructor
// https://webidl.spec.whatwg.org/#idl-DOMException
$({ global: true, forced: FORCED_CONSTRUCTOR }, {
  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException
});

var PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);
var PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;

if (INCORRECT_TO_STRING && (IS_PURE || NativeDOMException === PolyfilledDOMException)) {
  redefine(PolyfilledDOMExceptionPrototype, 'toString', errorToString);
}

if (INCORRECT_CODE && DESCRIPTORS && NativeDOMException === PolyfilledDOMException) {
  defineProperty(PolyfilledDOMExceptionPrototype, 'code', createGetterDescriptor(function () {
    return codeFor(anObject(this).name);
  }));
}

for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {
  var constant = DOMExceptionConstants[key];
  var constantName = constant.s;
  var descriptor = createPropertyDescriptor(6, constant.c);
  if (!hasOwn(PolyfilledDOMException, constantName)) {
    defineProperty(PolyfilledDOMException, constantName, descriptor);
  }
  if (!hasOwn(PolyfilledDOMExceptionPrototype, constantName)) {
    defineProperty(PolyfilledDOMExceptionPrototype, constantName, descriptor);
  }
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.stack.js":
/*!****************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.stack.js ***!
  \****************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var defineProperty = (__webpack_require__(/*! ../internals/object-define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-property.js").f);
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var inheritIfRequired = __webpack_require__(/*! ../internals/inherit-if-required */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/inherit-if-required.js");
var normalizeStringArgument = __webpack_require__(/*! ../internals/normalize-string-argument */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/normalize-string-argument.js");
var DOMExceptionConstants = __webpack_require__(/*! ../internals/dom-exception-constants */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/dom-exception-constants.js");
var clearErrorStack = __webpack_require__(/*! ../internals/clear-error-stack */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/clear-error-stack.js");
var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");

var DOM_EXCEPTION = 'DOMException';
var Error = getBuiltIn('Error');
var NativeDOMException = getBuiltIn(DOM_EXCEPTION);

var $DOMException = function DOMException() {
  anInstance(this, DOMExceptionPrototype);
  var argumentsLength = arguments.length;
  var message = normalizeStringArgument(argumentsLength < 1 ? undefined : arguments[0]);
  var name = normalizeStringArgument(argumentsLength < 2 ? undefined : arguments[1], 'Error');
  var that = new NativeDOMException(message, name);
  var error = Error(message);
  error.name = DOM_EXCEPTION;
  defineProperty(that, 'stack', createPropertyDescriptor(1, clearErrorStack(error.stack, 1)));
  inheritIfRequired(that, this, $DOMException);
  return that;
};

var DOMExceptionPrototype = $DOMException.prototype = NativeDOMException.prototype;

var ERROR_HAS_STACK = 'stack' in Error(DOM_EXCEPTION);
var DOM_EXCEPTION_HAS_STACK = 'stack' in new NativeDOMException(1, 2);
var FORCED_CONSTRUCTOR = ERROR_HAS_STACK && !DOM_EXCEPTION_HAS_STACK;

// `DOMException` constructor patch for `.stack` where it's required
// https://webidl.spec.whatwg.org/#es-DOMException-specialness
$({ global: true, forced: IS_PURE || FORCED_CONSTRUCTOR }, { // TODO: fix export logic
  DOMException: FORCED_CONSTRUCTOR ? $DOMException : NativeDOMException
});

var PolyfilledDOMException = getBuiltIn(DOM_EXCEPTION);
var PolyfilledDOMExceptionPrototype = PolyfilledDOMException.prototype;

if (PolyfilledDOMExceptionPrototype.constructor !== PolyfilledDOMException) {
  if (!IS_PURE) {
    defineProperty(PolyfilledDOMExceptionPrototype, 'constructor', createPropertyDescriptor(1, PolyfilledDOMException));
  }

  for (var key in DOMExceptionConstants) if (hasOwn(DOMExceptionConstants, key)) {
    var constant = DOMExceptionConstants[key];
    var constantName = constant.s;
    if (!hasOwn(PolyfilledDOMException, constantName)) {
      defineProperty(PolyfilledDOMException, constantName, createPropertyDescriptor(6, constant.c));
    }
  }
}


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.to-string-tag.js":
/*!************************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.to-string-tag.js ***!
  \************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");

var DOM_EXCEPTION = 'DOMException';

setToStringTag(getBuiltIn(DOM_EXCEPTION), DOM_EXCEPTION);


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.immediate.js":
/*!******************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.immediate.js ***!
  \******************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var task = __webpack_require__(/*! ../internals/task */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/task.js");

var FORCED = !global.setImmediate || !global.clearImmediate;

// http://w3c.github.io/setImmediate/
$({ global: true, bind: true, enumerable: true, forced: FORCED }, {
  // `setImmediate` method
  // http://w3c.github.io/setImmediate/#si-setImmediate
  setImmediate: task.set,
  // `clearImmediate` method
  // http://w3c.github.io/setImmediate/#si-clearImmediate
  clearImmediate: task.clear
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.queue-microtask.js":
/*!************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.queue-microtask.js ***!
  \************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var microtask = __webpack_require__(/*! ../internals/microtask */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/microtask.js");
var aCallable = __webpack_require__(/*! ../internals/a-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/a-callable.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var IS_NODE = __webpack_require__(/*! ../internals/engine-is-node */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-is-node.js");

var process = global.process;

// `queueMicrotask` method
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-queuemicrotask
$({ global: true, enumerable: true, noTargetGet: true }, {
  queueMicrotask: function queueMicrotask(fn) {
    validateArgumentsLength(arguments.length, 1);
    aCallable(fn);
    var domain = IS_NODE && process.domain;
    microtask(domain ? domain.bind(fn) : fn);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.structured-clone.js":
/*!*************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.structured-clone.js ***!
  \*************************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var IS_PURE = __webpack_require__(/*! ../internals/is-pure */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-pure.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltin = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var fails = __webpack_require__(/*! ../internals/fails */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/fails.js");
var uid = __webpack_require__(/*! ../internals/uid */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/uid.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var isConstructor = __webpack_require__(/*! ../internals/is-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-constructor.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var isSymbol = __webpack_require__(/*! ../internals/is-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-symbol.js");
var iterate = __webpack_require__(/*! ../internals/iterate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/iterate.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var createProperty = __webpack_require__(/*! ../internals/create-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property.js");
var createNonEnumerableProperty = __webpack_require__(/*! ../internals/create-non-enumerable-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-non-enumerable-property.js");
var lengthOfArrayLike = __webpack_require__(/*! ../internals/length-of-array-like */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/length-of-array-like.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var regExpFlags = __webpack_require__(/*! ../internals/regexp-flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/regexp-flags.js");
var ERROR_STACK_INSTALLABLE = __webpack_require__(/*! ../internals/error-stack-installable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/error-stack-installable.js");

var Object = global.Object;
var Date = global.Date;
var Error = global.Error;
var EvalError = global.EvalError;
var RangeError = global.RangeError;
var ReferenceError = global.ReferenceError;
var SyntaxError = global.SyntaxError;
var TypeError = global.TypeError;
var URIError = global.URIError;
var PerformanceMark = global.PerformanceMark;
var WebAssembly = global.WebAssembly;
var CompileError = WebAssembly && WebAssembly.CompileError || Error;
var LinkError = WebAssembly && WebAssembly.LinkError || Error;
var RuntimeError = WebAssembly && WebAssembly.RuntimeError || Error;
var DOMException = getBuiltin('DOMException');
var Set = getBuiltin('Set');
var Map = getBuiltin('Map');
var MapPrototype = Map.prototype;
var mapHas = uncurryThis(MapPrototype.has);
var mapGet = uncurryThis(MapPrototype.get);
var mapSet = uncurryThis(MapPrototype.set);
var setAdd = uncurryThis(Set.prototype.add);
var objectKeys = getBuiltin('Object', 'keys');
var push = uncurryThis([].push);
var booleanValueOf = uncurryThis(true.valueOf);
var numberValueOf = uncurryThis(1.0.valueOf);
var stringValueOf = uncurryThis(''.valueOf);
var getFlags = uncurryThis(regExpFlags);
var getTime = uncurryThis(Date.prototype.getTime);
var PERFORMANCE_MARK = uid('structuredClone');
var DATA_CLONE_ERROR = 'DataCloneError';
var TRANSFERRING = 'Transferring';

var checkBasicSemantic = function (structuredCloneImplementation) {
  return !fails(function () {
    var set1 = new global.Set([7]);
    var set2 = structuredCloneImplementation(set1);
    var number = structuredCloneImplementation(Object(7));
    return set2 == set1 || !set2.has(7) || typeof number != 'object' || number != 7;
  }) && structuredCloneImplementation;
};

// https://github.com/whatwg/html/pull/5749
var checkNewErrorsSemantic = function (structuredCloneImplementation) {
  return !fails(function () {
    var test = structuredCloneImplementation(new global.AggregateError([1], PERFORMANCE_MARK, { cause: 3 }));
    return test.name != 'AggregateError' || test.errors[0] != 1 || test.message != PERFORMANCE_MARK || test.cause != 3;
  }) && structuredCloneImplementation;
};

// FF94+, Safari TP134+, Chrome Canary 98+, NodeJS 17.0+, Deno 1.13+
// current FF and Safari implementations can't clone errors
// https://bugzilla.mozilla.org/show_bug.cgi?id=1556604
// no one of current implementations supports new (html/5749) error cloning semantic
var nativeStructuredClone = global.structuredClone;

var FORCED_REPLACEMENT = IS_PURE || !checkNewErrorsSemantic(nativeStructuredClone);

// Chrome 82+, Safari 14.1+, Deno 1.11+
// Chrome 78-81 implementation swaps `.name` and `.message` of cloned `DOMException`
// Safari 14.1 implementation doesn't clone some `RegExp` flags, so requires a workaround
// current Safari implementation can't clone errors
// Deno 1.2-1.10 implementations too naive
// NodeJS 16.0+ does not have `PerformanceMark` constructor, structured cloning implementation
//   from `performance.mark` is too naive and can't clone, for example, `RegExp` or some boxed primitives
//   https://github.com/nodejs/node/issues/40840
// no one of current implementations supports new (html/5749) error cloning semantic
var structuredCloneFromMark = !nativeStructuredClone && checkBasicSemantic(function (value) {
  return new PerformanceMark(PERFORMANCE_MARK, { detail: value }).detail;
});

var nativeRestrictedStructuredClone = checkBasicSemantic(nativeStructuredClone) || structuredCloneFromMark;

var throwUncloneable = function (type) {
  throw new DOMException('Uncloneable type: ' + type, DATA_CLONE_ERROR);
};

var throwUnpolyfillable = function (type, kind) {
  throw new DOMException((kind || 'Cloning') + ' of ' + type + ' cannot be properly polyfilled in this engine', DATA_CLONE_ERROR);
};

var structuredCloneInternal = function (value, map) {
  if (isSymbol(value)) throwUncloneable('Symbol');
  if (!isObject(value)) return value;
  // effectively preserves circular references
  if (map) {
    if (mapHas(map, value)) return mapGet(map, value);
  } else map = new Map();

  var type = classof(value);
  var deep = false;
  var C, name, cloned, dataTransfer, i, length, keys, key, source, target;

  switch (type) {
    case 'Array':
      cloned = [];
      deep = true;
      break;
    case 'Object':
      cloned = {};
      deep = true;
      break;
    case 'Map':
      cloned = new Map();
      deep = true;
      break;
    case 'Set':
      cloned = new Set();
      deep = true;
      break;
    case 'RegExp':
      // in this block because of a Safari 14.1 bug
      // old FF does not clone regexes passed to the constructor, so get the source and flags directly
      cloned = new RegExp(value.source, 'flags' in value ? value.flags : getFlags(value));
      break;
    case 'Error':
      name = value.name;
      switch (name) {
        case 'AggregateError':
          cloned = getBuiltin('AggregateError')([]);
          break;
        case 'EvalError':
          cloned = EvalError();
          break;
        case 'RangeError':
          cloned = RangeError();
          break;
        case 'ReferenceError':
          cloned = ReferenceError();
          break;
        case 'SyntaxError':
          cloned = SyntaxError();
          break;
        case 'TypeError':
          cloned = TypeError();
          break;
        case 'URIError':
          cloned = URIError();
          break;
        case 'CompileError':
          cloned = CompileError();
          break;
        case 'LinkError':
          cloned = LinkError();
          break;
        case 'RuntimeError':
          cloned = RuntimeError();
          break;
        default:
          cloned = Error();
      }
      deep = true;
      break;
    case 'DOMException':
      cloned = new DOMException(value.message, value.name);
      deep = true;
      break;
    case 'DataView':
    case 'Int8Array':
    case 'Uint8Array':
    case 'Uint8ClampedArray':
    case 'Int16Array':
    case 'Uint16Array':
    case 'Int32Array':
    case 'Uint32Array':
    case 'Float32Array':
    case 'Float64Array':
    case 'BigInt64Array':
    case 'BigUint64Array':
      C = global[type];
      // in some old engines like Safari 9, typeof C is 'object'
      // on Uint8ClampedArray or some other constructors
      if (!isObject(C)) throwUnpolyfillable(type);
      cloned = new C(
        // this is safe, since arraybuffer cannot have circular references
        structuredCloneInternal(value.buffer, map),
        value.byteOffset,
        type === 'DataView' ? value.byteLength : value.length
      );
      break;
    case 'DOMQuad':
      try {
        cloned = new DOMQuad(
          structuredCloneInternal(value.p1, map),
          structuredCloneInternal(value.p2, map),
          structuredCloneInternal(value.p3, map),
          structuredCloneInternal(value.p4, map)
        );
      } catch (error) {
        if (nativeRestrictedStructuredClone) {
          cloned = nativeRestrictedStructuredClone(value);
        } else throwUnpolyfillable(type);
      }
      break;
    case 'FileList':
      C = global.DataTransfer;
      if (isConstructor(C)) {
        dataTransfer = new C();
        for (i = 0, length = lengthOfArrayLike(value); i < length; i++) {
          dataTransfer.items.add(structuredCloneInternal(value[i], map));
        }
        cloned = dataTransfer.files;
      } else if (nativeRestrictedStructuredClone) {
        cloned = nativeRestrictedStructuredClone(value);
      } else throwUnpolyfillable(type);
      break;
    case 'ImageData':
      // Safari 9 ImageData is a constructor, but typeof ImageData is 'object'
      try {
        cloned = new ImageData(
          structuredCloneInternal(value.data, map),
          value.width,
          value.height,
          { colorSpace: value.colorSpace }
        );
      } catch (error) {
        if (nativeRestrictedStructuredClone) {
          cloned = nativeRestrictedStructuredClone(value);
        } else throwUnpolyfillable(type);
      } break;
    default:
      if (nativeRestrictedStructuredClone) {
        cloned = nativeRestrictedStructuredClone(value);
      } else switch (type) {
        case 'BigInt':
          // can be a 3rd party polyfill
          cloned = Object(value.valueOf());
          break;
        case 'Boolean':
          cloned = Object(booleanValueOf(value));
          break;
        case 'Number':
          cloned = Object(numberValueOf(value));
          break;
        case 'String':
          cloned = Object(stringValueOf(value));
          break;
        case 'Date':
          cloned = new Date(getTime(value));
          break;
        case 'ArrayBuffer':
          C = global.DataView;
          // `ArrayBuffer#slice` is not available in IE10
          // `ArrayBuffer#slice` and `DataView` are not available in old FF
          if (!C && typeof value.slice != 'function') throwUnpolyfillable(type);
          // detached buffers throws in `DataView` and `.slice`
          try {
            if (typeof value.slice == 'function') {
              cloned = value.slice(0);
            } else {
              length = value.byteLength;
              cloned = new ArrayBuffer(length);
              source = new C(value);
              target = new C(cloned);
              for (i = 0; i < length; i++) {
                target.setUint8(i, source.getUint8(i));
              }
            }
          } catch (error) {
            throw new DOMException('ArrayBuffer is detached', DATA_CLONE_ERROR);
          } break;
        case 'SharedArrayBuffer':
          // SharedArrayBuffer should use shared memory, we can't polyfill it, so return the original
          cloned = value;
          break;
        case 'Blob':
          try {
            cloned = value.slice(0, value.size, value.type);
          } catch (error) {
            throwUnpolyfillable(type);
          } break;
        case 'DOMPoint':
        case 'DOMPointReadOnly':
          C = global[type];
          try {
            cloned = C.fromPoint
              ? C.fromPoint(value)
              : new C(value.x, value.y, value.z, value.w);
          } catch (error) {
            throwUnpolyfillable(type);
          } break;
        case 'DOMRect':
        case 'DOMRectReadOnly':
          C = global[type];
          try {
            cloned = C.fromRect
              ? C.fromRect(value)
              : new C(value.x, value.y, value.width, value.height);
          } catch (error) {
            throwUnpolyfillable(type);
          } break;
        case 'DOMMatrix':
        case 'DOMMatrixReadOnly':
          C = global[type];
          try {
            cloned = C.fromMatrix
              ? C.fromMatrix(value)
              : new C(value);
          } catch (error) {
            throwUnpolyfillable(type);
          } break;
        case 'AudioData':
        case 'VideoFrame':
          if (!isCallable(value.clone)) throwUnpolyfillable(type);
          try {
            cloned = value.clone();
          } catch (error) {
            throwUncloneable(type);
          } break;
        case 'File':
          try {
            cloned = new File([value], value.name, value);
          } catch (error) {
            throwUnpolyfillable(type);
          } break;
        case 'CryptoKey':
        case 'GPUCompilationMessage':
        case 'GPUCompilationInfo':
        case 'ImageBitmap':
        case 'RTCCertificate':
        case 'WebAssembly.Module':
          throwUnpolyfillable(type);
          // break omitted
        default:
          throwUncloneable(type);
      }
  }

  mapSet(map, value, cloned);

  if (deep) switch (type) {
    case 'Array':
    case 'Object':
      keys = objectKeys(value);
      for (i = 0, length = lengthOfArrayLike(keys); i < length; i++) {
        key = keys[i];
        createProperty(cloned, key, structuredCloneInternal(value[key], map));
      } break;
    case 'Map':
      value.forEach(function (v, k) {
        mapSet(cloned, structuredCloneInternal(k, map), structuredCloneInternal(v, map));
      });
      break;
    case 'Set':
      value.forEach(function (v) {
        setAdd(cloned, structuredCloneInternal(v, map));
      });
      break;
    case 'Error':
      createNonEnumerableProperty(cloned, 'message', structuredCloneInternal(value.message, map));
      if (hasOwn(value, 'cause')) {
        createNonEnumerableProperty(cloned, 'cause', structuredCloneInternal(value.cause, map));
      }
      if (name == 'AggregateError') {
        cloned.errors = structuredCloneInternal(value.errors, map);
      } // break omitted
    case 'DOMException':
      if (ERROR_STACK_INSTALLABLE) {
        createNonEnumerableProperty(cloned, 'stack', structuredCloneInternal(value.stack, map));
      }
  }

  return cloned;
};

var PROPER_TRANSFER = nativeStructuredClone && !fails(function () {
  var buffer = new ArrayBuffer(8);
  var clone = nativeStructuredClone(buffer, { transfer: [buffer] });
  return buffer.byteLength != 0 || clone.byteLength != 8;
});

var tryToTransfer = function (rawTransfer, map) {
  if (!isObject(rawTransfer)) throw TypeError('Transfer option cannot be converted to a sequence');

  var transfer = [];

  iterate(rawTransfer, function (value) {
    push(transfer, anObject(value));
  });

  var i = 0;
  var length = lengthOfArrayLike(transfer);
  var value, type, C, transferredArray, transferred, canvas, context;

  if (PROPER_TRANSFER) {
    transferredArray = nativeStructuredClone(transfer, { transfer: transfer });
    while (i < length) mapSet(map, transfer[i], transferredArray[i++]);
  } else while (i < length) {
    value = transfer[i++];
    if (mapHas(map, value)) throw new DOMException('Duplicate transferable', DATA_CLONE_ERROR);

    type = classof(value);

    switch (type) {
      case 'ImageBitmap':
        C = global.OffscreenCanvas;
        if (!isConstructor(C)) throwUnpolyfillable(type, TRANSFERRING);
        try {
          canvas = new C(value.width, value.height);
          context = canvas.getContext('bitmaprenderer');
          context.transferFromImageBitmap(value);
          transferred = canvas.transferToImageBitmap();
        } catch (error) { /* empty */ }
        break;
      case 'AudioData':
      case 'VideoFrame':
        if (!isCallable(value.clone) || !isCallable(value.close)) throwUnpolyfillable(type, TRANSFERRING);
        try {
          transferred = value.clone();
          value.close();
        } catch (error) { /* empty */ }
        break;
      case 'ArrayBuffer':
      case 'MessagePort':
      case 'OffscreenCanvas':
      case 'ReadableStream':
      case 'TransformStream':
      case 'WritableStream':
        throwUnpolyfillable(type, TRANSFERRING);
    }

    if (transferred === undefined) throw new DOMException('This object cannot be transferred: ' + type, DATA_CLONE_ERROR);
    mapSet(map, value, transferred);
  }
};

$({ global: true, enumerable: true, sham: !PROPER_TRANSFER, forced: FORCED_REPLACEMENT }, {
  structuredClone: function structuredClone(value /* , { transfer } */) {
    var options = validateArgumentsLength(arguments.length, 1) > 1 ? anObject(arguments[1]) : undefined;
    var transfer = options ? options.transfer : undefined;
    var map;

    if (transfer !== undefined) {
      map = new Map();
      tryToTransfer(transfer, map);
    }

    return structuredCloneInternal(value, map);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.timers.js":
/*!***************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.timers.js ***!
  \***************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var apply = __webpack_require__(/*! ../internals/function-apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-apply.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var userAgent = __webpack_require__(/*! ../internals/engine-user-agent */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/engine-user-agent.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");

var MSIE = /MSIE .\./.test(userAgent); // <- dirty ie9- check
var Function = global.Function;

var wrap = function (scheduler) {
  return function (handler, timeout /* , ...arguments */) {
    var boundArgs = validateArgumentsLength(arguments.length, 1) > 2;
    var fn = isCallable(handler) ? handler : Function(handler);
    var args = boundArgs ? arraySlice(arguments, 2) : undefined;
    return scheduler(boundArgs ? function () {
      apply(fn, this, args);
    } : fn, timeout);
  };
};

// ie9- setTimeout & setInterval additional parameters fix
// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers
$({ global: true, bind: true, forced: MSIE }, {
  // `setTimeout` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout
  setTimeout: wrap(global.setTimeout),
  // `setInterval` method
  // https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval
  setInterval: wrap(global.setInterval)
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js":
/*!**************************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js ***!
  \**************************************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var getBuiltIn = __webpack_require__(/*! ../internals/get-built-in */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-built-in.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/native-url */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js");
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var redefineAll = __webpack_require__(/*! ../internals/redefine-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine-all.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var createIteratorConstructor = __webpack_require__(/*! ../internals/create-iterator-constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-iterator-constructor.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var isCallable = __webpack_require__(/*! ../internals/is-callable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-callable.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var classof = __webpack_require__(/*! ../internals/classof */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/classof.js");
var anObject = __webpack_require__(/*! ../internals/an-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-object.js");
var isObject = __webpack_require__(/*! ../internals/is-object */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/is-object.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var create = __webpack_require__(/*! ../internals/object-create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-create.js");
var createPropertyDescriptor = __webpack_require__(/*! ../internals/create-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/create-property-descriptor.js");
var getIterator = __webpack_require__(/*! ../internals/get-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator.js");
var getIteratorMethod = __webpack_require__(/*! ../internals/get-iterator-method */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/get-iterator-method.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var wellKnownSymbol = __webpack_require__(/*! ../internals/well-known-symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/well-known-symbol.js");
var arraySort = __webpack_require__(/*! ../internals/array-sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-sort.js");

var ITERATOR = wellKnownSymbol('iterator');
var URL_SEARCH_PARAMS = 'URLSearchParams';
var URL_SEARCH_PARAMS_ITERATOR = URL_SEARCH_PARAMS + 'Iterator';
var setInternalState = InternalStateModule.set;
var getInternalParamsState = InternalStateModule.getterFor(URL_SEARCH_PARAMS);
var getInternalIteratorState = InternalStateModule.getterFor(URL_SEARCH_PARAMS_ITERATOR);

var n$Fetch = getBuiltIn('fetch');
var N$Request = getBuiltIn('Request');
var Headers = getBuiltIn('Headers');
var RequestPrototype = N$Request && N$Request.prototype;
var HeadersPrototype = Headers && Headers.prototype;
var RegExp = global.RegExp;
var TypeError = global.TypeError;
var decodeURIComponent = global.decodeURIComponent;
var encodeURIComponent = global.encodeURIComponent;
var charAt = uncurryThis(''.charAt);
var join = uncurryThis([].join);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var shift = uncurryThis([].shift);
var splice = uncurryThis([].splice);
var split = uncurryThis(''.split);
var stringSlice = uncurryThis(''.slice);

var plus = /\+/g;
var sequences = Array(4);

var percentSequence = function (bytes) {
  return sequences[bytes - 1] || (sequences[bytes - 1] = RegExp('((?:%[\\da-f]{2}){' + bytes + '})', 'gi'));
};

var percentDecode = function (sequence) {
  try {
    return decodeURIComponent(sequence);
  } catch (error) {
    return sequence;
  }
};

var deserialize = function (it) {
  var result = replace(it, plus, ' ');
  var bytes = 4;
  try {
    return decodeURIComponent(result);
  } catch (error) {
    while (bytes) {
      result = replace(result, percentSequence(bytes--), percentDecode);
    }
    return result;
  }
};

var find = /[!'()~]|%20/g;

var replacements = {
  '!': '%21',
  "'": '%27',
  '(': '%28',
  ')': '%29',
  '~': '%7E',
  '%20': '+'
};

var replacer = function (match) {
  return replacements[match];
};

var serialize = function (it) {
  return replace(encodeURIComponent(it), find, replacer);
};

var URLSearchParamsIterator = createIteratorConstructor(function Iterator(params, kind) {
  setInternalState(this, {
    type: URL_SEARCH_PARAMS_ITERATOR,
    iterator: getIterator(getInternalParamsState(params).entries),
    kind: kind
  });
}, 'Iterator', function next() {
  var state = getInternalIteratorState(this);
  var kind = state.kind;
  var step = state.iterator.next();
  var entry = step.value;
  if (!step.done) {
    step.value = kind === 'keys' ? entry.key : kind === 'values' ? entry.value : [entry.key, entry.value];
  } return step;
}, true);

var URLSearchParamsState = function (init) {
  this.entries = [];
  this.url = null;

  if (init !== undefined) {
    if (isObject(init)) this.parseObject(init);
    else this.parseQuery(typeof init == 'string' ? charAt(init, 0) === '?' ? stringSlice(init, 1) : init : $toString(init));
  }
};

URLSearchParamsState.prototype = {
  type: URL_SEARCH_PARAMS,
  bindURL: function (url) {
    this.url = url;
    this.update();
  },
  parseObject: function (object) {
    var iteratorMethod = getIteratorMethod(object);
    var iterator, next, step, entryIterator, entryNext, first, second;

    if (iteratorMethod) {
      iterator = getIterator(object, iteratorMethod);
      next = iterator.next;
      while (!(step = call(next, iterator)).done) {
        entryIterator = getIterator(anObject(step.value));
        entryNext = entryIterator.next;
        if (
          (first = call(entryNext, entryIterator)).done ||
          (second = call(entryNext, entryIterator)).done ||
          !call(entryNext, entryIterator).done
        ) throw TypeError('Expected sequence with length 2');
        push(this.entries, { key: $toString(first.value), value: $toString(second.value) });
      }
    } else for (var key in object) if (hasOwn(object, key)) {
      push(this.entries, { key: key, value: $toString(object[key]) });
    }
  },
  parseQuery: function (query) {
    if (query) {
      var attributes = split(query, '&');
      var index = 0;
      var attribute, entry;
      while (index < attributes.length) {
        attribute = attributes[index++];
        if (attribute.length) {
          entry = split(attribute, '=');
          push(this.entries, {
            key: deserialize(shift(entry)),
            value: deserialize(join(entry, '='))
          });
        }
      }
    }
  },
  serialize: function () {
    var entries = this.entries;
    var result = [];
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      push(result, serialize(entry.key) + '=' + serialize(entry.value));
    } return join(result, '&');
  },
  update: function () {
    this.entries.length = 0;
    this.parseQuery(this.url.query);
  },
  updateURL: function () {
    if (this.url) this.url.update();
  }
};

// `URLSearchParams` constructor
// https://url.spec.whatwg.org/#interface-urlsearchparams
var URLSearchParamsConstructor = function URLSearchParams(/* init */) {
  anInstance(this, URLSearchParamsPrototype);
  var init = arguments.length > 0 ? arguments[0] : undefined;
  setInternalState(this, new URLSearchParamsState(init));
};

var URLSearchParamsPrototype = URLSearchParamsConstructor.prototype;

redefineAll(URLSearchParamsPrototype, {
  // `URLSearchParams.prototype.append` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-append
  append: function append(name, value) {
    validateArgumentsLength(arguments.length, 2);
    var state = getInternalParamsState(this);
    push(state.entries, { key: $toString(name), value: $toString(value) });
    state.updateURL();
  },
  // `URLSearchParams.prototype.delete` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-delete
  'delete': function (name) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var key = $toString(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index].key === key) splice(entries, index, 1);
      else index++;
    }
    state.updateURL();
  },
  // `URLSearchParams.prototype.get` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-get
  get: function get(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) return entries[index].value;
    }
    return null;
  },
  // `URLSearchParams.prototype.getAll` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-getall
  getAll: function getAll(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var result = [];
    var index = 0;
    for (; index < entries.length; index++) {
      if (entries[index].key === key) push(result, entries[index].value);
    }
    return result;
  },
  // `URLSearchParams.prototype.has` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-has
  has: function has(name) {
    validateArgumentsLength(arguments.length, 1);
    var entries = getInternalParamsState(this).entries;
    var key = $toString(name);
    var index = 0;
    while (index < entries.length) {
      if (entries[index++].key === key) return true;
    }
    return false;
  },
  // `URLSearchParams.prototype.set` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-set
  set: function set(name, value) {
    validateArgumentsLength(arguments.length, 1);
    var state = getInternalParamsState(this);
    var entries = state.entries;
    var found = false;
    var key = $toString(name);
    var val = $toString(value);
    var index = 0;
    var entry;
    for (; index < entries.length; index++) {
      entry = entries[index];
      if (entry.key === key) {
        if (found) splice(entries, index--, 1);
        else {
          found = true;
          entry.value = val;
        }
      }
    }
    if (!found) push(entries, { key: key, value: val });
    state.updateURL();
  },
  // `URLSearchParams.prototype.sort` method
  // https://url.spec.whatwg.org/#dom-urlsearchparams-sort
  sort: function sort() {
    var state = getInternalParamsState(this);
    arraySort(state.entries, function (a, b) {
      return a.key > b.key ? 1 : -1;
    });
    state.updateURL();
  },
  // `URLSearchParams.prototype.forEach` method
  forEach: function forEach(callback /* , thisArg */) {
    var entries = getInternalParamsState(this).entries;
    var boundFunction = bind(callback, arguments.length > 1 ? arguments[1] : undefined);
    var index = 0;
    var entry;
    while (index < entries.length) {
      entry = entries[index++];
      boundFunction(entry.value, entry.key, this);
    }
  },
  // `URLSearchParams.prototype.keys` method
  keys: function keys() {
    return new URLSearchParamsIterator(this, 'keys');
  },
  // `URLSearchParams.prototype.values` method
  values: function values() {
    return new URLSearchParamsIterator(this, 'values');
  },
  // `URLSearchParams.prototype.entries` method
  entries: function entries() {
    return new URLSearchParamsIterator(this, 'entries');
  }
}, { enumerable: true });

// `URLSearchParams.prototype[@@iterator]` method
redefine(URLSearchParamsPrototype, ITERATOR, URLSearchParamsPrototype.entries, { name: 'entries' });

// `URLSearchParams.prototype.toString` method
// https://url.spec.whatwg.org/#urlsearchparams-stringification-behavior
redefine(URLSearchParamsPrototype, 'toString', function toString() {
  return getInternalParamsState(this).serialize();
}, { enumerable: true });

setToStringTag(URLSearchParamsConstructor, URL_SEARCH_PARAMS);

$({ global: true, forced: !USE_NATIVE_URL }, {
  URLSearchParams: URLSearchParamsConstructor
});

// Wrap `fetch` and `Request` for correct work with polyfilled `URLSearchParams`
if (!USE_NATIVE_URL && isCallable(Headers)) {
  var headersHas = uncurryThis(HeadersPrototype.has);
  var headersSet = uncurryThis(HeadersPrototype.set);

  var wrapRequestOptions = function (init) {
    if (isObject(init)) {
      var body = init.body;
      var headers;
      if (classof(body) === URL_SEARCH_PARAMS) {
        headers = init.headers ? new Headers(init.headers) : new Headers();
        if (!headersHas(headers, 'content-type')) {
          headersSet(headers, 'content-type', 'application/x-www-form-urlencoded;charset=UTF-8');
        }
        return create(init, {
          body: createPropertyDescriptor(0, $toString(body)),
          headers: createPropertyDescriptor(0, headers)
        });
      }
    } return init;
  };

  if (isCallable(n$Fetch)) {
    $({ global: true, enumerable: true, forced: true }, {
      fetch: function fetch(input /* , init */) {
        return n$Fetch(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
      }
    });
  }

  if (isCallable(N$Request)) {
    var RequestConstructor = function Request(input /* , init */) {
      anInstance(this, RequestPrototype);
      return new N$Request(input, arguments.length > 1 ? wrapRequestOptions(arguments[1]) : {});
    };

    RequestPrototype.constructor = RequestConstructor;
    RequestConstructor.prototype = RequestPrototype;

    $({ global: true, forced: true }, {
      Request: RequestConstructor
    });
  }
}

module.exports = {
  URLSearchParams: URLSearchParamsConstructor,
  getState: getInternalParamsState
};


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.js":
/*!************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.js ***!
  \************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

// TODO: in core-js@4, move /modules/ dependencies to public entries for better optimization by tools like `preset-env`
__webpack_require__(/*! ../modules/es.string.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js");
var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var DESCRIPTORS = __webpack_require__(/*! ../internals/descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/descriptors.js");
var USE_NATIVE_URL = __webpack_require__(/*! ../internals/native-url */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/native-url.js");
var global = __webpack_require__(/*! ../internals/global */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/global.js");
var bind = __webpack_require__(/*! ../internals/function-bind-context */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-bind-context.js");
var uncurryThis = __webpack_require__(/*! ../internals/function-uncurry-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-uncurry-this.js");
var defineProperties = (__webpack_require__(/*! ../internals/object-define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-define-properties.js").f);
var redefine = __webpack_require__(/*! ../internals/redefine */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/redefine.js");
var anInstance = __webpack_require__(/*! ../internals/an-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/an-instance.js");
var hasOwn = __webpack_require__(/*! ../internals/has-own-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/has-own-property.js");
var assign = __webpack_require__(/*! ../internals/object-assign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/object-assign.js");
var arrayFrom = __webpack_require__(/*! ../internals/array-from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-from.js");
var arraySlice = __webpack_require__(/*! ../internals/array-slice-simple */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/array-slice-simple.js");
var codeAt = (__webpack_require__(/*! ../internals/string-multibyte */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-multibyte.js").codeAt);
var toASCII = __webpack_require__(/*! ../internals/string-punycode-to-ascii */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/string-punycode-to-ascii.js");
var $toString = __webpack_require__(/*! ../internals/to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/to-string.js");
var setToStringTag = __webpack_require__(/*! ../internals/set-to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/set-to-string-tag.js");
var validateArgumentsLength = __webpack_require__(/*! ../internals/validate-arguments-length */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/validate-arguments-length.js");
var URLSearchParamsModule = __webpack_require__(/*! ../modules/web.url-search-params */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js");
var InternalStateModule = __webpack_require__(/*! ../internals/internal-state */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/internal-state.js");

var setInternalState = InternalStateModule.set;
var getInternalURLState = InternalStateModule.getterFor('URL');
var URLSearchParams = URLSearchParamsModule.URLSearchParams;
var getInternalSearchParamsState = URLSearchParamsModule.getState;

var NativeURL = global.URL;
var TypeError = global.TypeError;
var parseInt = global.parseInt;
var floor = Math.floor;
var pow = Math.pow;
var charAt = uncurryThis(''.charAt);
var exec = uncurryThis(/./.exec);
var join = uncurryThis([].join);
var numberToString = uncurryThis(1.0.toString);
var pop = uncurryThis([].pop);
var push = uncurryThis([].push);
var replace = uncurryThis(''.replace);
var shift = uncurryThis([].shift);
var split = uncurryThis(''.split);
var stringSlice = uncurryThis(''.slice);
var toLowerCase = uncurryThis(''.toLowerCase);
var unshift = uncurryThis([].unshift);

var INVALID_AUTHORITY = 'Invalid authority';
var INVALID_SCHEME = 'Invalid scheme';
var INVALID_HOST = 'Invalid host';
var INVALID_PORT = 'Invalid port';

var ALPHA = /[a-z]/i;
// eslint-disable-next-line regexp/no-obscure-range -- safe
var ALPHANUMERIC = /[\d+-.a-z]/i;
var DIGIT = /\d/;
var HEX_START = /^0x/i;
var OCT = /^[0-7]+$/;
var DEC = /^\d+$/;
var HEX = /^[\da-f]+$/i;
/* eslint-disable regexp/no-control-character -- safe */
var FORBIDDEN_HOST_CODE_POINT = /[\0\t\n\r #%/:<>?@[\\\]^|]/;
var FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT = /[\0\t\n\r #/:<>?@[\\\]^|]/;
var LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE = /^[\u0000-\u0020]+|[\u0000-\u0020]+$/g;
var TAB_AND_NEW_LINE = /[\t\n\r]/g;
/* eslint-enable regexp/no-control-character -- safe */
var EOF;

// https://url.spec.whatwg.org/#ipv4-number-parser
var parseIPv4 = function (input) {
  var parts = split(input, '.');
  var partsLength, numbers, index, part, radix, number, ipv4;
  if (parts.length && parts[parts.length - 1] == '') {
    parts.length--;
  }
  partsLength = parts.length;
  if (partsLength > 4) return input;
  numbers = [];
  for (index = 0; index < partsLength; index++) {
    part = parts[index];
    if (part == '') return input;
    radix = 10;
    if (part.length > 1 && charAt(part, 0) == '0') {
      radix = exec(HEX_START, part) ? 16 : 8;
      part = stringSlice(part, radix == 8 ? 1 : 2);
    }
    if (part === '') {
      number = 0;
    } else {
      if (!exec(radix == 10 ? DEC : radix == 8 ? OCT : HEX, part)) return input;
      number = parseInt(part, radix);
    }
    push(numbers, number);
  }
  for (index = 0; index < partsLength; index++) {
    number = numbers[index];
    if (index == partsLength - 1) {
      if (number >= pow(256, 5 - partsLength)) return null;
    } else if (number > 255) return null;
  }
  ipv4 = pop(numbers);
  for (index = 0; index < numbers.length; index++) {
    ipv4 += numbers[index] * pow(256, 3 - index);
  }
  return ipv4;
};

// https://url.spec.whatwg.org/#concept-ipv6-parser
// eslint-disable-next-line max-statements -- TODO
var parseIPv6 = function (input) {
  var address = [0, 0, 0, 0, 0, 0, 0, 0];
  var pieceIndex = 0;
  var compress = null;
  var pointer = 0;
  var value, length, numbersSeen, ipv4Piece, number, swaps, swap;

  var chr = function () {
    return charAt(input, pointer);
  };

  if (chr() == ':') {
    if (charAt(input, 1) != ':') return;
    pointer += 2;
    pieceIndex++;
    compress = pieceIndex;
  }
  while (chr()) {
    if (pieceIndex == 8) return;
    if (chr() == ':') {
      if (compress !== null) return;
      pointer++;
      pieceIndex++;
      compress = pieceIndex;
      continue;
    }
    value = length = 0;
    while (length < 4 && exec(HEX, chr())) {
      value = value * 16 + parseInt(chr(), 16);
      pointer++;
      length++;
    }
    if (chr() == '.') {
      if (length == 0) return;
      pointer -= length;
      if (pieceIndex > 6) return;
      numbersSeen = 0;
      while (chr()) {
        ipv4Piece = null;
        if (numbersSeen > 0) {
          if (chr() == '.' && numbersSeen < 4) pointer++;
          else return;
        }
        if (!exec(DIGIT, chr())) return;
        while (exec(DIGIT, chr())) {
          number = parseInt(chr(), 10);
          if (ipv4Piece === null) ipv4Piece = number;
          else if (ipv4Piece == 0) return;
          else ipv4Piece = ipv4Piece * 10 + number;
          if (ipv4Piece > 255) return;
          pointer++;
        }
        address[pieceIndex] = address[pieceIndex] * 256 + ipv4Piece;
        numbersSeen++;
        if (numbersSeen == 2 || numbersSeen == 4) pieceIndex++;
      }
      if (numbersSeen != 4) return;
      break;
    } else if (chr() == ':') {
      pointer++;
      if (!chr()) return;
    } else if (chr()) return;
    address[pieceIndex++] = value;
  }
  if (compress !== null) {
    swaps = pieceIndex - compress;
    pieceIndex = 7;
    while (pieceIndex != 0 && swaps > 0) {
      swap = address[pieceIndex];
      address[pieceIndex--] = address[compress + swaps - 1];
      address[compress + --swaps] = swap;
    }
  } else if (pieceIndex != 8) return;
  return address;
};

var findLongestZeroSequence = function (ipv6) {
  var maxIndex = null;
  var maxLength = 1;
  var currStart = null;
  var currLength = 0;
  var index = 0;
  for (; index < 8; index++) {
    if (ipv6[index] !== 0) {
      if (currLength > maxLength) {
        maxIndex = currStart;
        maxLength = currLength;
      }
      currStart = null;
      currLength = 0;
    } else {
      if (currStart === null) currStart = index;
      ++currLength;
    }
  }
  if (currLength > maxLength) {
    maxIndex = currStart;
    maxLength = currLength;
  }
  return maxIndex;
};

// https://url.spec.whatwg.org/#host-serializing
var serializeHost = function (host) {
  var result, index, compress, ignore0;
  // ipv4
  if (typeof host == 'number') {
    result = [];
    for (index = 0; index < 4; index++) {
      unshift(result, host % 256);
      host = floor(host / 256);
    } return join(result, '.');
  // ipv6
  } else if (typeof host == 'object') {
    result = '';
    compress = findLongestZeroSequence(host);
    for (index = 0; index < 8; index++) {
      if (ignore0 && host[index] === 0) continue;
      if (ignore0) ignore0 = false;
      if (compress === index) {
        result += index ? ':' : '::';
        ignore0 = true;
      } else {
        result += numberToString(host[index], 16);
        if (index < 7) result += ':';
      }
    }
    return '[' + result + ']';
  } return host;
};

var C0ControlPercentEncodeSet = {};
var fragmentPercentEncodeSet = assign({}, C0ControlPercentEncodeSet, {
  ' ': 1, '"': 1, '<': 1, '>': 1, '`': 1
});
var pathPercentEncodeSet = assign({}, fragmentPercentEncodeSet, {
  '#': 1, '?': 1, '{': 1, '}': 1
});
var userinfoPercentEncodeSet = assign({}, pathPercentEncodeSet, {
  '/': 1, ':': 1, ';': 1, '=': 1, '@': 1, '[': 1, '\\': 1, ']': 1, '^': 1, '|': 1
});

var percentEncode = function (chr, set) {
  var code = codeAt(chr, 0);
  return code > 0x20 && code < 0x7F && !hasOwn(set, chr) ? chr : encodeURIComponent(chr);
};

// https://url.spec.whatwg.org/#special-scheme
var specialSchemes = {
  ftp: 21,
  file: null,
  http: 80,
  https: 443,
  ws: 80,
  wss: 443
};

// https://url.spec.whatwg.org/#windows-drive-letter
var isWindowsDriveLetter = function (string, normalized) {
  var second;
  return string.length == 2 && exec(ALPHA, charAt(string, 0))
    && ((second = charAt(string, 1)) == ':' || (!normalized && second == '|'));
};

// https://url.spec.whatwg.org/#start-with-a-windows-drive-letter
var startsWithWindowsDriveLetter = function (string) {
  var third;
  return string.length > 1 && isWindowsDriveLetter(stringSlice(string, 0, 2)) && (
    string.length == 2 ||
    ((third = charAt(string, 2)) === '/' || third === '\\' || third === '?' || third === '#')
  );
};

// https://url.spec.whatwg.org/#single-dot-path-segment
var isSingleDot = function (segment) {
  return segment === '.' || toLowerCase(segment) === '%2e';
};

// https://url.spec.whatwg.org/#double-dot-path-segment
var isDoubleDot = function (segment) {
  segment = toLowerCase(segment);
  return segment === '..' || segment === '%2e.' || segment === '.%2e' || segment === '%2e%2e';
};

// States:
var SCHEME_START = {};
var SCHEME = {};
var NO_SCHEME = {};
var SPECIAL_RELATIVE_OR_AUTHORITY = {};
var PATH_OR_AUTHORITY = {};
var RELATIVE = {};
var RELATIVE_SLASH = {};
var SPECIAL_AUTHORITY_SLASHES = {};
var SPECIAL_AUTHORITY_IGNORE_SLASHES = {};
var AUTHORITY = {};
var HOST = {};
var HOSTNAME = {};
var PORT = {};
var FILE = {};
var FILE_SLASH = {};
var FILE_HOST = {};
var PATH_START = {};
var PATH = {};
var CANNOT_BE_A_BASE_URL_PATH = {};
var QUERY = {};
var FRAGMENT = {};

var URLState = function (url, isBase, base) {
  var urlString = $toString(url);
  var baseState, failure, searchParams;
  if (isBase) {
    failure = this.parse(urlString);
    if (failure) throw TypeError(failure);
    this.searchParams = null;
  } else {
    if (base !== undefined) baseState = new URLState(base, true);
    failure = this.parse(urlString, null, baseState);
    if (failure) throw TypeError(failure);
    searchParams = getInternalSearchParamsState(new URLSearchParams());
    searchParams.bindURL(this);
    this.searchParams = searchParams;
  }
};

URLState.prototype = {
  type: 'URL',
  // https://url.spec.whatwg.org/#url-parsing
  // eslint-disable-next-line max-statements -- TODO
  parse: function (input, stateOverride, base) {
    var url = this;
    var state = stateOverride || SCHEME_START;
    var pointer = 0;
    var buffer = '';
    var seenAt = false;
    var seenBracket = false;
    var seenPasswordToken = false;
    var codePoints, chr, bufferCodePoints, failure;

    input = $toString(input);

    if (!stateOverride) {
      url.scheme = '';
      url.username = '';
      url.password = '';
      url.host = null;
      url.port = null;
      url.path = [];
      url.query = null;
      url.fragment = null;
      url.cannotBeABaseURL = false;
      input = replace(input, LEADING_AND_TRAILING_C0_CONTROL_OR_SPACE, '');
    }

    input = replace(input, TAB_AND_NEW_LINE, '');

    codePoints = arrayFrom(input);

    while (pointer <= codePoints.length) {
      chr = codePoints[pointer];
      switch (state) {
        case SCHEME_START:
          if (chr && exec(ALPHA, chr)) {
            buffer += toLowerCase(chr);
            state = SCHEME;
          } else if (!stateOverride) {
            state = NO_SCHEME;
            continue;
          } else return INVALID_SCHEME;
          break;

        case SCHEME:
          if (chr && (exec(ALPHANUMERIC, chr) || chr == '+' || chr == '-' || chr == '.')) {
            buffer += toLowerCase(chr);
          } else if (chr == ':') {
            if (stateOverride && (
              (url.isSpecial() != hasOwn(specialSchemes, buffer)) ||
              (buffer == 'file' && (url.includesCredentials() || url.port !== null)) ||
              (url.scheme == 'file' && !url.host)
            )) return;
            url.scheme = buffer;
            if (stateOverride) {
              if (url.isSpecial() && specialSchemes[url.scheme] == url.port) url.port = null;
              return;
            }
            buffer = '';
            if (url.scheme == 'file') {
              state = FILE;
            } else if (url.isSpecial() && base && base.scheme == url.scheme) {
              state = SPECIAL_RELATIVE_OR_AUTHORITY;
            } else if (url.isSpecial()) {
              state = SPECIAL_AUTHORITY_SLASHES;
            } else if (codePoints[pointer + 1] == '/') {
              state = PATH_OR_AUTHORITY;
              pointer++;
            } else {
              url.cannotBeABaseURL = true;
              push(url.path, '');
              state = CANNOT_BE_A_BASE_URL_PATH;
            }
          } else if (!stateOverride) {
            buffer = '';
            state = NO_SCHEME;
            pointer = 0;
            continue;
          } else return INVALID_SCHEME;
          break;

        case NO_SCHEME:
          if (!base || (base.cannotBeABaseURL && chr != '#')) return INVALID_SCHEME;
          if (base.cannotBeABaseURL && chr == '#') {
            url.scheme = base.scheme;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            url.cannotBeABaseURL = true;
            state = FRAGMENT;
            break;
          }
          state = base.scheme == 'file' ? FILE : RELATIVE;
          continue;

        case SPECIAL_RELATIVE_OR_AUTHORITY:
          if (chr == '/' && codePoints[pointer + 1] == '/') {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
            pointer++;
          } else {
            state = RELATIVE;
            continue;
          } break;

        case PATH_OR_AUTHORITY:
          if (chr == '/') {
            state = AUTHORITY;
            break;
          } else {
            state = PATH;
            continue;
          }

        case RELATIVE:
          url.scheme = base.scheme;
          if (chr == EOF) {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
          } else if (chr == '/' || (chr == '\\' && url.isSpecial())) {
            state = RELATIVE_SLASH;
          } else if (chr == '?') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.query = base.query;
            url.fragment = '';
            state = FRAGMENT;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            url.path = arraySlice(base.path);
            url.path.length--;
            state = PATH;
            continue;
          } break;

        case RELATIVE_SLASH:
          if (url.isSpecial() && (chr == '/' || chr == '\\')) {
            state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          } else if (chr == '/') {
            state = AUTHORITY;
          } else {
            url.username = base.username;
            url.password = base.password;
            url.host = base.host;
            url.port = base.port;
            state = PATH;
            continue;
          } break;

        case SPECIAL_AUTHORITY_SLASHES:
          state = SPECIAL_AUTHORITY_IGNORE_SLASHES;
          if (chr != '/' || charAt(buffer, pointer + 1) != '/') continue;
          pointer++;
          break;

        case SPECIAL_AUTHORITY_IGNORE_SLASHES:
          if (chr != '/' && chr != '\\') {
            state = AUTHORITY;
            continue;
          } break;

        case AUTHORITY:
          if (chr == '@') {
            if (seenAt) buffer = '%40' + buffer;
            seenAt = true;
            bufferCodePoints = arrayFrom(buffer);
            for (var i = 0; i < bufferCodePoints.length; i++) {
              var codePoint = bufferCodePoints[i];
              if (codePoint == ':' && !seenPasswordToken) {
                seenPasswordToken = true;
                continue;
              }
              var encodedCodePoints = percentEncode(codePoint, userinfoPercentEncodeSet);
              if (seenPasswordToken) url.password += encodedCodePoints;
              else url.username += encodedCodePoints;
            }
            buffer = '';
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial())
          ) {
            if (seenAt && buffer == '') return INVALID_AUTHORITY;
            pointer -= arrayFrom(buffer).length + 1;
            buffer = '';
            state = HOST;
          } else buffer += chr;
          break;

        case HOST:
        case HOSTNAME:
          if (stateOverride && url.scheme == 'file') {
            state = FILE_HOST;
            continue;
          } else if (chr == ':' && !seenBracket) {
            if (buffer == '') return INVALID_HOST;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PORT;
            if (stateOverride == HOSTNAME) return;
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial())
          ) {
            if (url.isSpecial() && buffer == '') return INVALID_HOST;
            if (stateOverride && buffer == '' && (url.includesCredentials() || url.port !== null)) return;
            failure = url.parseHost(buffer);
            if (failure) return failure;
            buffer = '';
            state = PATH_START;
            if (stateOverride) return;
            continue;
          } else {
            if (chr == '[') seenBracket = true;
            else if (chr == ']') seenBracket = false;
            buffer += chr;
          } break;

        case PORT:
          if (exec(DIGIT, chr)) {
            buffer += chr;
          } else if (
            chr == EOF || chr == '/' || chr == '?' || chr == '#' ||
            (chr == '\\' && url.isSpecial()) ||
            stateOverride
          ) {
            if (buffer != '') {
              var port = parseInt(buffer, 10);
              if (port > 0xFFFF) return INVALID_PORT;
              url.port = (url.isSpecial() && port === specialSchemes[url.scheme]) ? null : port;
              buffer = '';
            }
            if (stateOverride) return;
            state = PATH_START;
            continue;
          } else return INVALID_PORT;
          break;

        case FILE:
          url.scheme = 'file';
          if (chr == '/' || chr == '\\') state = FILE_SLASH;
          else if (base && base.scheme == 'file') {
            if (chr == EOF) {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = base.query;
            } else if (chr == '?') {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.host = base.host;
              url.path = arraySlice(base.path);
              url.query = base.query;
              url.fragment = '';
              state = FRAGMENT;
            } else {
              if (!startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
                url.host = base.host;
                url.path = arraySlice(base.path);
                url.shortenPath();
              }
              state = PATH;
              continue;
            }
          } else {
            state = PATH;
            continue;
          } break;

        case FILE_SLASH:
          if (chr == '/' || chr == '\\') {
            state = FILE_HOST;
            break;
          }
          if (base && base.scheme == 'file' && !startsWithWindowsDriveLetter(join(arraySlice(codePoints, pointer), ''))) {
            if (isWindowsDriveLetter(base.path[0], true)) push(url.path, base.path[0]);
            else url.host = base.host;
          }
          state = PATH;
          continue;

        case FILE_HOST:
          if (chr == EOF || chr == '/' || chr == '\\' || chr == '?' || chr == '#') {
            if (!stateOverride && isWindowsDriveLetter(buffer)) {
              state = PATH;
            } else if (buffer == '') {
              url.host = '';
              if (stateOverride) return;
              state = PATH_START;
            } else {
              failure = url.parseHost(buffer);
              if (failure) return failure;
              if (url.host == 'localhost') url.host = '';
              if (stateOverride) return;
              buffer = '';
              state = PATH_START;
            } continue;
          } else buffer += chr;
          break;

        case PATH_START:
          if (url.isSpecial()) {
            state = PATH;
            if (chr != '/' && chr != '\\') continue;
          } else if (!stateOverride && chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            state = PATH;
            if (chr != '/') continue;
          } break;

        case PATH:
          if (
            chr == EOF || chr == '/' ||
            (chr == '\\' && url.isSpecial()) ||
            (!stateOverride && (chr == '?' || chr == '#'))
          ) {
            if (isDoubleDot(buffer)) {
              url.shortenPath();
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push(url.path, '');
              }
            } else if (isSingleDot(buffer)) {
              if (chr != '/' && !(chr == '\\' && url.isSpecial())) {
                push(url.path, '');
              }
            } else {
              if (url.scheme == 'file' && !url.path.length && isWindowsDriveLetter(buffer)) {
                if (url.host) url.host = '';
                buffer = charAt(buffer, 0) + ':'; // normalize windows drive letter
              }
              push(url.path, buffer);
            }
            buffer = '';
            if (url.scheme == 'file' && (chr == EOF || chr == '?' || chr == '#')) {
              while (url.path.length > 1 && url.path[0] === '') {
                shift(url.path);
              }
            }
            if (chr == '?') {
              url.query = '';
              state = QUERY;
            } else if (chr == '#') {
              url.fragment = '';
              state = FRAGMENT;
            }
          } else {
            buffer += percentEncode(chr, pathPercentEncodeSet);
          } break;

        case CANNOT_BE_A_BASE_URL_PATH:
          if (chr == '?') {
            url.query = '';
            state = QUERY;
          } else if (chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            url.path[0] += percentEncode(chr, C0ControlPercentEncodeSet);
          } break;

        case QUERY:
          if (!stateOverride && chr == '#') {
            url.fragment = '';
            state = FRAGMENT;
          } else if (chr != EOF) {
            if (chr == "'" && url.isSpecial()) url.query += '%27';
            else if (chr == '#') url.query += '%23';
            else url.query += percentEncode(chr, C0ControlPercentEncodeSet);
          } break;

        case FRAGMENT:
          if (chr != EOF) url.fragment += percentEncode(chr, fragmentPercentEncodeSet);
          break;
      }

      pointer++;
    }
  },
  // https://url.spec.whatwg.org/#host-parsing
  parseHost: function (input) {
    var result, codePoints, index;
    if (charAt(input, 0) == '[') {
      if (charAt(input, input.length - 1) != ']') return INVALID_HOST;
      result = parseIPv6(stringSlice(input, 1, -1));
      if (!result) return INVALID_HOST;
      this.host = result;
    // opaque host
    } else if (!this.isSpecial()) {
      if (exec(FORBIDDEN_HOST_CODE_POINT_EXCLUDING_PERCENT, input)) return INVALID_HOST;
      result = '';
      codePoints = arrayFrom(input);
      for (index = 0; index < codePoints.length; index++) {
        result += percentEncode(codePoints[index], C0ControlPercentEncodeSet);
      }
      this.host = result;
    } else {
      input = toASCII(input);
      if (exec(FORBIDDEN_HOST_CODE_POINT, input)) return INVALID_HOST;
      result = parseIPv4(input);
      if (result === null) return INVALID_HOST;
      this.host = result;
    }
  },
  // https://url.spec.whatwg.org/#cannot-have-a-username-password-port
  cannotHaveUsernamePasswordPort: function () {
    return !this.host || this.cannotBeABaseURL || this.scheme == 'file';
  },
  // https://url.spec.whatwg.org/#include-credentials
  includesCredentials: function () {
    return this.username != '' || this.password != '';
  },
  // https://url.spec.whatwg.org/#is-special
  isSpecial: function () {
    return hasOwn(specialSchemes, this.scheme);
  },
  // https://url.spec.whatwg.org/#shorten-a-urls-path
  shortenPath: function () {
    var path = this.path;
    var pathSize = path.length;
    if (pathSize && (this.scheme != 'file' || pathSize != 1 || !isWindowsDriveLetter(path[0], true))) {
      path.length--;
    }
  },
  // https://url.spec.whatwg.org/#concept-url-serializer
  serialize: function () {
    var url = this;
    var scheme = url.scheme;
    var username = url.username;
    var password = url.password;
    var host = url.host;
    var port = url.port;
    var path = url.path;
    var query = url.query;
    var fragment = url.fragment;
    var output = scheme + ':';
    if (host !== null) {
      output += '//';
      if (url.includesCredentials()) {
        output += username + (password ? ':' + password : '') + '@';
      }
      output += serializeHost(host);
      if (port !== null) output += ':' + port;
    } else if (scheme == 'file') output += '//';
    output += url.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
    if (query !== null) output += '?' + query;
    if (fragment !== null) output += '#' + fragment;
    return output;
  },
  // https://url.spec.whatwg.org/#dom-url-href
  setHref: function (href) {
    var failure = this.parse(href);
    if (failure) throw TypeError(failure);
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-origin
  getOrigin: function () {
    var scheme = this.scheme;
    var port = this.port;
    if (scheme == 'blob') try {
      return new URLConstructor(scheme.path[0]).origin;
    } catch (error) {
      return 'null';
    }
    if (scheme == 'file' || !this.isSpecial()) return 'null';
    return scheme + '://' + serializeHost(this.host) + (port !== null ? ':' + port : '');
  },
  // https://url.spec.whatwg.org/#dom-url-protocol
  getProtocol: function () {
    return this.scheme + ':';
  },
  setProtocol: function (protocol) {
    this.parse($toString(protocol) + ':', SCHEME_START);
  },
  // https://url.spec.whatwg.org/#dom-url-username
  getUsername: function () {
    return this.username;
  },
  setUsername: function (username) {
    var codePoints = arrayFrom($toString(username));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.username = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.username += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-password
  getPassword: function () {
    return this.password;
  },
  setPassword: function (password) {
    var codePoints = arrayFrom($toString(password));
    if (this.cannotHaveUsernamePasswordPort()) return;
    this.password = '';
    for (var i = 0; i < codePoints.length; i++) {
      this.password += percentEncode(codePoints[i], userinfoPercentEncodeSet);
    }
  },
  // https://url.spec.whatwg.org/#dom-url-host
  getHost: function () {
    var host = this.host;
    var port = this.port;
    return host === null ? ''
      : port === null ? serializeHost(host)
      : serializeHost(host) + ':' + port;
  },
  setHost: function (host) {
    if (this.cannotBeABaseURL) return;
    this.parse(host, HOST);
  },
  // https://url.spec.whatwg.org/#dom-url-hostname
  getHostname: function () {
    var host = this.host;
    return host === null ? '' : serializeHost(host);
  },
  setHostname: function (hostname) {
    if (this.cannotBeABaseURL) return;
    this.parse(hostname, HOSTNAME);
  },
  // https://url.spec.whatwg.org/#dom-url-port
  getPort: function () {
    var port = this.port;
    return port === null ? '' : $toString(port);
  },
  setPort: function (port) {
    if (this.cannotHaveUsernamePasswordPort()) return;
    port = $toString(port);
    if (port == '') this.port = null;
    else this.parse(port, PORT);
  },
  // https://url.spec.whatwg.org/#dom-url-pathname
  getPathname: function () {
    var path = this.path;
    return this.cannotBeABaseURL ? path[0] : path.length ? '/' + join(path, '/') : '';
  },
  setPathname: function (pathname) {
    if (this.cannotBeABaseURL) return;
    this.path = [];
    this.parse(pathname, PATH_START);
  },
  // https://url.spec.whatwg.org/#dom-url-search
  getSearch: function () {
    var query = this.query;
    return query ? '?' + query : '';
  },
  setSearch: function (search) {
    search = $toString(search);
    if (search == '') {
      this.query = null;
    } else {
      if ('?' == charAt(search, 0)) search = stringSlice(search, 1);
      this.query = '';
      this.parse(search, QUERY);
    }
    this.searchParams.update();
  },
  // https://url.spec.whatwg.org/#dom-url-searchparams
  getSearchParams: function () {
    return this.searchParams.facade;
  },
  // https://url.spec.whatwg.org/#dom-url-hash
  getHash: function () {
    var fragment = this.fragment;
    return fragment ? '#' + fragment : '';
  },
  setHash: function (hash) {
    hash = $toString(hash);
    if (hash == '') {
      this.fragment = null;
      return;
    }
    if ('#' == charAt(hash, 0)) hash = stringSlice(hash, 1);
    this.fragment = '';
    this.parse(hash, FRAGMENT);
  },
  update: function () {
    this.query = this.searchParams.serialize() || null;
  }
};

// `URL` constructor
// https://url.spec.whatwg.org/#url-class
var URLConstructor = function URL(url /* , base */) {
  var that = anInstance(this, URLPrototype);
  var base = validateArgumentsLength(arguments.length, 1) > 1 ? arguments[1] : undefined;
  var state = setInternalState(that, new URLState(url, false, base));
  if (!DESCRIPTORS) {
    that.href = state.serialize();
    that.origin = state.getOrigin();
    that.protocol = state.getProtocol();
    that.username = state.getUsername();
    that.password = state.getPassword();
    that.host = state.getHost();
    that.hostname = state.getHostname();
    that.port = state.getPort();
    that.pathname = state.getPathname();
    that.search = state.getSearch();
    that.searchParams = state.getSearchParams();
    that.hash = state.getHash();
  }
};

var URLPrototype = URLConstructor.prototype;

var accessorDescriptor = function (getter, setter) {
  return {
    get: function () {
      return getInternalURLState(this)[getter]();
    },
    set: setter && function (value) {
      return getInternalURLState(this)[setter](value);
    },
    configurable: true,
    enumerable: true
  };
};

if (DESCRIPTORS) {
  defineProperties(URLPrototype, {
    // `URL.prototype.href` accessors pair
    // https://url.spec.whatwg.org/#dom-url-href
    href: accessorDescriptor('serialize', 'setHref'),
    // `URL.prototype.origin` getter
    // https://url.spec.whatwg.org/#dom-url-origin
    origin: accessorDescriptor('getOrigin'),
    // `URL.prototype.protocol` accessors pair
    // https://url.spec.whatwg.org/#dom-url-protocol
    protocol: accessorDescriptor('getProtocol', 'setProtocol'),
    // `URL.prototype.username` accessors pair
    // https://url.spec.whatwg.org/#dom-url-username
    username: accessorDescriptor('getUsername', 'setUsername'),
    // `URL.prototype.password` accessors pair
    // https://url.spec.whatwg.org/#dom-url-password
    password: accessorDescriptor('getPassword', 'setPassword'),
    // `URL.prototype.host` accessors pair
    // https://url.spec.whatwg.org/#dom-url-host
    host: accessorDescriptor('getHost', 'setHost'),
    // `URL.prototype.hostname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hostname
    hostname: accessorDescriptor('getHostname', 'setHostname'),
    // `URL.prototype.port` accessors pair
    // https://url.spec.whatwg.org/#dom-url-port
    port: accessorDescriptor('getPort', 'setPort'),
    // `URL.prototype.pathname` accessors pair
    // https://url.spec.whatwg.org/#dom-url-pathname
    pathname: accessorDescriptor('getPathname', 'setPathname'),
    // `URL.prototype.search` accessors pair
    // https://url.spec.whatwg.org/#dom-url-search
    search: accessorDescriptor('getSearch', 'setSearch'),
    // `URL.prototype.searchParams` getter
    // https://url.spec.whatwg.org/#dom-url-searchparams
    searchParams: accessorDescriptor('getSearchParams'),
    // `URL.prototype.hash` accessors pair
    // https://url.spec.whatwg.org/#dom-url-hash
    hash: accessorDescriptor('getHash', 'setHash')
  });
}

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
redefine(URLPrototype, 'toJSON', function toJSON() {
  return getInternalURLState(this).serialize();
}, { enumerable: true });

// `URL.prototype.toString` method
// https://url.spec.whatwg.org/#URL-stringification-behavior
redefine(URLPrototype, 'toString', function toString() {
  return getInternalURLState(this).serialize();
}, { enumerable: true });

if (NativeURL) {
  var nativeCreateObjectURL = NativeURL.createObjectURL;
  var nativeRevokeObjectURL = NativeURL.revokeObjectURL;
  // `URL.createObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/createObjectURL
  if (nativeCreateObjectURL) redefine(URLConstructor, 'createObjectURL', bind(nativeCreateObjectURL, NativeURL));
  // `URL.revokeObjectURL` method
  // https://developer.mozilla.org/en-US/docs/Web/API/URL/revokeObjectURL
  if (nativeRevokeObjectURL) redefine(URLConstructor, 'revokeObjectURL', bind(nativeRevokeObjectURL, NativeURL));
}

setToStringTag(URLConstructor, 'URL');

$({ global: true, forced: !USE_NATIVE_URL, sham: !DESCRIPTORS }, {
  URL: URLConstructor
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.to-json.js":
/*!********************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.to-json.js ***!
  \********************************************************************************************************************/
/***/ (function(__unused_webpack_module, __unused_webpack_exports, __webpack_require__) {

"use strict";

var $ = __webpack_require__(/*! ../internals/export */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/export.js");
var call = __webpack_require__(/*! ../internals/function-call */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/function-call.js");

// `URL.prototype.toJSON` method
// https://url.spec.whatwg.org/#dom-url-tojson
$({ target: 'URL', proto: true, enumerable: true }, {
  toJSON: function toJSON() {
    return call(URL.prototype.toString, this);
  }
});


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/stable/index.js":
/*!*********************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/stable/index.js ***!
  \*********************************************************************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

__webpack_require__(/*! ../modules/es.symbol */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.js");
__webpack_require__(/*! ../modules/es.symbol.description */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.description.js");
__webpack_require__(/*! ../modules/es.symbol.async-iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.async-iterator.js");
__webpack_require__(/*! ../modules/es.symbol.has-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.has-instance.js");
__webpack_require__(/*! ../modules/es.symbol.is-concat-spreadable */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.is-concat-spreadable.js");
__webpack_require__(/*! ../modules/es.symbol.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.iterator.js");
__webpack_require__(/*! ../modules/es.symbol.match */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match.js");
__webpack_require__(/*! ../modules/es.symbol.match-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.match-all.js");
__webpack_require__(/*! ../modules/es.symbol.replace */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.replace.js");
__webpack_require__(/*! ../modules/es.symbol.search */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.search.js");
__webpack_require__(/*! ../modules/es.symbol.species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.species.js");
__webpack_require__(/*! ../modules/es.symbol.split */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.split.js");
__webpack_require__(/*! ../modules/es.symbol.to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-primitive.js");
__webpack_require__(/*! ../modules/es.symbol.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.to-string-tag.js");
__webpack_require__(/*! ../modules/es.symbol.unscopables */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.symbol.unscopables.js");
__webpack_require__(/*! ../modules/es.error.cause */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.error.cause.js");
__webpack_require__(/*! ../modules/es.error.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.error.to-string.js");
__webpack_require__(/*! ../modules/es.aggregate-error */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.js");
__webpack_require__(/*! ../modules/es.aggregate-error.cause */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.aggregate-error.cause.js");
__webpack_require__(/*! ../modules/es.array.at */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.at.js");
__webpack_require__(/*! ../modules/es.array.concat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.concat.js");
__webpack_require__(/*! ../modules/es.array.copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.copy-within.js");
__webpack_require__(/*! ../modules/es.array.every */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.every.js");
__webpack_require__(/*! ../modules/es.array.fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.fill.js");
__webpack_require__(/*! ../modules/es.array.filter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.filter.js");
__webpack_require__(/*! ../modules/es.array.find */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find.js");
__webpack_require__(/*! ../modules/es.array.find-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.find-index.js");
__webpack_require__(/*! ../modules/es.array.flat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat.js");
__webpack_require__(/*! ../modules/es.array.flat-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.flat-map.js");
__webpack_require__(/*! ../modules/es.array.for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.for-each.js");
__webpack_require__(/*! ../modules/es.array.from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.from.js");
__webpack_require__(/*! ../modules/es.array.includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.includes.js");
__webpack_require__(/*! ../modules/es.array.index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.index-of.js");
__webpack_require__(/*! ../modules/es.array.is-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.is-array.js");
__webpack_require__(/*! ../modules/es.array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.iterator.js");
__webpack_require__(/*! ../modules/es.array.join */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.join.js");
__webpack_require__(/*! ../modules/es.array.last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.last-index-of.js");
__webpack_require__(/*! ../modules/es.array.map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.map.js");
__webpack_require__(/*! ../modules/es.array.of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.of.js");
__webpack_require__(/*! ../modules/es.array.reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce.js");
__webpack_require__(/*! ../modules/es.array.reduce-right */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reduce-right.js");
__webpack_require__(/*! ../modules/es.array.reverse */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.reverse.js");
__webpack_require__(/*! ../modules/es.array.slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.slice.js");
__webpack_require__(/*! ../modules/es.array.some */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.some.js");
__webpack_require__(/*! ../modules/es.array.sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.sort.js");
__webpack_require__(/*! ../modules/es.array.species */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.species.js");
__webpack_require__(/*! ../modules/es.array.splice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.splice.js");
__webpack_require__(/*! ../modules/es.array.unscopables.flat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat.js");
__webpack_require__(/*! ../modules/es.array.unscopables.flat-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array.unscopables.flat-map.js");
__webpack_require__(/*! ../modules/es.array-buffer.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.constructor.js");
__webpack_require__(/*! ../modules/es.array-buffer.is-view */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.is-view.js");
__webpack_require__(/*! ../modules/es.array-buffer.slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.array-buffer.slice.js");
__webpack_require__(/*! ../modules/es.data-view */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.data-view.js");
__webpack_require__(/*! ../modules/es.date.get-year */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.get-year.js");
__webpack_require__(/*! ../modules/es.date.now */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.now.js");
__webpack_require__(/*! ../modules/es.date.set-year */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.set-year.js");
__webpack_require__(/*! ../modules/es.date.to-gmt-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-gmt-string.js");
__webpack_require__(/*! ../modules/es.date.to-iso-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-iso-string.js");
__webpack_require__(/*! ../modules/es.date.to-json */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-json.js");
__webpack_require__(/*! ../modules/es.date.to-primitive */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-primitive.js");
__webpack_require__(/*! ../modules/es.date.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.date.to-string.js");
__webpack_require__(/*! ../modules/es.escape */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.escape.js");
__webpack_require__(/*! ../modules/es.function.bind */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.bind.js");
__webpack_require__(/*! ../modules/es.function.has-instance */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.has-instance.js");
__webpack_require__(/*! ../modules/es.function.name */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.function.name.js");
__webpack_require__(/*! ../modules/es.global-this */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.global-this.js");
__webpack_require__(/*! ../modules/es.json.stringify */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.stringify.js");
__webpack_require__(/*! ../modules/es.json.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.json.to-string-tag.js");
__webpack_require__(/*! ../modules/es.map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.map.js");
__webpack_require__(/*! ../modules/es.math.acosh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.acosh.js");
__webpack_require__(/*! ../modules/es.math.asinh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.asinh.js");
__webpack_require__(/*! ../modules/es.math.atanh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.atanh.js");
__webpack_require__(/*! ../modules/es.math.cbrt */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cbrt.js");
__webpack_require__(/*! ../modules/es.math.clz32 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.clz32.js");
__webpack_require__(/*! ../modules/es.math.cosh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.cosh.js");
__webpack_require__(/*! ../modules/es.math.expm1 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.expm1.js");
__webpack_require__(/*! ../modules/es.math.fround */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.fround.js");
__webpack_require__(/*! ../modules/es.math.hypot */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.hypot.js");
__webpack_require__(/*! ../modules/es.math.imul */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.imul.js");
__webpack_require__(/*! ../modules/es.math.log10 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log10.js");
__webpack_require__(/*! ../modules/es.math.log1p */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log1p.js");
__webpack_require__(/*! ../modules/es.math.log2 */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.log2.js");
__webpack_require__(/*! ../modules/es.math.sign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sign.js");
__webpack_require__(/*! ../modules/es.math.sinh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.sinh.js");
__webpack_require__(/*! ../modules/es.math.tanh */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.tanh.js");
__webpack_require__(/*! ../modules/es.math.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.to-string-tag.js");
__webpack_require__(/*! ../modules/es.math.trunc */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.math.trunc.js");
__webpack_require__(/*! ../modules/es.number.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.constructor.js");
__webpack_require__(/*! ../modules/es.number.epsilon */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.epsilon.js");
__webpack_require__(/*! ../modules/es.number.is-finite */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-finite.js");
__webpack_require__(/*! ../modules/es.number.is-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-integer.js");
__webpack_require__(/*! ../modules/es.number.is-nan */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-nan.js");
__webpack_require__(/*! ../modules/es.number.is-safe-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.is-safe-integer.js");
__webpack_require__(/*! ../modules/es.number.max-safe-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.max-safe-integer.js");
__webpack_require__(/*! ../modules/es.number.min-safe-integer */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.min-safe-integer.js");
__webpack_require__(/*! ../modules/es.number.parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-float.js");
__webpack_require__(/*! ../modules/es.number.parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.parse-int.js");
__webpack_require__(/*! ../modules/es.number.to-exponential */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-exponential.js");
__webpack_require__(/*! ../modules/es.number.to-fixed */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-fixed.js");
__webpack_require__(/*! ../modules/es.number.to-precision */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.number.to-precision.js");
__webpack_require__(/*! ../modules/es.object.assign */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.assign.js");
__webpack_require__(/*! ../modules/es.object.create */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.create.js");
__webpack_require__(/*! ../modules/es.object.define-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-getter.js");
__webpack_require__(/*! ../modules/es.object.define-properties */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-properties.js");
__webpack_require__(/*! ../modules/es.object.define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-property.js");
__webpack_require__(/*! ../modules/es.object.define-setter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.define-setter.js");
__webpack_require__(/*! ../modules/es.object.entries */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.entries.js");
__webpack_require__(/*! ../modules/es.object.freeze */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.freeze.js");
__webpack_require__(/*! ../modules/es.object.from-entries */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.from-entries.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-descriptors */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-descriptors.js");
__webpack_require__(/*! ../modules/es.object.get-own-property-names */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-own-property-names.js");
__webpack_require__(/*! ../modules/es.object.get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.get-prototype-of.js");
__webpack_require__(/*! ../modules/es.object.has-own */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.has-own.js");
__webpack_require__(/*! ../modules/es.object.is */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is.js");
__webpack_require__(/*! ../modules/es.object.is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-extensible.js");
__webpack_require__(/*! ../modules/es.object.is-frozen */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-frozen.js");
__webpack_require__(/*! ../modules/es.object.is-sealed */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.is-sealed.js");
__webpack_require__(/*! ../modules/es.object.keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.keys.js");
__webpack_require__(/*! ../modules/es.object.lookup-getter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-getter.js");
__webpack_require__(/*! ../modules/es.object.lookup-setter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.lookup-setter.js");
__webpack_require__(/*! ../modules/es.object.prevent-extensions */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.prevent-extensions.js");
__webpack_require__(/*! ../modules/es.object.seal */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.seal.js");
__webpack_require__(/*! ../modules/es.object.set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.set-prototype-of.js");
__webpack_require__(/*! ../modules/es.object.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.to-string.js");
__webpack_require__(/*! ../modules/es.object.values */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.object.values.js");
__webpack_require__(/*! ../modules/es.parse-float */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-float.js");
__webpack_require__(/*! ../modules/es.parse-int */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.parse-int.js");
__webpack_require__(/*! ../modules/es.promise */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.js");
__webpack_require__(/*! ../modules/es.promise.all-settled */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.all-settled.js");
__webpack_require__(/*! ../modules/es.promise.any */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.any.js");
__webpack_require__(/*! ../modules/es.promise.finally */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.promise.finally.js");
__webpack_require__(/*! ../modules/es.reflect.apply */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.apply.js");
__webpack_require__(/*! ../modules/es.reflect.construct */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.construct.js");
__webpack_require__(/*! ../modules/es.reflect.define-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.define-property.js");
__webpack_require__(/*! ../modules/es.reflect.delete-property */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.delete-property.js");
__webpack_require__(/*! ../modules/es.reflect.get */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get.js");
__webpack_require__(/*! ../modules/es.reflect.get-own-property-descriptor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-own-property-descriptor.js");
__webpack_require__(/*! ../modules/es.reflect.get-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.get-prototype-of.js");
__webpack_require__(/*! ../modules/es.reflect.has */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.has.js");
__webpack_require__(/*! ../modules/es.reflect.is-extensible */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.is-extensible.js");
__webpack_require__(/*! ../modules/es.reflect.own-keys */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.own-keys.js");
__webpack_require__(/*! ../modules/es.reflect.prevent-extensions */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.prevent-extensions.js");
__webpack_require__(/*! ../modules/es.reflect.set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set.js");
__webpack_require__(/*! ../modules/es.reflect.set-prototype-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.set-prototype-of.js");
__webpack_require__(/*! ../modules/es.reflect.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.reflect.to-string-tag.js");
__webpack_require__(/*! ../modules/es.regexp.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.constructor.js");
__webpack_require__(/*! ../modules/es.regexp.dot-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.dot-all.js");
__webpack_require__(/*! ../modules/es.regexp.exec */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.exec.js");
__webpack_require__(/*! ../modules/es.regexp.flags */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.flags.js");
__webpack_require__(/*! ../modules/es.regexp.sticky */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.sticky.js");
__webpack_require__(/*! ../modules/es.regexp.test */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.test.js");
__webpack_require__(/*! ../modules/es.regexp.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.regexp.to-string.js");
__webpack_require__(/*! ../modules/es.set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.set.js");
__webpack_require__(/*! ../modules/es.string.at-alternative */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.at-alternative.js");
__webpack_require__(/*! ../modules/es.string.code-point-at */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.code-point-at.js");
__webpack_require__(/*! ../modules/es.string.ends-with */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.ends-with.js");
__webpack_require__(/*! ../modules/es.string.from-code-point */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.from-code-point.js");
__webpack_require__(/*! ../modules/es.string.includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.includes.js");
__webpack_require__(/*! ../modules/es.string.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.iterator.js");
__webpack_require__(/*! ../modules/es.string.match */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match.js");
__webpack_require__(/*! ../modules/es.string.match-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.match-all.js");
__webpack_require__(/*! ../modules/es.string.pad-end */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-end.js");
__webpack_require__(/*! ../modules/es.string.pad-start */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.pad-start.js");
__webpack_require__(/*! ../modules/es.string.raw */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.raw.js");
__webpack_require__(/*! ../modules/es.string.repeat */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.repeat.js");
__webpack_require__(/*! ../modules/es.string.replace */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace.js");
__webpack_require__(/*! ../modules/es.string.replace-all */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.replace-all.js");
__webpack_require__(/*! ../modules/es.string.search */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.search.js");
__webpack_require__(/*! ../modules/es.string.split */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.split.js");
__webpack_require__(/*! ../modules/es.string.starts-with */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.starts-with.js");
__webpack_require__(/*! ../modules/es.string.substr */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.substr.js");
__webpack_require__(/*! ../modules/es.string.trim */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim.js");
__webpack_require__(/*! ../modules/es.string.trim-end */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-end.js");
__webpack_require__(/*! ../modules/es.string.trim-start */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.trim-start.js");
__webpack_require__(/*! ../modules/es.string.anchor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.anchor.js");
__webpack_require__(/*! ../modules/es.string.big */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.big.js");
__webpack_require__(/*! ../modules/es.string.blink */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.blink.js");
__webpack_require__(/*! ../modules/es.string.bold */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.bold.js");
__webpack_require__(/*! ../modules/es.string.fixed */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fixed.js");
__webpack_require__(/*! ../modules/es.string.fontcolor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontcolor.js");
__webpack_require__(/*! ../modules/es.string.fontsize */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.fontsize.js");
__webpack_require__(/*! ../modules/es.string.italics */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.italics.js");
__webpack_require__(/*! ../modules/es.string.link */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.link.js");
__webpack_require__(/*! ../modules/es.string.small */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.small.js");
__webpack_require__(/*! ../modules/es.string.strike */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.strike.js");
__webpack_require__(/*! ../modules/es.string.sub */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sub.js");
__webpack_require__(/*! ../modules/es.string.sup */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.string.sup.js");
__webpack_require__(/*! ../modules/es.typed-array.float32-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float32-array.js");
__webpack_require__(/*! ../modules/es.typed-array.float64-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.float64-array.js");
__webpack_require__(/*! ../modules/es.typed-array.int8-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int8-array.js");
__webpack_require__(/*! ../modules/es.typed-array.int16-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int16-array.js");
__webpack_require__(/*! ../modules/es.typed-array.int32-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.int32-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint8-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint8-clamped-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint8-clamped-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint16-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint16-array.js");
__webpack_require__(/*! ../modules/es.typed-array.uint32-array */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.uint32-array.js");
__webpack_require__(/*! ../modules/es.typed-array.at */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.at.js");
__webpack_require__(/*! ../modules/es.typed-array.copy-within */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.copy-within.js");
__webpack_require__(/*! ../modules/es.typed-array.every */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.every.js");
__webpack_require__(/*! ../modules/es.typed-array.fill */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.fill.js");
__webpack_require__(/*! ../modules/es.typed-array.filter */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.filter.js");
__webpack_require__(/*! ../modules/es.typed-array.find */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find.js");
__webpack_require__(/*! ../modules/es.typed-array.find-index */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.find-index.js");
__webpack_require__(/*! ../modules/es.typed-array.for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.for-each.js");
__webpack_require__(/*! ../modules/es.typed-array.from */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.from.js");
__webpack_require__(/*! ../modules/es.typed-array.includes */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.includes.js");
__webpack_require__(/*! ../modules/es.typed-array.index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.index-of.js");
__webpack_require__(/*! ../modules/es.typed-array.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.iterator.js");
__webpack_require__(/*! ../modules/es.typed-array.join */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.join.js");
__webpack_require__(/*! ../modules/es.typed-array.last-index-of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.last-index-of.js");
__webpack_require__(/*! ../modules/es.typed-array.map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.map.js");
__webpack_require__(/*! ../modules/es.typed-array.of */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.of.js");
__webpack_require__(/*! ../modules/es.typed-array.reduce */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce.js");
__webpack_require__(/*! ../modules/es.typed-array.reduce-right */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reduce-right.js");
__webpack_require__(/*! ../modules/es.typed-array.reverse */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.reverse.js");
__webpack_require__(/*! ../modules/es.typed-array.set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.set.js");
__webpack_require__(/*! ../modules/es.typed-array.slice */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.slice.js");
__webpack_require__(/*! ../modules/es.typed-array.some */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.some.js");
__webpack_require__(/*! ../modules/es.typed-array.sort */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.sort.js");
__webpack_require__(/*! ../modules/es.typed-array.subarray */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.subarray.js");
__webpack_require__(/*! ../modules/es.typed-array.to-locale-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-locale-string.js");
__webpack_require__(/*! ../modules/es.typed-array.to-string */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.typed-array.to-string.js");
__webpack_require__(/*! ../modules/es.unescape */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.unescape.js");
__webpack_require__(/*! ../modules/es.weak-map */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-map.js");
__webpack_require__(/*! ../modules/es.weak-set */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/es.weak-set.js");
__webpack_require__(/*! ../modules/web.atob */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.atob.js");
__webpack_require__(/*! ../modules/web.btoa */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.btoa.js");
__webpack_require__(/*! ../modules/web.dom-collections.for-each */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.for-each.js");
__webpack_require__(/*! ../modules/web.dom-collections.iterator */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-collections.iterator.js");
__webpack_require__(/*! ../modules/web.dom-exception.constructor */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.constructor.js");
__webpack_require__(/*! ../modules/web.dom-exception.stack */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.stack.js");
__webpack_require__(/*! ../modules/web.dom-exception.to-string-tag */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.dom-exception.to-string-tag.js");
__webpack_require__(/*! ../modules/web.immediate */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.immediate.js");
__webpack_require__(/*! ../modules/web.queue-microtask */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.queue-microtask.js");
__webpack_require__(/*! ../modules/web.structured-clone */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.structured-clone.js");
__webpack_require__(/*! ../modules/web.timers */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.timers.js");
__webpack_require__(/*! ../modules/web.url */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.js");
__webpack_require__(/*! ../modules/web.url.to-json */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url.to-json.js");
__webpack_require__(/*! ../modules/web.url-search-params */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/modules/web.url-search-params.js");

module.exports = __webpack_require__(/*! ../internals/path */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/internals/path.js");


/***/ }),

/***/ "./styles/main.scss":
/*!**************************!*\
  !*** ./styles/main.scss ***!
  \**************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// extracted by mini-css-extract-plugin


/***/ }),

/***/ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/regenerator-runtime/runtime.js":
/*!****************************************************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/regenerator-runtime/runtime.js ***!
  \****************************************************************************************************************/
/***/ (function(module) {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */

var runtime = (function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.
  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }
  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function(obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []);

    // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.
    generator._invoke = makeInvokeMethod(innerFn, self, context);

    return generator;
  }
  exports.wrap = wrap;

  // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.
  function tryCatch(fn, obj, arg) {
    try {
      return { type: "normal", arg: fn.call(obj, arg) };
    } catch (err) {
      return { type: "throw", arg: err };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed";

  // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.
  var ContinueSentinel = {};

  // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.
  function Generator() {}
  function GeneratorFunction() {}
  function GeneratorFunctionPrototype() {}

  // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.
  var IteratorPrototype = {};
  define(IteratorPrototype, iteratorSymbol, function () {
    return this;
  });

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));
  if (NativeIteratorPrototype &&
      NativeIteratorPrototype !== Op &&
      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype =
    Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = GeneratorFunctionPrototype;
  define(Gp, "constructor", GeneratorFunctionPrototype);
  define(GeneratorFunctionPrototype, "constructor", GeneratorFunction);
  GeneratorFunction.displayName = define(
    GeneratorFunctionPrototype,
    toStringTagSymbol,
    "GeneratorFunction"
  );

  // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.
  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function(method) {
      define(prototype, method, function(arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function(genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor
      ? ctor === GeneratorFunction ||
        // For the native GeneratorFunction constructor, the best we can
        // do is to check its .name property.
        (ctor.displayName || ctor.name) === "GeneratorFunction"
      : false;
  };

  exports.mark = function(genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }
    genFun.prototype = Object.create(Gp);
    return genFun;
  };

  // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.
  exports.awrap = function(arg) {
    return { __await: arg };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);
      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;
        if (value &&
            typeof value === "object" &&
            hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function(value) {
            invoke("next", value, resolve, reject);
          }, function(err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function(unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function(error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function(resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise =
        // If enqueue has been called before, then we want to wait until
        // all previous Promises have been resolved before calling invoke,
        // so that results are always delivered in the correct order. If
        // enqueue has not been called before, then it is important to
        // call invoke immediately, without waiting on a callback to fire,
        // so that the async generator function has the opportunity to do
        // any necessary setup in a predictable way. This predictability
        // is why the Promise constructor synchronously invokes its
        // executor callback, and why async functions synchronously
        // execute code before the first await. Since we implement simple
        // async functions in terms of async generators, it is especially
        // important to get this right, even though it requires care.
        previousPromise ? previousPromise.then(
          callInvokeWithMethodAndArg,
          // Avoid propagating failures to Promises returned by later
          // invocations of the iterator.
          callInvokeWithMethodAndArg
        ) : callInvokeWithMethodAndArg();
    }

    // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).
    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);
  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {
    return this;
  });
  exports.AsyncIterator = AsyncIterator;

  // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.
  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;

    var iter = new AsyncIterator(
      wrap(innerFn, outerFn, self, tryLocsList),
      PromiseImpl
    );

    return exports.isGeneratorFunction(outerFn)
      ? iter // If outerFn is a generator, return the full iterator.
      : iter.next().then(function(result) {
          return result.done ? result.value : iter.next();
        });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;

    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        }

        // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume
        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;
        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);
          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;

        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);

        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;

        var record = tryCatch(innerFn, self, context);
        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done
            ? GenStateCompleted
            : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };

        } else if (record.type === "throw") {
          state = GenStateCompleted;
          // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.
          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  }

  // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.
  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];
    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError(
          "The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (! info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value;

      // Resume execution at the desired location (see delegateYield).
      context.next = delegate.nextLoc;

      // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.
      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }

    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    }

    // The delegate iterator is finished, so forget it and continue with
    // the outer generator.
    context.delegate = null;
    return ContinueSentinel;
  }

  // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.
  defineIteratorMethods(Gp);

  define(Gp, toStringTagSymbol, "Generator");

  // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.
  define(Gp, iteratorSymbol, function() {
    return this;
  });

  define(Gp, "toString", function() {
    return "[object Generator]";
  });

  function pushTryEntry(locs) {
    var entry = { tryLoc: locs[0] };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{ tryLoc: "root" }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function(object) {
    var keys = [];
    for (var key in object) {
      keys.push(key);
    }
    keys.reverse();

    // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.
    return function next() {
      while (keys.length) {
        var key = keys.pop();
        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      }

      // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.
      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];
      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1, next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;

          return next;
        };

        return next.next = next;
      }
    }

    // Return an iterator with no values.
    return { next: doneResult };
  }
  exports.values = values;

  function doneResult() {
    return { value: undefined, done: true };
  }

  Context.prototype = {
    constructor: Context,

    reset: function(skipTempReset) {
      this.prev = 0;
      this.next = 0;
      // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.
      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;

      this.method = "next";
      this.arg = undefined;

      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" &&
              hasOwn.call(this, name) &&
              !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },

    stop: function() {
      this.done = true;

      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;
      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },

    dispatchException: function(exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;
      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !! caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }

          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }

          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },

    abrupt: function(type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc <= this.prev &&
            hasOwn.call(entry, "finallyLoc") &&
            this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry &&
          (type === "break" ||
           type === "continue") &&
          finallyEntry.tryLoc <= arg &&
          arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },

    complete: function(record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" ||
          record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },

    finish: function(finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },

    "catch": function(tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;
          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }
          return thrown;
        }
      }

      // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.
      throw new Error("illegal catch attempt");
    },

    delegateYield: function(iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  };

  // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.
  return exports;

}(
  // If this script is executing as a CommonJS module, use module.exports
  // as the regeneratorRuntime namespace. Otherwise create a new empty
  // object. Either way, the resulting object will be used to initialize
  // the regeneratorRuntime variable at the top of this file.
   true ? module.exports : 0
));

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, in modern engines
  // we can explicitly access globalThis. In older engines we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  if (typeof globalThis === "object") {
    globalThis.regeneratorRuntime = runtime;
  } else {
    Function("r", "regeneratorRuntime = r")(runtime);
  }
}


/***/ }),

/***/ "./src/experiment.js":
/*!***************************!*\
  !*** ./src/experiment.js ***!
  \***************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "run": function() { return /* binding */ run; }
/* harmony export */ });
/* harmony import */ var _styles_main_scss__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../styles/main.scss */ "./styles/main.scss");
/* harmony import */ var jspsych__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! jspsych */ "./node_modules/jspsych/dist/index.js");
/* harmony import */ var _jspsych_plugin_fullscreen__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @jspsych/plugin-fullscreen */ "./node_modules/@jspsych/plugin-fullscreen/dist/index.js");
/* harmony import */ var _jspsych_plugin_html_keyboard_response__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @jspsych/plugin-html-keyboard-response */ "./node_modules/@jspsych/plugin-html-keyboard-response/dist/index.js");
/* harmony import */ var _jspsych_plugin_html_button_response__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @jspsych/plugin-html-button-response */ "./node_modules/@jspsych/plugin-html-button-response/dist/index.js");
/* harmony import */ var _jspsych_plugin_preload__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @jspsych/plugin-preload */ "./node_modules/@jspsych/plugin-preload/dist/index.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./utils.js */ "./src/utils.js");
/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_utils_js__WEBPACK_IMPORTED_MODULE_6__);
function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }

/**
 * @title deadline-cse
 * @description Investigating the effect of reaction time deadline on CSE.
 * @version 0.1.0
 *
 * The following lines specify which media directories will be packaged and preloaded by jsPsych.
 * Modify them to arbitrary paths (or comma-separated lists of paths) within the `media` directory,
 * or just delete them.
 * @imageDir images
 * @audioDir audio
 * @videoDir video
 * @miscDir misc
 */
// You can import stylesheets (.scss or .css).







/**
 * This method will be executed by jsPsych Builder and is expected to run the jsPsych experiment
 *
 * @param {object} options Options provided by jsPsych Builder
 * @param {any} [options.input] A custom object that can be specified via the JATOS web interface ("JSON study input").
 * @param {"development"|"production"|"jatos"} options.environment The context in which the experiment is run: `development` for `jspsych run`, `production` for `jspsych build`, and "jatos" if served by JATOS
 * @param {{images: string[]; audio: string[]; video: string[];, misc: string[];}} options.assetPaths An object with lists of file paths for the respective `@...Dir` pragmas
 */

function run(_x) {
  return _run.apply(this, arguments);
}

function _run() {
  _run = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee(_ref) {
    var assetPaths, _ref$input, input, environment, jsPsych, timeline, testTrials, informedScreen, consentScreen, instructionsScreen, keyResponseMapping, startPracticeScreen;

    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            assetPaths = _ref.assetPaths, _ref$input = _ref.input, input = _ref$input === void 0 ? {} : _ref$input, environment = _ref.environment;
            jsPsych = (0,jspsych__WEBPACK_IMPORTED_MODULE_1__.initJsPsych)();
            timeline = []; // Create pseudo random trials

            testTrials = (0,_utils_js__WEBPACK_IMPORTED_MODULE_6__.getRandomTrials)(80, true);
            console.log(testTrials); // Switch to fullscreen

            timeline.push({
              type: _jspsych_plugin_fullscreen__WEBPACK_IMPORTED_MODULE_2__["default"],
              fullscreen_mode: true
            }); // Preload assets

            timeline.push({
              type: _jspsych_plugin_preload__WEBPACK_IMPORTED_MODULE_5__["default"],
              images: assetPaths.images,
              audio: assetPaths.audio,
              video: assetPaths.video
            }); // Welcome screen

            timeline.push({
              type: _jspsych_plugin_html_keyboard_response__WEBPACK_IMPORTED_MODULE_3__["default"],
              stimulus: "<p>Welcome to deadline-cse!<p/>"
            }); // Informed

            informedScreen = {
              type: _jspsych_plugin_html_button_response__WEBPACK_IMPORTED_MODULE_4__["default"],
              stimulus: "<div> \n    <h1>T\xE1j\xE9koztat\xF3 nyilatkozat</h1> \n    <p>\n      Egy tudom\xE1nyos kutat\xE1sban veszel r\xE9szt, amelynek t\xE9mavezet\u0151je Dr. Acz\xE9l Bal\xE1zs,\n      az ELTE Affekt\xEDv Pszichol\xF3gia Tansz\xE9k\xE9nek kutat\xF3ja. A kutat\xE1s c\xE9lja megvizsg\xE1lni\n      a korl\xE1tozott v\xE1laszad\xE1si id\u0151 hat\xE1s\xE1t a konfliktusadapt\xE1ci\xF3ra.\n    </p>\n    <p>\n      Az ELTE PPK Affekt\xEDv Pszichol\xF3gia Tansz\xE9k Metatudom\xE1ny Kutat\xF3csoportja mint\n      adatkezel\u0151 szigor\xFAan bizalmasan kezel minden olyan szem\xE9lyes inform\xE1ci\xF3t,\n      amit a kutat\xE1s keretein bel\xFCl gy\u0171jt\xFCnk \xF6ssze. Ezeket k\xF3ddal ell\xE1tva, \n      biztons\xE1gos sz\xE1m\xEDt\xF3g\xE9peken t\xE1roljuk. A kezelt adatok a k\xF6vetkez\u0151k:\n      NEPTUN-k\xF3d, \xE9letkor, nem, iskolai v\xE9gzetts\xE9g. Az azonos\xEDt\xE1s\xE1ra alkalmas\n      adatokat (NEPTUN-k\xF3d) arra haszn\xE1ljuk fel, hogy regisztr\xE1lhassuk a\n      kutat\xE1sban val\xF3 r\xE9szv\xE9tel\xE9rt j\xE1r\xF3 kurzuspontokat, ezut\xE1n t\xF6r\xF6lni fogjuk \u0151ket. \n      V\xE1laszaid semmilyen m\xF3don nem lesznek hozz\xE1d k\xF6thet\u0151k. Szem\xE9lyes adataidat\n      m\xE1s adatkezel\u0151nek, adatfeldolgoz\xF3nak nem adjuk \xE1t, \xE1m az anonimiz\xE1lt\n      (szem\xE9lyes azonos\xEDt\xE1sra nem alkalmas) adataid m\xE1s kutat\xF3kkal megosztjuk.\n      E t\xE9ny\xE1ll\xE1s r\xE9szleteit a \u201EHozz\xE1j\xE1rul\xE1s adatkezel\xE9shez\u201D c. dokumentum \n      tartalmazza <a target=\"_blank\" href=\"http://decisionlab.elte.hu/hozzajarulas-adatkezeleshez/\">ITT</a>.\n      Az adatkezel\xE9sr\u0151l sz\xF3l\xF3 szab\xE1lyoz\xE1sr\xF3l r\xE9szletesebben pedig\n      <a target=\"_blank\" href=\"https://ppk.elte.hu/file/Hozzajarulas_adatkezeleshez_melleklet_2018.pdf.\">ITT</a> t\xE1j\xE9koz\xF3dhatsz.\n    </p>\n    <p>\n      A kutat\xE1sban val\xF3 r\xE9szv\xE9tel teljesen \xF6nk\xE9ntes. A vizsg\xE1latot b\xE1rmikor\n      indokl\xE1s n\xE9lk\xFCl megszak\xEDthatod, vagy a k\xE9rd\xE9sek megv\xE1laszol\xE1s\xE1t megtagadhatod\n      a b\xF6ng\xE9sz\u0151ablak bez\xE1r\xE1s\xE1val. Ha b\xE1rmilyen k\xE9rd\xE9sed, agg\xE1lyod vagy panaszod van\n      a k\xEDs\xE9rlettel kapcsolatban, k\xE9rlek, keresd Sz\xE9kely Zsuzs\xE1t (szekely.zsuzsa.mail@gmail.com)!\n      <p>A \u201EHozz\xE1j\xE1rul\xE1s az adatkezel\xE9shez\u201D c. dokumentumot elolvastam \xE9s a benne foglaltakat elfogadom.</p>\n    </p>\n  </div>",
              // canvas_size: [300, 300],
              choices: ['Részt veszek', 'Nem veszek részt'],
              prompt: '<p>A továbblépéshez kérem kattintson a Részt veszek gombra.</p>'
            };
            timeline.push(informedScreen);
            consentScreen = {
              type: _jspsych_plugin_html_button_response__WEBPACK_IMPORTED_MODULE_4__["default"],
              stimulus: "<div>\n        <h1>Beleegyez\u0151 nyilatkozat</h1>\n        <p>\n    Felel\u0151ss\xE9gem teljes tudat\xE1ban kijelentem, hogy a mai napon az E\xF6tv\xF6s Lor\xE1nd\n    Tudom\xE1nyegyetem, Dr. Acz\xE9l Bal\xE1zs kutat\xE1svezet\u0151 \xE1ltal v\xE9gzett vizsg\xE1latban\n    \xF6nk\xE9nt veszek r\xE9szt. A vizsg\xE1lat jelleg\xE9r\u0151l annak megkezd\xE9se el\u0151tt kiel\xE9g\xEDt\u0151\n    t\xE1j\xE9koztat\xE1st kaptam. Elm\xFAltam 18 \xE9ves. Nem szenvedek semmilyen pszichi\xE1triai\n    betegs\xE9gben. A vizsg\xE1lat idej\xE9n alkohol vagy drogok hat\xE1sa alatt nem \xE1llok.\n    Tudom\xE1sul veszem, hogy az azonos\xEDt\xE1somra alkalmas szem\xE9lyi adataimat bizalmasan\n    kezelik. Hozz\xE1j\xE1rulok ahhoz, hogy a vizsg\xE1lat sor\xE1n a r\xF3lam felvett, szem\xE9lyem\n    azonos\xEDt\xE1s\xE1ra nem alkalmas adatok m\xE1s kutat\xF3k sz\xE1m\xE1ra is hozz\xE1f\xE9rhet\u0151k legyenek.\n    Fenntartom a jogot arra, hogy a vizsg\xE1lat sor\xE1n annak folytat\xE1s\xE1t\xF3l b\xE1rmikor\n    el\xE1llhassak. Ilyen esetben a r\xF3lam addig felvett adatokat t\xF6r\xF6lni kell.\n    Tudom\xE1sul veszem, hogy csak a teljesen befejezett kit\xF6lt\xE9s\xE9rt kapok pontot a\n    Pszichol\xF3giai k\xEDs\xE9rletben \xE9s tudom\xE1nyos aktivit\xE1sban val\xF3 r\xE9szv\xE9tel c\xEDm\u0171\n    kurzuson.\n  </p>\n  <br>\n  <h3>A kutat\xE1sban val\xF3 r\xE9szv\xE9tel k\xF6r\xFClm\xE9nyeir\u0151l r\xE9szletes t\xE1j\xE9koztat\xE1st kaptam, a felt\xE9telekkel egyet\xE9rtek.</h3>\n  </div>\n  ",
              choices: ['Részt veszek', 'Nem veszek részt'],
              prompt: '<p>A továbblépéshez kérem kattintson a Részt veszek gombra.</p>'
            };
            timeline.push(consentScreen); // Create instructions

            instructionsScreen = {
              type: _jspsych_plugin_html_keyboard_response__WEBPACK_IMPORTED_MODULE_3__["default"],
              stimulus: "\n  <div>\n  <h1>Instrukci\xF3k</h1>\n  <p>\n    Ebben a k\xEDs\xE9rletben arra vagyunk k\xEDv\xE1ncsiak, hogy az emberek hogyan oldanak\n    fel vizu\xE1lis ingerek feldolgoz\xE1sa k\xF6zben l\xE9trej\xF6v\u0151 konfliktusokat.\n    A k\xEDs\xE9rlet alatt k\xFCl\xF6nb\xF6z\u0151 sz\xEDn\u0171 bet\u0171kkel \xEDrt sz\xEDnek nevei fognak felvillanni a k\xE9perny\u0151n,\n    ezekre itt l\xE1thatsz 2 p\xE9ld\xE1t:\n  </p>\n  <br>\n  <div style=\"display: inline-block;\">\n    <h1 style=\"color:red;\">PIROS</h1>\n    <h1 style=\"color: yellow;\">K\xC9K</h1>\n  </div>\n  <p>\n    A feladatod az lesz, hogy meghat\xE1rozd, milyen sz\xEDnnel van \xEDrva a sz\xF3,\n    mik\xF6zben a sz\xF3 jelent\xE9s\xE9t figyelmen k\xEDv\xFCl hagyod. Teh\xE1t a fenti 2 p\xE9ld\xE1ra\n    a helyes v\xE1laszok a piros \xE9s a s\xE1rga. Mindegyik sz\xEDn n\xE9gy v\xE1laszbillenty\u0171 (x; c; n; m)\n    valamelyik\xE9hez lesz hozz\xE1rendelve. Azt, hogy melyik sz\xEDn melyik v\xE1laszbillenty\u0171h\xF6z tartozik,\n    k\xE9s\u0151bb, a gyakorl\xF3 r\xE9sz alatt lesz alkalmad megtanulni. K\xE9r\xFCnk, hogy olyan gyorsan v\xE1laszolj,\n    amennyire ez lehets\xE9ges hib\xE1z\xE1s n\xE9lk\xFCl!\n  </p>\n  <p>\n    A gyakorl\xE1st k\xF6vet\u0151en a k\xEDs\xE9rlet 4 szakaszb\xF3l fog \xE1llni, ezek mindegyike 2 r\xE9szre ('A' \xE9s 'B') oszlik.\n    A 4 szakasz egyenk\xE9nt kb. 8 percet vesz ig\xE9nybe, k\xF6z\xF6tt\xFCk r\xF6vid sz\xFCnetet tarthatsz.\n  </p>\n  <p>\n    K\xE9r\xFCnk, hogy a feladatot sz\xE1m\xEDt\xF3g\xE9pen v\xE9gezd el (ne telefonon, tableten stb.)!  A k\xEDs\xE9rlet csak Mozilla Firefox\n    \xE9s Safari b\xF6ng\xE9sz\u0151kben m\u0171k\xF6dik megfelel\u0151en, ez\xE9rt k\xE9r\xFCnk, hogy ezek valamelyik\xE9ben v\xE9gezd el, egy \xFAj b\xF6ng\xE9sz\u0151ablakban!\n    Nagyon fontos, hogy a k\xEDs\xE9rlet sor\xE1n v\xE9gig tudj \xF6sszpontos\xEDtani, ez\xE9rt k\xE9r\xFCnk, hogy ne csin\xE1lj semmi m\xE1st,\n    mik\xF6zben a feladatot csin\xE1lod! Vedd figyelembe, hogy ha a megold\xE1sod pontoss\xE1ga 70%-n\xE1l alacsonyabb\n    lesz, ami egy \xE9sszer\u0171 hat\xE1r az el\u0151z\u0151 kutat\xE1sok f\xE9ny\xE9ben, akkor nem kapsz pontot a kit\xF6lt\xE9s\xE9rt.\n    Ha 70% feletti pontoss\xE1ggal oldod meg a feladatot, valamint, ha elv\xE9gzed a feladat m\xE1sik verzi\xF3j\xE1t is,\n    akkor 1.5 pontot kapsz a \u201EPszichol\xF3giai k\xEDs\xE9rletben \xE9s tudom\xE1nyos aktivit\xE1sban val\xF3 r\xE9szv\xE9tel\u201D nev\u0171 kurzuson.\n    Ehhez ne felejtsd el megadni a Neptun-k\xF3dod a k\xEDs\xE9rlet v\xE9g\xE9n!\n  </p>\n  Nyomd meg a Space billenty\u0171t a folytat\xE1shoz!\n  </div>\n  ",
              choices: [" "]
            };
            timeline.push(instructionsScreen); // Table for key-response mapping

            keyResponseMapping = "\n<table>\n<tr>\n  <th>UJJ</th>\n  <th>V\xC1LASZGOMB</th>\n  <th>INGER</th>\n</tr>\n<tr>\n  <td>bal k\xF6z\xE9ps\u0151</td>\n  <td>x</td>\n  <td>piros</td>\n</tr>\n<tr>\n  <td>bal mutat\xF3</td>\n  <td>c</td>\n  <td>z\xF6ld</td>\n</tr>\n<tr>\n  <td>jobb mutat\xF3</td>\n  <td>n</td>\n  <td>k\xE9k</td>\n</tr>\n<tr>\n  <td>jobb k\xF6z\xE9ps\u0151</td>\n  <td>m</td>\n  <td>s\xE1rga</td>\n</tr>\n</table>\n"; // Start of practice page

            startPracticeScreen = {
              type: _jspsych_plugin_html_keyboard_response__WEBPACK_IMPORTED_MODULE_3__["default"],
              stimulus: "\n  <div>\n  <h2>Gyakorl\xE1s</2>\n  <p>\n    Az al\xE1bbi t\xE1bl\xE1zatban l\xE1thatod, hogy melyik bet\u0171sz\xEDnhez melyik gomb tartozik,\n    illetve, hogy melyik gombot melyik ujjaddal kell megnyomnod.\n    A feladatod teh\xE1t, hogy ezek alapj\xE1n reag\xE1lj a felvillan\xF3 szavak bet\u0171sz\xEDn\xE9re.\n    Minden sz\xF3 megjelen\xE9se el\u0151tt egy '+' jelet fogsz l\xE1tni, ez jelzi, hogy a k\xF6vetkez\u0151 sz\xF3ra kell k\xE9sz\xFCln\xF6d.\n  </p>\n  <p>A gyakorl\xE1s megkezd\xE9s\xE9hez helyezd az ujjaid a megfelel\u0151 gombokra \xE9s nyomd meg a Space billenty\u0171t!</p>\n  ".concat(keyResponseMapping, "\n  </div>\n  "),
              choices: [" "]
            };
            timeline.push(startPracticeScreen); // // Define a template for a test stroop trial
            // var trial = {
            //   type: jsPsychHtmlKeyboardResponse,
            // }
            // var trial = {
            //   type: jsPsychHtmlKeyboardResponse,
            //   stimulus: '<p style="font-size:36px; color:green;">BLUE</p>',
            //   choices: ['x', 'c', 'n', 'm'],
            //   prompt: "<p>Is the ink color (r)ed, (g)reen, or (b)lue?</p>"
            // };

            _context.next = 19;
            return jsPsych.run(timeline);

          case 19:
            return _context.abrupt("return", jsPsych);

          case 20:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  }));
  return _run.apply(this, arguments);
}

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/***/ (function() {

// Calculate range
function range(stop) {
  var result = [];

  for (var i = 0; i < stop; i += 1) {
    result.push(i);
  }

  return result;
} // Shuffle the content of an array


function shuffleArray(array) {
  for (var i = array.length - 1; i > 0; i--) {
    // Generate random number
    var j = Math.floor(Math.random() * (i + 1));
    var temp = array[i];
    array[i] = array[j];
    array[j] = temp;
  }

  return array;
} // calculate the average of an array


var average = function average(arr) {
  return arr.reduce(function (a, b) {
    return a + b;
  }, 0) / arr.length;
}; // Create pseudo-random trial orders ----------------------------------------------------------
// For the test trials


function getRandomTrials(numberOfTrials, addFirstTrial) {
  var redBlock = [[["ZÖLD", "green", "con", "c"], ["PIROS", "red", "con", "x"]], [["PIROS", "green", "inc", "c"], ["ZÖLD", "red", "inc", "x"]]];
  var blueBlock = [[["KÉK", "blue", "con", "n"], ["SÁRGA", "yellow", "con", "m"]], [["KÉK", "yellow", "inc", "m"], ["SÁRGA", "blue", "inc", "n"]]];
  var repetition = numberOfTrials / 8;
  var listOne = [];

  for (i in range(repetition)) {
    for (j in range(redBlock.length)) {
      for (k in range(redBlock[j].length)) {
        listOne.push(redBlock[j][k]);
      }
    }
  }

  listOne = shuffleArray(listOne);
  var listTwo = [];

  for (i in range(repetition)) {
    for (j in range(blueBlock.length)) {
      for (k in range(blueBlock[j].length)) {
        listTwo.push(blueBlock[j][k]);
      }
    }
  }

  listTwo = shuffleArray(listTwo);
  var trialList = [];

  for (i in range(listOne.length)) {
    trialList.push(listOne[i]);
    trialList.push(listTwo[i]);
  }

  var loopData = [];
  trialList.forEach(function (element) {
    loopData.push({
      word: element[0],
      color: element[1],
      congruency: element[2],
      correctResponse: element[3]
    });
  }); // Add one random in the beginning as the first trial

  if (addFirstTrial) {
    var firstTrial = blueBlock[Math.floor(Math.random() * 2)][Math.floor(Math.random() * 2)];
    loopData.unshift({
      word: firstTrial[0],
      color: firstTrial[1],
      congruency: firstTrial[2],
      correctResponse: firstTrial[3]
    });
  }

  return loopData;
}

/***/ }),

/***/ "./node_modules/@jspsych/plugin-fullscreen/dist/index.js":
/*!***************************************************************!*\
  !*** ./node_modules/@jspsych/plugin-fullscreen/dist/index.js ***!
  \***************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ FullscreenPlugin; }
/* harmony export */ });
/* harmony import */ var jspsych__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspsych */ "./node_modules/jspsych/dist/index.js");


const info = {
    name: "fullscreen",
    parameters: {
        /** If true, experiment will enter fullscreen mode. If false, the browser will exit fullscreen mode. */
        fullscreen_mode: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Fullscreen mode",
            default: true,
            array: false,
        },
        /** HTML content to display above the button to enter fullscreen mode */
        message: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Message",
            default: "<p>The experiment will switch to full screen mode when you press the button below</p>",
            array: false,
        },
        /** The text that appears on the button to enter fullscreen */
        button_label: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Button label",
            default: "Continue",
            array: false,
        },
        /** The length of time to delay after entering fullscreen mode before ending the trial. */
        delay_after: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.INT,
            pretty_name: "Delay after",
            default: 1000,
            array: false,
        },
    },
};
/**
 * **fullscreen**
 *
 * jsPsych plugin for toggling fullscreen mode in the browser
 *
 * @author Josh de Leeuw
 * @see {@link https://www.jspsych.org/plugins/jspsych-fullscreen/ fullscreen plugin documentation on jspsych.org}
 */
class FullscreenPlugin {
    constructor(jsPsych) {
        this.jsPsych = jsPsych;
    }
    trial(display_element, trial) {
        // check if keys are allowed in fullscreen mode
        var keyboardNotAllowed = typeof Element !== "undefined" && "ALLOW_KEYBOARD_INPUT" in Element;
        if (keyboardNotAllowed) {
            // This is Safari, and keyboard events will be disabled. Don't allow fullscreen here.
            // do something else?
            this.endTrial(display_element, false, trial);
        }
        else {
            if (trial.fullscreen_mode) {
                this.showDisplay(display_element, trial);
            }
            else {
                this.exitFullScreen();
                this.endTrial(display_element, true, trial);
            }
        }
    }
    showDisplay(display_element, trial) {
        display_element.innerHTML = `
      ${trial.message}
      <button id="jspsych-fullscreen-btn" class="jspsych-btn">${trial.button_label}</button>
    `;
        display_element.querySelector("#jspsych-fullscreen-btn").addEventListener("click", () => {
            this.enterFullScreen();
            this.endTrial(display_element, true, trial);
        });
    }
    endTrial(display_element, success, trial) {
        display_element.innerHTML = "";
        this.jsPsych.pluginAPI.setTimeout(() => {
            var trial_data = {
                success: success,
            };
            this.jsPsych.finishTrial(trial_data);
        }, trial.delay_after);
    }
    enterFullScreen() {
        var element = document.documentElement;
        if (element.requestFullscreen) {
            element.requestFullscreen();
        }
        else if (element["mozRequestFullScreen"]) {
            element["mozRequestFullScreen"]();
        }
        else if (element["webkitRequestFullscreen"]) {
            element["webkitRequestFullscreen"]();
        }
        else if (element["msRequestFullscreen"]) {
            element["msRequestFullscreen"]();
        }
    }
    exitFullScreen() {
        if (document.fullscreenElement ||
            document["mozFullScreenElement"] ||
            document["webkitFullscreenElement"]) {
            if (document.exitFullscreen) {
                document.exitFullscreen();
            }
            else if (document["msExitFullscreen"]) {
                document["msExitFullscreen"]();
            }
            else if (document["mozCancelFullScreen"]) {
                document["mozCancelFullScreen"]();
            }
            else if (document["webkitExitFullscreen"]) {
                document["webkitExitFullscreen"]();
            }
        }
    }
    simulate(trial, simulation_mode, simulation_options, load_callback) {
        if (simulation_mode == "data-only") {
            load_callback();
            this.simulate_data_only(trial, simulation_options);
        }
        if (simulation_mode == "visual") {
            this.simulate_visual(trial, simulation_options, load_callback);
        }
    }
    create_simulation_data(trial, simulation_options) {
        const default_data = {
            success: true,
        };
        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);
        return data;
    }
    simulate_data_only(trial, simulation_options) {
        const data = this.create_simulation_data(trial, simulation_options);
        this.jsPsych.finishTrial(data);
    }
    simulate_visual(trial, simulation_options, load_callback) {
        const data = this.create_simulation_data(trial, simulation_options);
        const display_element = this.jsPsych.getDisplayElement();
        if (data.success === false) {
            this.endTrial(display_element, false, trial);
        }
        else {
            this.trial(display_element, trial);
            load_callback();
            this.jsPsych.pluginAPI.clickTarget(display_element.querySelector("#jspsych-fullscreen-btn"), this.jsPsych.randomization.sampleExGaussian(1000, 100, 1 / 200, true));
        }
    }
}
FullscreenPlugin.info = info;


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@jspsych/plugin-html-button-response/dist/index.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@jspsych/plugin-html-button-response/dist/index.js ***!
  \*************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ HtmlButtonResponsePlugin; }
/* harmony export */ });
/* harmony import */ var jspsych__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspsych */ "./node_modules/jspsych/dist/index.js");


const info = {
    name: "html-button-response",
    parameters: {
        /** The HTML string to be displayed */
        stimulus: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Stimulus",
            default: undefined,
        },
        /** Array containing the label(s) for the button(s). */
        choices: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Choices",
            default: undefined,
            array: true,
        },
        /** The HTML for creating button. Can create own style. Use the "%choice%" string to indicate where the label from the choices parameter should be inserted. */
        button_html: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Button HTML",
            default: '<button class="jspsych-btn">%choice%</button>',
            array: true,
        },
        /** Any content here will be displayed under the button(s). */
        prompt: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Prompt",
            default: null,
        },
        /** How long to show the stimulus. */
        stimulus_duration: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.INT,
            pretty_name: "Stimulus duration",
            default: null,
        },
        /** How long to show the trial. */
        trial_duration: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.INT,
            pretty_name: "Trial duration",
            default: null,
        },
        /** The vertical margin of the button. */
        margin_vertical: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Margin vertical",
            default: "0px",
        },
        /** The horizontal margin of the button. */
        margin_horizontal: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Margin horizontal",
            default: "8px",
        },
        /** If true, then trial will end when user responds. */
        response_ends_trial: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Response ends trial",
            default: true,
        },
    },
};
/**
 * html-button-response
 * jsPsych plugin for displaying a stimulus and getting a button response
 * @author Josh de Leeuw
 * @see {@link https://www.jspsych.org/plugins/jspsych-html-button-response/ html-button-response plugin documentation on jspsych.org}
 */
class HtmlButtonResponsePlugin {
    constructor(jsPsych) {
        this.jsPsych = jsPsych;
    }
    trial(display_element, trial) {
        // display stimulus
        var html = '<div id="jspsych-html-button-response-stimulus">' + trial.stimulus + "</div>";
        //display buttons
        var buttons = [];
        if (Array.isArray(trial.button_html)) {
            if (trial.button_html.length == trial.choices.length) {
                buttons = trial.button_html;
            }
            else {
                console.error("Error in html-button-response plugin. The length of the button_html array does not equal the length of the choices array");
            }
        }
        else {
            for (var i = 0; i < trial.choices.length; i++) {
                buttons.push(trial.button_html);
            }
        }
        html += '<div id="jspsych-html-button-response-btngroup">';
        for (var i = 0; i < trial.choices.length; i++) {
            var str = buttons[i].replace(/%choice%/g, trial.choices[i]);
            html +=
                '<div class="jspsych-html-button-response-button" style="display: inline-block; margin:' +
                    trial.margin_vertical +
                    " " +
                    trial.margin_horizontal +
                    '" id="jspsych-html-button-response-button-' +
                    i +
                    '" data-choice="' +
                    i +
                    '">' +
                    str +
                    "</div>";
        }
        html += "</div>";
        //show prompt if there is one
        if (trial.prompt !== null) {
            html += trial.prompt;
        }
        display_element.innerHTML = html;
        // start time
        var start_time = performance.now();
        // add event listeners to buttons
        for (var i = 0; i < trial.choices.length; i++) {
            display_element
                .querySelector("#jspsych-html-button-response-button-" + i)
                .addEventListener("click", (e) => {
                var btn_el = e.currentTarget;
                var choice = btn_el.getAttribute("data-choice"); // don't use dataset for jsdom compatibility
                after_response(choice);
            });
        }
        // store response
        var response = {
            rt: null,
            button: null,
        };
        // function to end trial when it is time
        const end_trial = () => {
            // kill any remaining setTimeout handlers
            this.jsPsych.pluginAPI.clearAllTimeouts();
            // gather the data to store for the trial
            var trial_data = {
                rt: response.rt,
                stimulus: trial.stimulus,
                response: response.button,
            };
            // clear the display
            display_element.innerHTML = "";
            // move on to the next trial
            this.jsPsych.finishTrial(trial_data);
        };
        // function to handle responses by the subject
        function after_response(choice) {
            // measure rt
            var end_time = performance.now();
            var rt = Math.round(end_time - start_time);
            response.button = parseInt(choice);
            response.rt = rt;
            // after a valid response, the stimulus will have the CSS class 'responded'
            // which can be used to provide visual feedback that a response was recorded
            display_element.querySelector("#jspsych-html-button-response-stimulus").className +=
                " responded";
            // disable all the buttons after a response
            var btns = document.querySelectorAll(".jspsych-html-button-response-button button");
            for (var i = 0; i < btns.length; i++) {
                //btns[i].removeEventListener('click');
                btns[i].setAttribute("disabled", "disabled");
            }
            if (trial.response_ends_trial) {
                end_trial();
            }
        }
        // hide image if timing is set
        if (trial.stimulus_duration !== null) {
            this.jsPsych.pluginAPI.setTimeout(() => {
                display_element.querySelector("#jspsych-html-button-response-stimulus").style.visibility = "hidden";
            }, trial.stimulus_duration);
        }
        // end trial if time limit is set
        if (trial.trial_duration !== null) {
            this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);
        }
    }
    simulate(trial, simulation_mode, simulation_options, load_callback) {
        if (simulation_mode == "data-only") {
            load_callback();
            this.simulate_data_only(trial, simulation_options);
        }
        if (simulation_mode == "visual") {
            this.simulate_visual(trial, simulation_options, load_callback);
        }
    }
    create_simulation_data(trial, simulation_options) {
        const default_data = {
            stimulus: trial.stimulus,
            rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),
            response: this.jsPsych.randomization.randomInt(0, trial.choices.length - 1),
        };
        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);
        this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);
        return data;
    }
    simulate_data_only(trial, simulation_options) {
        const data = this.create_simulation_data(trial, simulation_options);
        this.jsPsych.finishTrial(data);
    }
    simulate_visual(trial, simulation_options, load_callback) {
        const data = this.create_simulation_data(trial, simulation_options);
        const display_element = this.jsPsych.getDisplayElement();
        this.trial(display_element, trial);
        load_callback();
        if (data.rt !== null) {
            this.jsPsych.pluginAPI.clickTarget(display_element.querySelector(`div[data-choice="${data.response}"] button`), data.rt);
        }
    }
}
HtmlButtonResponsePlugin.info = info;


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@jspsych/plugin-html-keyboard-response/dist/index.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@jspsych/plugin-html-keyboard-response/dist/index.js ***!
  \***************************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ HtmlKeyboardResponsePlugin; }
/* harmony export */ });
/* harmony import */ var jspsych__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspsych */ "./node_modules/jspsych/dist/index.js");


const info = {
    name: "html-keyboard-response",
    parameters: {
        /**
         * The HTML string to be displayed.
         */
        stimulus: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Stimulus",
            default: undefined,
        },
        /**
         * Array containing the key(s) the subject is allowed to press to respond to the stimulus.
         */
        choices: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.KEYS,
            pretty_name: "Choices",
            default: "ALL_KEYS",
        },
        /**
         * Any content here will be displayed below the stimulus.
         */
        prompt: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Prompt",
            default: null,
        },
        /**
         * How long to show the stimulus.
         */
        stimulus_duration: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.INT,
            pretty_name: "Stimulus duration",
            default: null,
        },
        /**
         * How long to show trial before it ends.
         */
        trial_duration: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.INT,
            pretty_name: "Trial duration",
            default: null,
        },
        /**
         * If true, trial will end when subject makes a response.
         */
        response_ends_trial: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Response ends trial",
            default: true,
        },
    },
};
/**
 * **html-keyboard-response**
 *
 * jsPsych plugin for displaying a stimulus and getting a keyboard response
 *
 * @author Josh de Leeuw
 * @see {@link https://www.jspsych.org/plugins/jspsych-html-keyboard-response/ html-keyboard-response plugin documentation on jspsych.org}
 */
class HtmlKeyboardResponsePlugin {
    constructor(jsPsych) {
        this.jsPsych = jsPsych;
    }
    trial(display_element, trial) {
        var new_html = '<div id="jspsych-html-keyboard-response-stimulus">' + trial.stimulus + "</div>";
        // add prompt
        if (trial.prompt !== null) {
            new_html += trial.prompt;
        }
        // draw
        display_element.innerHTML = new_html;
        // store response
        var response = {
            rt: null,
            key: null,
        };
        // function to end trial when it is time
        const end_trial = () => {
            // kill any remaining setTimeout handlers
            this.jsPsych.pluginAPI.clearAllTimeouts();
            // kill keyboard listeners
            if (typeof keyboardListener !== "undefined") {
                this.jsPsych.pluginAPI.cancelKeyboardResponse(keyboardListener);
            }
            // gather the data to store for the trial
            var trial_data = {
                rt: response.rt,
                stimulus: trial.stimulus,
                response: response.key,
            };
            // clear the display
            display_element.innerHTML = "";
            // move on to the next trial
            this.jsPsych.finishTrial(trial_data);
        };
        // function to handle responses by the subject
        var after_response = (info) => {
            // after a valid response, the stimulus will have the CSS class 'responded'
            // which can be used to provide visual feedback that a response was recorded
            display_element.querySelector("#jspsych-html-keyboard-response-stimulus").className +=
                " responded";
            // only record the first response
            if (response.key == null) {
                response = info;
            }
            if (trial.response_ends_trial) {
                end_trial();
            }
        };
        // start the response listener
        if (trial.choices != "NO_KEYS") {
            var keyboardListener = this.jsPsych.pluginAPI.getKeyboardResponse({
                callback_function: after_response,
                valid_responses: trial.choices,
                rt_method: "performance",
                persist: false,
                allow_held_key: false,
            });
        }
        // hide stimulus if stimulus_duration is set
        if (trial.stimulus_duration !== null) {
            this.jsPsych.pluginAPI.setTimeout(() => {
                display_element.querySelector("#jspsych-html-keyboard-response-stimulus").style.visibility = "hidden";
            }, trial.stimulus_duration);
        }
        // end trial if trial_duration is set
        if (trial.trial_duration !== null) {
            this.jsPsych.pluginAPI.setTimeout(end_trial, trial.trial_duration);
        }
    }
    simulate(trial, simulation_mode, simulation_options, load_callback) {
        if (simulation_mode == "data-only") {
            load_callback();
            this.simulate_data_only(trial, simulation_options);
        }
        if (simulation_mode == "visual") {
            this.simulate_visual(trial, simulation_options, load_callback);
        }
    }
    create_simulation_data(trial, simulation_options) {
        const default_data = {
            stimulus: trial.stimulus,
            rt: this.jsPsych.randomization.sampleExGaussian(500, 50, 1 / 150, true),
            response: this.jsPsych.pluginAPI.getValidKey(trial.choices),
        };
        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);
        this.jsPsych.pluginAPI.ensureSimulationDataConsistency(trial, data);
        return data;
    }
    simulate_data_only(trial, simulation_options) {
        const data = this.create_simulation_data(trial, simulation_options);
        this.jsPsych.finishTrial(data);
    }
    simulate_visual(trial, simulation_options, load_callback) {
        const data = this.create_simulation_data(trial, simulation_options);
        const display_element = this.jsPsych.getDisplayElement();
        this.trial(display_element, trial);
        load_callback();
        if (data.rt !== null) {
            this.jsPsych.pluginAPI.pressKey(data.response, data.rt);
        }
    }
}
HtmlKeyboardResponsePlugin.info = info;


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/@jspsych/plugin-preload/dist/index.js":
/*!************************************************************!*\
  !*** ./node_modules/@jspsych/plugin-preload/dist/index.js ***!
  \************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": function() { return /* binding */ PreloadPlugin; }
/* harmony export */ });
/* harmony import */ var jspsych__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jspsych */ "./node_modules/jspsych/dist/index.js");


const info = {
    name: "preload",
    parameters: {
        /** Whether or not to automatically preload any media files based on the timeline passed to jsPsych.run. */
        auto_preload: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Auto-preload",
            default: false,
        },
        /** A timeline of trials to automatically preload. If one or more trial objects is provided in the timeline array, then the plugin will attempt to preload the media files used in the trial(s). */
        trials: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.TIMELINE,
            pretty_name: "Trials",
            default: [],
        },
        /**
         * Array with one or more image files to load. This parameter is often used in cases where media files cannot#
         * be automatically preloaded based on the timeline, e.g. because the media files are passed into an image plugin/parameter with
         * timeline variables or dynamic parameters, or because the image is embedded in an HTML string.
         */
        images: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Images",
            default: [],
            array: true,
        },
        /**
         * Array with one or more audio files to load. This parameter is often used in cases where media files cannot
         * be automatically preloaded based on the timeline, e.g. because the media files are passed into an audio plugin/parameter with
         * timeline variables or dynamic parameters, or because the audio is embedded in an HTML string.
         */
        audio: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Audio",
            default: [],
            array: true,
        },
        /**
         * Array with one or more video files to load. This parameter is often used in cases where media files cannot
         * be automatically preloaded based on the timeline, e.g. because the media files are passed into a video plugin/parameter with
         * timeline variables or dynamic parameters, or because the video is embedded in an HTML string.
         */
        video: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.STRING,
            pretty_name: "Video",
            default: [],
            array: true,
        },
        /** HTML-formatted message to be shown above the progress bar while the files are loading. */
        message: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Message",
            default: null,
        },
        /** Whether or not to show the loading progress bar. */
        show_progress_bar: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Show progress bar",
            default: true,
        },
        /**
         * Whether or not to continue with the experiment if a loading error occurs. If false, then if a loading error occurs,
         * the error_message will be shown on the page and the trial will not end. If true, then if if a loading error occurs, the trial will end
         * and preloading failure will be logged in the trial data.
         */
        continue_after_error: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Continue after error",
            default: false,
        },
        /** Error message to show on the page in case of any loading errors. This parameter is only relevant when continue_after_error is false. */
        error_message: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.HTML_STRING,
            pretty_name: "Error message",
            default: "The experiment failed to load.",
        },
        /**
         * Whether or not to show a detailed error message on the page. If true, then detailed error messages will be shown on the
         * page for all files that failed to load, along with the general error_message. This parameter is only relevant when continue_after_error is false.
         */
        show_detailed_errors: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.BOOL,
            pretty_name: "Show detailed errors",
            default: false,
        },
        /**
         * The maximum amount of time that the plugin should wait before stopping the preload and either ending the trial
         * (if continue_after_error is true) or stopping the experiment with an error message (if continue_after_error is false).
         * If null, the plugin will wait indefintely for the files to load.
         */
        max_load_time: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.INT,
            pretty_name: "Max load time",
            default: null,
        },
        /** Function to be called after a file fails to load. The function takes the file name as its only argument. */
        on_error: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.FUNCTION,
            pretty_name: "On error",
            default: null,
        },
        /** Function to be called after a file loads successfully. The function takes the file name as its only argument. */
        on_success: {
            type: jspsych__WEBPACK_IMPORTED_MODULE_0__.ParameterType.FUNCTION,
            pretty_name: "On success",
            default: null,
        },
    },
};
/**
 * **preload**
 *
 * jsPsych plugin for preloading image, audio, and video files
 *
 * @author Becky Gilbert
 * @see {@link https://www.jspsych.org/plugins/jspsych-preload/ preload plugin documentation on jspsych.org}
 */
class PreloadPlugin {
    constructor(jsPsych) {
        this.jsPsych = jsPsych;
    }
    trial(display_element, trial) {
        var success = null;
        var timeout = false;
        var failed_images = [];
        var failed_audio = [];
        var failed_video = [];
        var detailed_errors = [];
        var in_safe_mode = this.jsPsych.getSafeModeStatus();
        // create list of media to preload //
        var images = [];
        var audio = [];
        var video = [];
        if (trial.auto_preload) {
            var experiment_timeline = this.jsPsych.getTimeline();
            var auto_preload = this.jsPsych.pluginAPI.getAutoPreloadList(experiment_timeline);
            images = images.concat(auto_preload.images);
            audio = audio.concat(auto_preload.audio);
            video = video.concat(auto_preload.video);
        }
        if (trial.trials.length > 0) {
            var trial_preloads = this.jsPsych.pluginAPI.getAutoPreloadList(trial.trials);
            images = images.concat(trial_preloads.images);
            audio = audio.concat(trial_preloads.audio);
            video = video.concat(trial_preloads.video);
        }
        images = images.concat(trial.images);
        audio = audio.concat(trial.audio);
        video = video.concat(trial.video);
        images = this.jsPsych.utils.unique(images.flat());
        audio = this.jsPsych.utils.unique(audio.flat());
        video = this.jsPsych.utils.unique(video.flat());
        if (in_safe_mode) {
            // don't preload video if in safe mode (experiment is running via file protocol)
            video = [];
        }
        // render display of message and progress bar
        var html = "";
        if (trial.message !== null) {
            html += trial.message;
        }
        if (trial.show_progress_bar) {
            html += `
            <div id='jspsych-loading-progress-bar-container' style='height: 10px; width: 300px; background-color: #ddd; margin: auto;'>
              <div id='jspsych-loading-progress-bar' style='height: 10px; width: 0%; background-color: #777;'></div>
            </div>`;
        }
        display_element.innerHTML = html;
        const update_loading_progress_bar = () => {
            loaded++;
            if (trial.show_progress_bar) {
                var percent_loaded = (loaded / total_n) * 100;
                var preload_progress_bar = display_element.querySelector("#jspsych-loading-progress-bar");
                if (preload_progress_bar !== null) {
                    preload_progress_bar.style.width = percent_loaded + "%";
                }
            }
        };
        // called if all files load successfully
        const on_success = () => {
            if (typeof timeout !== "undefined" && timeout === false) {
                // clear timeout immediately after finishing, to handle race condition with max_load_time
                this.jsPsych.pluginAPI.clearAllTimeouts();
                // need to call cancel preload function to clear global jsPsych preload_request list, even when they've all succeeded
                this.jsPsych.pluginAPI.cancelPreloads();
                success = true;
                end_trial();
            }
        };
        // called if all_files haven't finished loading when max_load_time is reached
        const on_timeout = () => {
            this.jsPsych.pluginAPI.cancelPreloads();
            if (typeof success !== "undefined" && (success === false || success === null)) {
                timeout = true;
                if (loaded_success < total_n) {
                    success = false;
                }
                after_error("timeout"); // call trial's on_error event handler here, in case loading timed out with no file errors
                detailed_errors.push("<p><strong>Loading timed out.</strong><br>" +
                    "Consider compressing your stimuli files, loading your files in smaller batches,<br>" +
                    "and/or increasing the <i>max_load_time</i> parameter.</p>");
                if (trial.continue_after_error) {
                    end_trial();
                }
                else {
                    stop_with_error_message();
                }
            }
        };
        const stop_with_error_message = () => {
            this.jsPsych.pluginAPI.clearAllTimeouts();
            this.jsPsych.pluginAPI.cancelPreloads();
            // show error message
            display_element.innerHTML = trial.error_message;
            // show detailed errors, if necessary
            if (trial.show_detailed_errors) {
                display_element.innerHTML += "<p><strong>Error details:</strong></p>";
                detailed_errors.forEach((e) => {
                    display_element.innerHTML += e;
                });
            }
        };
        const end_trial = () => {
            // clear timeout again when end_trial is called, to handle race condition with max_load_time
            this.jsPsych.pluginAPI.clearAllTimeouts();
            var trial_data = {
                success: success,
                timeout: timeout,
                failed_images: failed_images,
                failed_audio: failed_audio,
                failed_video: failed_video,
            };
            // clear the display
            display_element.innerHTML = "";
            this.jsPsych.finishTrial(trial_data);
        };
        // do preloading
        if (trial.max_load_time !== null) {
            this.jsPsych.pluginAPI.setTimeout(on_timeout, trial.max_load_time);
        }
        var total_n = images.length + audio.length + video.length;
        var loaded = 0; // success or error count
        var loaded_success = 0; // success count
        if (total_n == 0) {
            on_success();
        }
        else {
            const load_video = (cb) => {
                this.jsPsych.pluginAPI.preloadVideo(video, cb, file_loading_success, file_loading_error);
            };
            const load_audio = (cb) => {
                this.jsPsych.pluginAPI.preloadAudio(audio, cb, file_loading_success, file_loading_error);
            };
            const load_images = (cb) => {
                this.jsPsych.pluginAPI.preloadImages(images, cb, file_loading_success, file_loading_error);
            };
            if (video.length > 0) {
                load_video(() => { });
            }
            if (audio.length > 0) {
                load_audio(() => { });
            }
            if (images.length > 0) {
                load_images(() => { });
            }
        }
        // helper functions and callbacks
        // called when a single file loading fails
        function file_loading_error(e) {
            // update progress bar even if there's an error
            update_loading_progress_bar();
            // change success flag after first file loading error
            if (success == null) {
                success = false;
            }
            // add file to failed media list
            var source = "unknown file";
            if (e.source) {
                source = e.source;
            }
            if (e.error && e.error.path && e.error.path.length > 0) {
                if (e.error.path[0].localName == "img") {
                    failed_images.push(source);
                }
                else if (e.error.path[0].localName == "audio") {
                    failed_audio.push(source);
                }
                else if (e.error.path[0].localName == "video") {
                    failed_video.push(source);
                }
            }
            // construct detailed error message
            var err_msg = "<p><strong>Error loading file: " + source + "</strong><br>";
            if (e.error.statusText) {
                err_msg += "File request response status: " + e.error.statusText + "<br>";
            }
            if (e.error == "404") {
                err_msg += "404 - file not found.<br>";
            }
            if (typeof e.error.loaded !== "undefined" &&
                e.error.loaded !== null &&
                e.error.loaded !== 0) {
                err_msg += e.error.loaded + " bytes transferred.";
            }
            else {
                err_msg +=
                    "File did not begin loading. Check that file path is correct and reachable by the browser,<br>" +
                        "and that loading is not blocked by cross-origin resource sharing (CORS) errors.";
            }
            err_msg += "</p>";
            detailed_errors.push(err_msg);
            // call trial's on_error function
            after_error(source);
            // if this is the last file
            if (loaded == total_n) {
                if (trial.continue_after_error) {
                    // if continue_after_error is false, then stop with an error
                    end_trial();
                }
                else {
                    // otherwise end the trial and continue
                    stop_with_error_message();
                }
            }
        }
        // called when a single file loads successfully
        function file_loading_success(source) {
            update_loading_progress_bar();
            // call trial's on_success function
            after_success(source);
            loaded_success++;
            if (loaded_success == total_n) {
                // if this is the last file and all loaded successfully, call success function
                on_success();
            }
            else if (loaded == total_n) {
                // if this is the last file and there was at least one error
                if (trial.continue_after_error) {
                    // end the trial and continue with experiment
                    end_trial();
                }
                else {
                    // if continue_after_error is false, then stop with an error
                    stop_with_error_message();
                }
            }
        }
        function after_error(source) {
            // call on_error function and pass file name
            if (trial.on_error !== null) {
                trial.on_error(source);
            }
        }
        function after_success(source) {
            // call on_success function and pass file name
            if (trial.on_success !== null) {
                trial.on_success(source);
            }
        }
    }
    simulate(trial, simulation_mode, simulation_options, load_callback) {
        if (simulation_mode == "data-only") {
            load_callback();
            this.simulate_data_only(trial, simulation_options);
        }
        if (simulation_mode == "visual") {
            this.simulate_visual(trial, simulation_options, load_callback);
        }
    }
    create_simulation_data(trial, simulation_options) {
        const default_data = {
            success: true,
            timeout: false,
            failed_images: [],
            failed_audio: [],
            failed_video: [],
        };
        const data = this.jsPsych.pluginAPI.mergeSimulationData(default_data, simulation_options);
        return data;
    }
    simulate_data_only(trial, simulation_options) {
        const data = this.create_simulation_data(trial, simulation_options);
        this.jsPsych.finishTrial(data);
    }
    simulate_visual(trial, simulation_options, load_callback) {
        const display_element = this.jsPsych.getDisplayElement();
        this.trial(display_element, trial);
        load_callback();
    }
}
PreloadPlugin.info = info;


//# sourceMappingURL=index.js.map


/***/ }),

/***/ "./node_modules/jspsych/dist/index.js":
/*!********************************************!*\
  !*** ./node_modules/jspsych/dist/index.js ***!
  \********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "JsPsych": function() { return /* binding */ JsPsych; },
/* harmony export */   "ParameterType": function() { return /* binding */ ParameterType; },
/* harmony export */   "initJsPsych": function() { return /* binding */ initJsPsych; },
/* harmony export */   "universalPluginParameters": function() { return /* binding */ universalPluginParameters; }
/* harmony export */ });
function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && iter[Symbol.iterator] != null || iter["@@iterator"] != null) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _iterableToArrayLimit(arr, i) { var _i = arr == null ? null : typeof Symbol !== "undefined" && arr[Symbol.iterator] || arr["@@iterator"]; if (_i == null) return; var _arr = []; var _n = true; var _d = false; var _s, _e; try { for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e2) { throw _e2; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e3) { didErr = true; err = _e3; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */
function __awaiter(thisArg, _arguments, P, generator) {
  function adopt(value) {
    return value instanceof P ? value : new P(function (resolve) {
      resolve(value);
    });
  }

  return new (P || (P = Promise))(function (resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e) {
        reject(e);
      }
    }

    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e) {
        reject(e);
      }
    }

    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }

    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
} // Gets all non-builtin properties up the prototype chain


var getAllProperties = function getAllProperties(object) {
  var properties = new Set();

  do {
    var _iterator = _createForOfIteratorHelper(Reflect.ownKeys(object)),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var key = _step.value;
        properties.add([object, key]);
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }
  } while ((object = Reflect.getPrototypeOf(object)) && object !== Object.prototype);

  return properties;
};

var autoBind = function autoBind(self) {
  var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
      include = _ref.include,
      exclude = _ref.exclude;

  var filter = function filter(key) {
    var match = function match(pattern) {
      return typeof pattern === 'string' ? key === pattern : pattern.test(key);
    };

    if (include) {
      return include.some(match);
    }

    if (exclude) {
      return !exclude.some(match);
    }

    return true;
  };

  var _iterator2 = _createForOfIteratorHelper(getAllProperties(self.constructor.prototype)),
      _step2;

  try {
    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {
      var _step2$value = _slicedToArray(_step2.value, 2),
          object = _step2$value[0],
          key = _step2$value[1];

      if (key === 'constructor' || !filter(key)) {
        continue;
      }

      var descriptor = Reflect.getOwnPropertyDescriptor(object, key);

      if (descriptor && typeof descriptor.value === 'function') {
        self[key] = self[key].bind(self);
      }
    }
  } catch (err) {
    _iterator2.e(err);
  } finally {
    _iterator2.f();
  }

  return self;
};

var _version = "7.1.2";

var MigrationError = /*#__PURE__*/function (_Error) {
  _inheritsLoose(MigrationError, _Error);

  function MigrationError() {
    var _this;

    var message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "The global `jsPsych` variable is no longer available in jsPsych v7.";
    _this = _Error.call(this, "".concat(message, " Please follow the migration guide at https://www.jspsych.org/7.0/support/migration-v7/ to update your experiment.")) || this;
    _this.name = "MigrationError";
    return _this;
  }

  return MigrationError;
}( /*#__PURE__*/_wrapNativeSuper(Error)); // Define a global jsPsych object to handle invocations on it with migration errors


window.jsPsych = {
  get init() {
    throw new MigrationError("`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.");
  },

  get data() {
    throw new MigrationError();
  },

  get randomization() {
    throw new MigrationError();
  },

  get turk() {
    throw new MigrationError();
  },

  get pluginAPI() {
    throw new MigrationError();
  },

  get ALL_KEYS() {
    throw new MigrationError('jsPsych.ALL_KEYS was replaced by the "ALL_KEYS" string in jsPsych v7.');
  },

  get NO_KEYS() {
    throw new MigrationError('jsPsych.NO_KEYS was replaced by the "NO_KEYS" string in jsPsych v7.');
  }

};
/**
 * Finds all of the unique items in an array.
 * @param arr The array to extract unique values from
 * @returns An array with one copy of each unique item in `arr`
 */

function unique(arr) {
  return _toConsumableArray(new Set(arr));
}

function deepCopy(obj) {
  if (!obj) return obj;
  var out;

  if (Array.isArray(obj)) {
    out = [];

    var _iterator3 = _createForOfIteratorHelper(obj),
        _step3;

    try {
      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {
        var x = _step3.value;
        out.push(deepCopy(x));
      }
    } catch (err) {
      _iterator3.e(err);
    } finally {
      _iterator3.f();
    }

    return out;
  } else if (_typeof(obj) === "object" && obj !== null) {
    out = {};

    for (var key in obj) {
      if (obj.hasOwnProperty(key)) {
        out[key] = deepCopy(obj[key]);
      }
    }

    return out;
  } else {
    return obj;
  }
}

var utils = /*#__PURE__*/Object.freeze({
  __proto__: null,
  unique: unique,
  deepCopy: deepCopy
});

var DataColumn = /*#__PURE__*/function () {
  function DataColumn() {
    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    this.values = values;
  }

  var _proto = DataColumn.prototype;

  _proto.sum = function sum() {
    var s = 0;

    var _iterator4 = _createForOfIteratorHelper(this.values),
        _step4;

    try {
      for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {
        var v = _step4.value;
        s += v;
      }
    } catch (err) {
      _iterator4.e(err);
    } finally {
      _iterator4.f();
    }

    return s;
  };

  _proto.mean = function mean() {
    return this.sum() / this.count();
  };

  _proto.median = function median() {
    if (this.values.length === 0) {
      return undefined;
    }

    var numbers = this.values.slice(0).sort(function (a, b) {
      return a - b;
    });
    var middle = Math.floor(numbers.length / 2);
    var isEven = numbers.length % 2 === 0;
    return isEven ? (numbers[middle] + numbers[middle - 1]) / 2 : numbers[middle];
  };

  _proto.min = function min() {
    return Math.min.apply(null, this.values);
  };

  _proto.max = function max() {
    return Math.max.apply(null, this.values);
  };

  _proto.count = function count() {
    return this.values.length;
  };

  _proto.variance = function variance() {
    var mean = this.mean();
    var sum_square_error = 0;

    var _iterator5 = _createForOfIteratorHelper(this.values),
        _step5;

    try {
      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {
        var x = _step5.value;
        sum_square_error += Math.pow(x - mean, 2);
      }
    } catch (err) {
      _iterator5.e(err);
    } finally {
      _iterator5.f();
    }

    var mse = sum_square_error / (this.values.length - 1);
    return mse;
  };

  _proto.sd = function sd() {
    var mse = this.variance();
    var rmse = Math.sqrt(mse);
    return rmse;
  };

  _proto.frequencies = function frequencies() {
    var unique = {};

    var _iterator6 = _createForOfIteratorHelper(this.values),
        _step6;

    try {
      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {
        var x = _step6.value;

        if (typeof unique[x] === "undefined") {
          unique[x] = 1;
        } else {
          unique[x]++;
        }
      }
    } catch (err) {
      _iterator6.e(err);
    } finally {
      _iterator6.f();
    }

    return unique;
  };

  _proto.all = function all(eval_fn) {
    var _iterator7 = _createForOfIteratorHelper(this.values),
        _step7;

    try {
      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {
        var x = _step7.value;

        if (!eval_fn(x)) {
          return false;
        }
      }
    } catch (err) {
      _iterator7.e(err);
    } finally {
      _iterator7.f();
    }

    return true;
  };

  _proto.subset = function subset(eval_fn) {
    var out = [];

    var _iterator8 = _createForOfIteratorHelper(this.values),
        _step8;

    try {
      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {
        var x = _step8.value;

        if (eval_fn(x)) {
          out.push(x);
        }
      }
    } catch (err) {
      _iterator8.e(err);
    } finally {
      _iterator8.f();
    }

    return new DataColumn(out);
  };

  return DataColumn;
}(); // private function to save text file on local drive


function saveTextToFile(textstr, filename) {
  var blobToSave = new Blob([textstr], {
    type: "text/plain"
  });
  var blobURL = "";

  if (typeof window.webkitURL !== "undefined") {
    blobURL = window.webkitURL.createObjectURL(blobToSave);
  } else {
    blobURL = window.URL.createObjectURL(blobToSave);
  }

  var link = document.createElement("a");
  link.id = "jspsych-download-as-text-link";
  link.style.display = "none";
  link.download = filename;
  link.href = blobURL;
  link.click();
} // this function based on code suggested by StackOverflow users:
// http://stackoverflow.com/users/64741/zachary
// http://stackoverflow.com/users/317/joseph-sturtevant


function JSON2CSV(objArray) {
  var array = _typeof(objArray) != "object" ? JSON.parse(objArray) : objArray;
  var line = "";
  var result = "";
  var columns = [];

  var _iterator9 = _createForOfIteratorHelper(array),
      _step9;

  try {
    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {
      var row = _step9.value;

      for (var key in row) {
        var keyString = key + "";
        keyString = '"' + keyString.replace(/"/g, '""') + '",';

        if (!columns.includes(key)) {
          columns.push(key);
          line += keyString;
        }
      }
    }
  } catch (err) {
    _iterator9.e(err);
  } finally {
    _iterator9.f();
  }

  line = line.slice(0, -1); // removes last comma

  result += line + "\r\n";

  var _iterator10 = _createForOfIteratorHelper(array),
      _step10;

  try {
    for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {
      var _row = _step10.value;
      line = "";

      var _iterator11 = _createForOfIteratorHelper(columns),
          _step11;

      try {
        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {
          var col = _step11.value;
          var value = typeof _row[col] === "undefined" ? "" : _row[col];

          if (_typeof(value) == "object") {
            value = JSON.stringify(value);
          }

          var valueString = value + "";
          line += '"' + valueString.replace(/"/g, '""') + '",';
        }
      } catch (err) {
        _iterator11.e(err);
      } finally {
        _iterator11.f();
      }

      line = line.slice(0, -1);
      result += line + "\r\n";
    }
  } catch (err) {
    _iterator10.e(err);
  } finally {
    _iterator10.f();
  }

  return result;
} // this function is modified from StackOverflow:
// http://stackoverflow.com/posts/3855394


function getQueryString() {
  var a = window.location.search.substr(1).split("&");
  var b = {};

  for (var i = 0; i < a.length; ++i) {
    var p = a[i].split("=", 2);
    if (p.length == 1) b[p[0]] = "";else b[p[0]] = decodeURIComponent(p[1].replace(/\+/g, " "));
  }

  return b;
}

var DataCollection = /*#__PURE__*/function () {
  function DataCollection() {
    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
    this.trials = data;
  }

  var _proto2 = DataCollection.prototype;

  _proto2.push = function push(new_data) {
    this.trials.push(new_data);
    return this;
  };

  _proto2.join = function join(other_data_collection) {
    this.trials = this.trials.concat(other_data_collection.values());
    return this;
  };

  _proto2.top = function top() {
    if (this.trials.length <= 1) {
      return this;
    } else {
      return new DataCollection([this.trials[this.trials.length - 1]]);
    }
  }
  /**
   * Queries the first n elements in a collection of trials.
   *
   * @param n A positive integer of elements to return. A value of
   *          n that is less than 1 will throw an error.
   *
   * @return First n objects of a collection of trials. If fewer than
   *         n trials are available, the trials.length elements will
   *         be returned.
   *
   */
  ;

  _proto2.first = function first() {
    var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    if (n < 1) {
      throw "You must query with a positive nonzero integer. Please use a\n               different value for n.";
    }

    if (this.trials.length === 0) return new DataCollection();
    if (n > this.trials.length) n = this.trials.length;
    return new DataCollection(this.trials.slice(0, n));
  }
  /**
   * Queries the last n elements in a collection of trials.
   *
   * @param n A positive integer of elements to return. A value of
   *          n that is less than 1 will throw an error.
   *
   * @return Last n objects of a collection of trials. If fewer than
   *         n trials are available, the trials.length elements will
   *         be returned.
   *
   */
  ;

  _proto2.last = function last() {
    var n = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;

    if (n < 1) {
      throw "You must query with a positive nonzero integer. Please use a\n               different value for n.";
    }

    if (this.trials.length === 0) return new DataCollection();
    if (n > this.trials.length) n = this.trials.length;
    return new DataCollection(this.trials.slice(this.trials.length - n, this.trials.length));
  };

  _proto2.values = function values() {
    return this.trials;
  };

  _proto2.count = function count() {
    return this.trials.length;
  };

  _proto2.readOnly = function readOnly() {
    return new DataCollection(deepCopy(this.trials));
  };

  _proto2.addToAll = function addToAll(properties) {
    var _iterator12 = _createForOfIteratorHelper(this.trials),
        _step12;

    try {
      for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {
        var trial = _step12.value;
        Object.assign(trial, properties);
      }
    } catch (err) {
      _iterator12.e(err);
    } finally {
      _iterator12.f();
    }

    return this;
  };

  _proto2.addToLast = function addToLast(properties) {
    if (this.trials.length != 0) {
      Object.assign(this.trials[this.trials.length - 1], properties);
    }

    return this;
  };

  _proto2.filter = function filter(filters) {
    // [{p1: v1, p2:v2}, {p1:v2}]
    // {p1: v1}
    var f;

    if (!Array.isArray(filters)) {
      f = deepCopy([filters]);
    } else {
      f = deepCopy(filters);
    }

    var filtered_data = [];

    var _iterator13 = _createForOfIteratorHelper(this.trials),
        _step13;

    try {
      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {
        var trial = _step13.value;
        var keep = false;

        var _iterator14 = _createForOfIteratorHelper(f),
            _step14;

        try {
          for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {
            var filter = _step14.value;
            var match = true;

            for (var _i2 = 0, _Object$keys = Object.keys(filter); _i2 < _Object$keys.length; _i2++) {
              var key = _Object$keys[_i2];
              if (typeof trial[key] !== "undefined" && trial[key] === filter[key]) ;else {
                match = false;
              }
            }

            if (match) {
              keep = true;
              break;
            } // can break because each filter is OR.

          }
        } catch (err) {
          _iterator14.e(err);
        } finally {
          _iterator14.f();
        }

        if (keep) {
          filtered_data.push(trial);
        }
      }
    } catch (err) {
      _iterator13.e(err);
    } finally {
      _iterator13.f();
    }

    return new DataCollection(filtered_data);
  };

  _proto2.filterCustom = function filterCustom(fn) {
    return new DataCollection(this.trials.filter(fn));
  };

  _proto2.select = function select(column) {
    var values = [];

    var _iterator15 = _createForOfIteratorHelper(this.trials),
        _step15;

    try {
      for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {
        var trial = _step15.value;

        if (typeof trial[column] !== "undefined") {
          values.push(trial[column]);
        }
      }
    } catch (err) {
      _iterator15.e(err);
    } finally {
      _iterator15.f();
    }

    return new DataColumn(values);
  };

  _proto2.ignore = function ignore(columns) {
    if (!Array.isArray(columns)) {
      columns = [columns];
    }

    var o = deepCopy(this.trials);

    var _iterator16 = _createForOfIteratorHelper(o),
        _step16;

    try {
      for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {
        var trial = _step16.value;

        var _iterator17 = _createForOfIteratorHelper(columns),
            _step17;

        try {
          for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {
            var delete_key = _step17.value;
            delete trial[delete_key];
          }
        } catch (err) {
          _iterator17.e(err);
        } finally {
          _iterator17.f();
        }
      }
    } catch (err) {
      _iterator16.e(err);
    } finally {
      _iterator16.f();
    }

    return new DataCollection(o);
  };

  _proto2.uniqueNames = function uniqueNames() {
    var names = [];

    var _iterator18 = _createForOfIteratorHelper(this.trials),
        _step18;

    try {
      for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {
        var trial = _step18.value;

        for (var _i3 = 0, _Object$keys2 = Object.keys(trial); _i3 < _Object$keys2.length; _i3++) {
          var key = _Object$keys2[_i3];

          if (!names.includes(key)) {
            names.push(key);
          }
        }
      }
    } catch (err) {
      _iterator18.e(err);
    } finally {
      _iterator18.f();
    }

    return names;
  };

  _proto2.csv = function csv() {
    return JSON2CSV(this.trials);
  };

  _proto2.json = function json() {
    var pretty = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;

    if (pretty) {
      return JSON.stringify(this.trials, null, "\t");
    }

    return JSON.stringify(this.trials);
  };

  _proto2.localSave = function localSave(format, filename) {
    format = format.toLowerCase();
    var data_string;

    if (format === "json") {
      data_string = this.json();
    } else if (format === "csv") {
      data_string = this.csv();
    } else {
      throw new Error('Invalid format specified for localSave. Must be "json" or "csv".');
    }

    saveTextToFile(data_string, filename);
  };

  return DataCollection;
}();

var JsPsychData = /*#__PURE__*/function () {
  function JsPsychData(jsPsych) {
    this.jsPsych = jsPsych; // data properties for all trials

    this.dataProperties = {};
    this.reset();
  }

  var _proto3 = JsPsychData.prototype;

  _proto3.reset = function reset() {
    this.allData = new DataCollection();
    this.interactionData = new DataCollection();
  };

  _proto3.get = function get() {
    return this.allData;
  };

  _proto3.getInteractionData = function getInteractionData() {
    return this.interactionData;
  };

  _proto3.write = function write(data_object) {
    var progress = this.jsPsych.getProgress();
    var trial = this.jsPsych.getCurrentTrial(); //var trial_opt_data = typeof trial.data == 'function' ? trial.data() : trial.data;

    var default_data = {
      trial_type: trial.type.info.name,
      trial_index: progress.current_trial_global,
      time_elapsed: this.jsPsych.getTotalTime(),
      internal_node_id: this.jsPsych.getCurrentTimelineNodeID()
    };
    this.allData.push(Object.assign(Object.assign(Object.assign(Object.assign({}, data_object), trial.data), default_data), this.dataProperties));
  };

  _proto3.addProperties = function addProperties(properties) {
    // first, add the properties to all data that's already stored
    this.allData.addToAll(properties); // now add to list so that it gets appended to all future data

    this.dataProperties = Object.assign({}, this.dataProperties, properties);
  };

  _proto3.addDataToLastTrial = function addDataToLastTrial(data) {
    this.allData.addToLast(data);
  };

  _proto3.getDataByTimelineNode = function getDataByTimelineNode(node_id) {
    return this.allData.filterCustom(function (x) {
      return x.internal_node_id.slice(0, node_id.length) === node_id;
    });
  };

  _proto3.getLastTrialData = function getLastTrialData() {
    return this.allData.top();
  };

  _proto3.getLastTimelineData = function getLastTimelineData() {
    var lasttrial = this.getLastTrialData();
    var node_id = lasttrial.select("internal_node_id").values[0];

    if (typeof node_id === "undefined") {
      return new DataCollection();
    } else {
      var parent_node_id = node_id.substr(0, node_id.lastIndexOf("-"));
      var lastnodedata = this.getDataByTimelineNode(parent_node_id);
      return lastnodedata;
    }
  };

  _proto3.displayData = function displayData() {
    var format = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "json";
    format = format.toLowerCase();

    if (format != "json" && format != "csv") {
      console.log("Invalid format declared for displayData function. Using json as default.");
      format = "json";
    }

    var data_string = format === "json" ? this.allData.json(true) : this.allData.csv();
    var display_element = this.jsPsych.getDisplayElement();
    display_element.innerHTML = '<pre id="jspsych-data-display"></pre>';
    document.getElementById("jspsych-data-display").textContent = data_string;
  };

  _proto3.urlVariables = function urlVariables() {
    if (typeof this.query_string == "undefined") {
      this.query_string = getQueryString();
    }

    return this.query_string;
  };

  _proto3.getURLVariable = function getURLVariable(whichvar) {
    return this.urlVariables()[whichvar];
  };

  _proto3.createInteractionListeners = function createInteractionListeners() {
    var _this2 = this;

    // blur event capture
    window.addEventListener("blur", function () {
      var data = {
        event: "blur",
        trial: _this2.jsPsych.getProgress().current_trial_global,
        time: _this2.jsPsych.getTotalTime()
      };

      _this2.interactionData.push(data);

      _this2.jsPsych.getInitSettings().on_interaction_data_update(data);
    }); // focus event capture

    window.addEventListener("focus", function () {
      var data = {
        event: "focus",
        trial: _this2.jsPsych.getProgress().current_trial_global,
        time: _this2.jsPsych.getTotalTime()
      };

      _this2.interactionData.push(data);

      _this2.jsPsych.getInitSettings().on_interaction_data_update(data);
    }); // fullscreen change capture

    var fullscreenchange = function fullscreenchange() {
      var data = {
        event: // @ts-expect-error
        document.isFullScreen || // @ts-expect-error
        document.webkitIsFullScreen || // @ts-expect-error
        document.mozIsFullScreen || document.fullscreenElement ? "fullscreenenter" : "fullscreenexit",
        trial: _this2.jsPsych.getProgress().current_trial_global,
        time: _this2.jsPsych.getTotalTime()
      };

      _this2.interactionData.push(data);

      _this2.jsPsych.getInitSettings().on_interaction_data_update(data);
    };

    document.addEventListener("fullscreenchange", fullscreenchange);
    document.addEventListener("mozfullscreenchange", fullscreenchange);
    document.addEventListener("webkitfullscreenchange", fullscreenchange);
  } // public methods for testing purposes. not recommended for use.
  ;

  _proto3._customInsert = function _customInsert(data) {
    this.allData = new DataCollection(data);
  };

  _proto3._fullreset = function _fullreset() {
    this.reset();
    this.dataProperties = {};
  };

  return JsPsychData;
}();

var HardwareAPI = /*#__PURE__*/function () {
  function HardwareAPI() {
    var _this3 = this;

    /**
     * Indicates whether this instance of jspsych has opened a hardware connection through our browser
     * extension
     **/
    this.hardwareConnected = false; //it might be useful to open up a line of communication from the extension back to this page
    //script, again, this will have to pass through DOM events. For now speed is of no concern so I
    //will use jQuery

    document.addEventListener("jspsych-activate", function (evt) {
      _this3.hardwareConnected = true;
    });
  }
  /**
   * Allows communication with user hardware through our custom Google Chrome extension + native C++ program
   * @param		mess	The message to be passed to our extension, see its documentation for the expected members of this object.
   * @author	Daniel Rivas
   *
   */


  var _proto4 = HardwareAPI.prototype;

  _proto4.hardware = function hardware(mess) {
    //since Chrome extension content-scripts do not share the javascript environment with the page
    //script that loaded jspsych, we will need to use hacky methods like communicating through DOM
    //events.
    var jspsychEvt = new CustomEvent("jspsych", {
      detail: mess
    });
    document.dispatchEvent(jspsychEvt); //And voila! it will be the job of the content script injected by the extension to listen for
    //the event and do the appropriate actions.
  };

  return HardwareAPI;
}();

var KeyboardListenerAPI = /*#__PURE__*/function () {
  function KeyboardListenerAPI(getRootElement) {
    var areResponsesCaseSensitive = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
    var minimumValidRt = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;
    this.getRootElement = getRootElement;
    this.areResponsesCaseSensitive = areResponsesCaseSensitive;
    this.minimumValidRt = minimumValidRt;
    this.listeners = new Set();
    this.heldKeys = new Set();
    this.areRootListenersRegistered = false;
    autoBind(this);
    this.registerRootListeners();
  }
  /**
   * If not previously done and `this.getRootElement()` returns an element, adds the root key
   * listeners to that element.
   */


  var _proto5 = KeyboardListenerAPI.prototype;

  _proto5.registerRootListeners = function registerRootListeners() {
    if (!this.areRootListenersRegistered) {
      var rootElement = this.getRootElement();

      if (rootElement) {
        rootElement.addEventListener("keydown", this.rootKeydownListener);
        rootElement.addEventListener("keyup", this.rootKeyupListener);
        this.areRootListenersRegistered = true;
      }
    }
  };

  _proto5.rootKeydownListener = function rootKeydownListener(e) {
    // Iterate over a static copy of the listeners set because listeners might add other listeners
    // that we do not want to be included in the loop
    for (var _i4 = 0, _Array$from = Array.from(this.listeners); _i4 < _Array$from.length; _i4++) {
      var listener = _Array$from[_i4];
      listener(e);
    }

    this.heldKeys.add(this.toLowerCaseIfInsensitive(e.key));
  };

  _proto5.toLowerCaseIfInsensitive = function toLowerCaseIfInsensitive(string) {
    return this.areResponsesCaseSensitive ? string : string.toLowerCase();
  };

  _proto5.rootKeyupListener = function rootKeyupListener(e) {
    this.heldKeys.delete(this.toLowerCaseIfInsensitive(e.key));
  };

  _proto5.isResponseValid = function isResponseValid(validResponses, allowHeldKey, key) {
    // check if key was already held down
    if (!allowHeldKey && this.heldKeys.has(key)) {
      return false;
    }

    if (validResponses === "ALL_KEYS") {
      return true;
    }

    if (validResponses === "NO_KEYS") {
      return false;
    }

    return validResponses.includes(key);
  };

  _proto5.getKeyboardResponse = function getKeyboardResponse(_ref2) {
    var _this4 = this;

    var callback_function = _ref2.callback_function,
        _ref2$valid_responses = _ref2.valid_responses,
        valid_responses = _ref2$valid_responses === void 0 ? "ALL_KEYS" : _ref2$valid_responses,
        _ref2$rt_method = _ref2.rt_method,
        rt_method = _ref2$rt_method === void 0 ? "performance" : _ref2$rt_method,
        persist = _ref2.persist,
        audio_context = _ref2.audio_context,
        audio_context_start_time = _ref2.audio_context_start_time,
        _ref2$allow_held_key = _ref2.allow_held_key,
        allow_held_key = _ref2$allow_held_key === void 0 ? false : _ref2$allow_held_key,
        _ref2$minimum_valid_r = _ref2.minimum_valid_rt,
        minimum_valid_rt = _ref2$minimum_valid_r === void 0 ? this.minimumValidRt : _ref2$minimum_valid_r;

    if (rt_method !== "performance" && rt_method !== "audio") {
      console.log('Invalid RT method specified in getKeyboardResponse. Defaulting to "performance" method.');
      rt_method = "performance";
    }

    var usePerformanceRt = rt_method === "performance";
    var startTime = usePerformanceRt ? performance.now() : audio_context_start_time * 1000;
    this.registerRootListeners();

    if (!this.areResponsesCaseSensitive && typeof valid_responses !== "string") {
      valid_responses = valid_responses.map(function (r) {
        return r.toLowerCase();
      });
    }

    var listener = function listener(e) {
      var rt = Math.round((rt_method == "performance" ? performance.now() : audio_context.currentTime * 1000) - startTime);

      if (rt < minimum_valid_rt) {
        return;
      }

      var key = _this4.toLowerCaseIfInsensitive(e.key);

      if (_this4.isResponseValid(valid_responses, allow_held_key, key)) {
        // if this is a valid response, then we don't want the key event to trigger other actions
        // like scrolling via the spacebar.
        e.preventDefault();

        if (!persist) {
          // remove keyboard listener if it exists
          _this4.cancelKeyboardResponse(listener);
        }

        callback_function({
          key: key,
          rt: rt
        });
      }
    };

    this.listeners.add(listener);
    return listener;
  };

  _proto5.cancelKeyboardResponse = function cancelKeyboardResponse(listener) {
    // remove the listener from the set of listeners if it is contained
    this.listeners.delete(listener);
  };

  _proto5.cancelAllKeyboardResponses = function cancelAllKeyboardResponses() {
    this.listeners.clear();
  };

  _proto5.compareKeys = function compareKeys(key1, key2) {
    if (typeof key1 !== "string" && key1 !== null || typeof key2 !== "string" && key2 !== null) {
      console.error("Error in jsPsych.pluginAPI.compareKeys: arguments must be key strings or null.");
      return undefined;
    }

    if (typeof key1 === "string" && typeof key2 === "string") {
      // if both values are strings, then check whether or not letter case should be converted before comparing (case_sensitive_responses in initJsPsych)
      return this.areResponsesCaseSensitive ? key1 === key2 : key1.toLowerCase() === key2.toLowerCase();
    }

    return key1 === null && key2 === null;
  };

  return KeyboardListenerAPI;
}();
/**
 * Parameter types for plugins
 */


var ParameterType;

(function (ParameterType) {
  ParameterType[ParameterType["BOOL"] = 0] = "BOOL";
  ParameterType[ParameterType["STRING"] = 1] = "STRING";
  ParameterType[ParameterType["INT"] = 2] = "INT";
  ParameterType[ParameterType["FLOAT"] = 3] = "FLOAT";
  ParameterType[ParameterType["FUNCTION"] = 4] = "FUNCTION";
  ParameterType[ParameterType["KEY"] = 5] = "KEY";
  ParameterType[ParameterType["KEYS"] = 6] = "KEYS";
  ParameterType[ParameterType["SELECT"] = 7] = "SELECT";
  ParameterType[ParameterType["HTML_STRING"] = 8] = "HTML_STRING";
  ParameterType[ParameterType["IMAGE"] = 9] = "IMAGE";
  ParameterType[ParameterType["AUDIO"] = 10] = "AUDIO";
  ParameterType[ParameterType["VIDEO"] = 11] = "VIDEO";
  ParameterType[ParameterType["OBJECT"] = 12] = "OBJECT";
  ParameterType[ParameterType["COMPLEX"] = 13] = "COMPLEX";
  ParameterType[ParameterType["TIMELINE"] = 14] = "TIMELINE";
})(ParameterType || (ParameterType = {}));

var universalPluginParameters = {
  /**
   * Data to add to this trial (key-value pairs)
   */
  data: {
    type: ParameterType.OBJECT,
    pretty_name: "Data",
    default: {}
  },

  /**
   * Function to execute when trial begins
   */
  on_start: {
    type: ParameterType.FUNCTION,
    pretty_name: "On start",
    default: function _default() {
      return;
    }
  },

  /**
   * Function to execute when trial is finished
   */
  on_finish: {
    type: ParameterType.FUNCTION,
    pretty_name: "On finish",
    default: function _default() {
      return;
    }
  },

  /**
   * Function to execute after the trial has loaded
   */
  on_load: {
    type: ParameterType.FUNCTION,
    pretty_name: "On load",
    default: function _default() {
      return;
    }
  },

  /**
   * Length of gap between the end of this trial and the start of the next trial
   */
  post_trial_gap: {
    type: ParameterType.INT,
    pretty_name: "Post trial gap",
    default: null
  },

  /**
   * A list of CSS classes to add to the jsPsych display element for the duration of this trial
   */
  css_classes: {
    type: ParameterType.STRING,
    pretty_name: "Custom CSS classes",
    default: null
  },

  /**
   * Options to control simulation mode for the trial.
   */
  simulation_options: {
    type: ParameterType.COMPLEX,
    default: null
  }
};
var preloadParameterTypes = [ParameterType.AUDIO, ParameterType.IMAGE, ParameterType.VIDEO];

var MediaAPI = /*#__PURE__*/function () {
  function MediaAPI(useWebaudio, webaudioContext) {
    this.useWebaudio = useWebaudio;
    this.webaudioContext = webaudioContext; // video //

    this.video_buffers = {}; // audio //

    this.context = null;
    this.audio_buffers = []; // preloading stimuli //

    this.preload_requests = [];
    this.img_cache = {};
    this.preloadMap = new Map();
    this.microphone_recorder = null;
  }

  var _proto6 = MediaAPI.prototype;

  _proto6.getVideoBuffer = function getVideoBuffer(videoID) {
    return this.video_buffers[videoID];
  };

  _proto6.initAudio = function initAudio() {
    this.context = this.useWebaudio ? this.webaudioContext : null;
  };

  _proto6.audioContext = function audioContext() {
    if (this.context !== null) {
      if (this.context.state !== "running") {
        this.context.resume();
      }
    }

    return this.context;
  };

  _proto6.getAudioBuffer = function getAudioBuffer(audioID) {
    var _this5 = this;

    return new Promise(function (resolve, reject) {
      // check whether audio file already preloaded
      if (typeof _this5.audio_buffers[audioID] == "undefined" || _this5.audio_buffers[audioID] == "tmp") {
        // if audio is not already loaded, try to load it
        _this5.preloadAudio([audioID], function () {
          resolve(_this5.audio_buffers[audioID]);
        }, function () {}, function (e) {
          reject(e.error);
        });
      } else {
        // audio is already loaded
        resolve(_this5.audio_buffers[audioID]);
      }
    });
  };

  _proto6.preloadAudio = function preloadAudio(files) {
    var _this6 = this;

    var callback_complete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var callback_load = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (filepath) {};
    var callback_error = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (error_msg) {};
    files = unique(files.flat());
    var n_loaded = 0;

    if (files.length == 0) {
      callback_complete();
      return;
    }

    var load_audio_file_webaudio = function load_audio_file_webaudio(source) {
      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var request = new XMLHttpRequest();
      request.open("GET", source, true);
      request.responseType = "arraybuffer";

      request.onload = function () {
        _this6.context.decodeAudioData(request.response, function (buffer) {
          _this6.audio_buffers[source] = buffer;
          n_loaded++;
          callback_load(source);

          if (n_loaded == files.length) {
            callback_complete();
          }
        }, function (e) {
          callback_error({
            source: source,
            error: e
          });
        });
      };

      request.onerror = function (e) {
        var err = e;

        if (this.status == 404) {
          err = "404";
        }

        callback_error({
          source: source,
          error: err
        });
      };

      request.onloadend = function (e) {
        if (this.status == 404) {
          callback_error({
            source: source,
            error: "404"
          });
        }
      };

      request.send();

      _this6.preload_requests.push(request);
    };

    var load_audio_file_html5audio = function load_audio_file_html5audio(source) {
      var count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
      var audio = new Audio();

      var handleCanPlayThrough = function handleCanPlayThrough() {
        _this6.audio_buffers[source] = audio;
        n_loaded++;
        callback_load(source);

        if (n_loaded == files.length) {
          callback_complete();
        }

        audio.removeEventListener("canplaythrough", handleCanPlayThrough);
      };

      audio.addEventListener("canplaythrough", handleCanPlayThrough);
      audio.addEventListener("error", function handleError(e) {
        callback_error({
          source: audio.src,
          error: e
        });
        audio.removeEventListener("error", handleError);
      });
      audio.addEventListener("abort", function handleAbort(e) {
        callback_error({
          source: audio.src,
          error: e
        });
        audio.removeEventListener("abort", handleAbort);
      });
      audio.src = source;

      _this6.preload_requests.push(audio);
    };

    var _iterator19 = _createForOfIteratorHelper(files),
        _step19;

    try {
      for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {
        var file = _step19.value;

        if (typeof this.audio_buffers[file] !== "undefined") {
          n_loaded++;
          callback_load(file);

          if (n_loaded == files.length) {
            callback_complete();
          }
        } else {
          this.audio_buffers[file] = "tmp";

          if (this.audioContext() !== null) {
            load_audio_file_webaudio(file);
          } else {
            load_audio_file_html5audio(file);
          }
        }
      }
    } catch (err) {
      _iterator19.e(err);
    } finally {
      _iterator19.f();
    }
  };

  _proto6.preloadImages = function preloadImages(images) {
    var callback_complete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var callback_load = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (filepath) {};
    var callback_error = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (error_msg) {};
    // flatten the images array
    images = unique(images.flat());
    var n_loaded = 0;

    if (images.length === 0) {
      callback_complete();
      return;
    }

    for (var i = 0; i < images.length; i++) {
      var img = new Image();

      img.onload = function () {
        n_loaded++;
        callback_load(img.src);

        if (n_loaded === images.length) {
          callback_complete();
        }
      };

      img.onerror = function (e) {
        callback_error({
          source: img.src,
          error: e
        });
      };

      img.src = images[i];
      this.img_cache[images[i]] = img;
      this.preload_requests.push(img);
    }
  };

  _proto6.preloadVideo = function preloadVideo(videos) {
    var _this7 = this;

    var callback_complete = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};
    var callback_load = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : function (filepath) {};
    var callback_error = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : function (error_msg) {};
    // flatten the video array
    videos = unique(videos.flat());
    var n_loaded = 0;

    if (videos.length === 0) {
      callback_complete();
      return;
    }

    var _iterator20 = _createForOfIteratorHelper(videos),
        _step20;

    try {
      var _loop = function _loop() {
        var video = _step20.value;
        var video_buffers = _this7.video_buffers; //based on option 4 here: http://dinbror.dk/blog/how-to-preload-entire-html5-video-before-play-solved/

        var request = new XMLHttpRequest();
        request.open("GET", video, true);
        request.responseType = "blob";

        request.onload = function () {
          if (this.status === 200 || this.status === 0) {
            var videoBlob = this.response;
            video_buffers[video] = URL.createObjectURL(videoBlob); // IE10+

            n_loaded++;
            callback_load(video);

            if (n_loaded === videos.length) {
              callback_complete();
            }
          }
        };

        request.onerror = function (e) {
          var err = e;

          if (this.status == 404) {
            err = "404";
          }

          callback_error({
            source: video,
            error: err
          });
        };

        request.onloadend = function (e) {
          if (this.status == 404) {
            callback_error({
              source: video,
              error: "404"
            });
          }
        };

        request.send();

        _this7.preload_requests.push(request);
      };

      for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {
        _loop();
      }
    } catch (err) {
      _iterator20.e(err);
    } finally {
      _iterator20.f();
    }
  };

  _proto6.getAutoPreloadList = function getAutoPreloadList(timeline_description) {
    var _this8 = this;

    /** Map each preload parameter type to a set of paths to be preloaded */
    var preloadPaths = Object.fromEntries(preloadParameterTypes.map(function (type) {
      return [type, new Set()];
    }));

    var traverseTimeline = function traverseTimeline(node, inheritedTrialType) {
      var _a, _b, _c, _d;

      var isTimeline = typeof node.timeline !== "undefined";

      if (isTimeline) {
        var _iterator21 = _createForOfIteratorHelper(node.timeline),
            _step21;

        try {
          for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {
            var childNode = _step21.value;
            traverseTimeline(childNode, (_a = node.type) !== null && _a !== void 0 ? _a : inheritedTrialType);
          }
        } catch (err) {
          _iterator21.e(err);
        } finally {
          _iterator21.f();
        }
      } else if ((_c = (_b = node.type) !== null && _b !== void 0 ? _b : inheritedTrialType) === null || _c === void 0 ? void 0 : _c.info) {
        // node is a trial with type.info set
        // Get the plugin name and parameters object from the info object
        var _info = ((_d = node.type) !== null && _d !== void 0 ? _d : inheritedTrialType).info,
            pluginName = _info.name,
            parameters = _info.parameters; // Extract parameters to be preloaded and their types from parameter info if this has not
        // yet been done for `pluginName`

        if (!_this8.preloadMap.has(pluginName)) {
          _this8.preloadMap.set(pluginName, Object.fromEntries(Object.entries(parameters) // Filter out parameter entries with media types and a non-false `preload` option
          .filter(function (_ref3) {
            var _ref4 = _slicedToArray(_ref3, 2),
                _name = _ref4[0],
                _ref4$ = _ref4[1],
                type = _ref4$.type,
                preload = _ref4$.preload;

            return preloadParameterTypes.includes(type) && (preload !== null && preload !== void 0 ? preload : true);
          }) // Map each entry's value to its parameter type
          .map(function (_ref5) {
            var _ref6 = _slicedToArray(_ref5, 2),
                name = _ref6[0],
                type = _ref6[1].type;

            return [name, type];
          })));
        } // Add preload paths from this trial


        for (var _i5 = 0, _Object$entries = Object.entries(_this8.preloadMap.get(pluginName)); _i5 < _Object$entries.length; _i5++) {
          var _Object$entries$_i = _slicedToArray(_Object$entries[_i5], 2),
              parameterName = _Object$entries$_i[0],
              parameterType = _Object$entries$_i[1];

          var parameterValue = node[parameterName];
          var elements = preloadPaths[parameterType];

          if (typeof parameterValue === "string") {
            elements.add(parameterValue);
          } else if (Array.isArray(parameterValue)) {
            var _iterator22 = _createForOfIteratorHelper(parameterValue.flat()),
                _step22;

            try {
              for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {
                var element = _step22.value;

                if (typeof element === "string") {
                  elements.add(element);
                }
              }
            } catch (err) {
              _iterator22.e(err);
            } finally {
              _iterator22.f();
            }
          }
        }
      }
    };

    traverseTimeline({
      timeline: timeline_description
    });
    return {
      images: _toConsumableArray(preloadPaths[ParameterType.IMAGE]),
      audio: _toConsumableArray(preloadPaths[ParameterType.AUDIO]),
      video: _toConsumableArray(preloadPaths[ParameterType.VIDEO])
    };
  };

  _proto6.cancelPreloads = function cancelPreloads() {
    var _iterator23 = _createForOfIteratorHelper(this.preload_requests),
        _step23;

    try {
      for (_iterator23.s(); !(_step23 = _iterator23.n()).done;) {
        var request = _step23.value;

        request.onload = function () {};

        request.onerror = function () {};

        request.oncanplaythrough = function () {};

        request.onabort = function () {};
      }
    } catch (err) {
      _iterator23.e(err);
    } finally {
      _iterator23.f();
    }

    this.preload_requests = [];
  };

  _proto6.initializeMicrophoneRecorder = function initializeMicrophoneRecorder(stream) {
    var recorder = new MediaRecorder(stream);
    this.microphone_recorder = recorder;
  };

  _proto6.getMicrophoneRecorder = function getMicrophoneRecorder() {
    return this.microphone_recorder;
  };

  return MediaAPI;
}();

var SimulationAPI = /*#__PURE__*/function () {
  function SimulationAPI() {}

  var _proto7 = SimulationAPI.prototype;

  _proto7.dispatchEvent = function dispatchEvent(event) {
    document.body.dispatchEvent(event);
  }
  /**
   * Dispatches a `keydown` event for the specified key
   * @param key Character code (`.key` property) for the key to press.
   */
  ;

  _proto7.keyDown = function keyDown(key) {
    this.dispatchEvent(new KeyboardEvent("keydown", {
      key: key
    }));
  }
  /**
   * Dispatches a `keyup` event for the specified key
   * @param key Character code (`.key` property) for the key to press.
   */
  ;

  _proto7.keyUp = function keyUp(key) {
    this.dispatchEvent(new KeyboardEvent("keyup", {
      key: key
    }));
  }
  /**
   * Dispatches a `keydown` and `keyup` event in sequence to simulate pressing a key.
   * @param key Character code (`.key` property) for the key to press.
   * @param delay Length of time to wait (ms) before executing action
   */
  ;

  _proto7.pressKey = function pressKey(key) {
    var _this9 = this;

    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    if (delay > 0) {
      setTimeout(function () {
        _this9.keyDown(key);

        _this9.keyUp(key);
      }, delay);
    } else {
      this.keyDown(key);
      this.keyUp(key);
    }
  }
  /**
   * Dispatches `mousedown`, `mouseup`, and `click` events on the target element
   * @param target The element to click
   * @param delay Length of time to wait (ms) before executing action
   */
  ;

  _proto7.clickTarget = function clickTarget(target) {
    var delay = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

    if (delay > 0) {
      setTimeout(function () {
        target.dispatchEvent(new MouseEvent("mousedown", {
          bubbles: true
        }));
        target.dispatchEvent(new MouseEvent("mouseup", {
          bubbles: true
        }));
        target.dispatchEvent(new MouseEvent("click", {
          bubbles: true
        }));
      }, delay);
    } else {
      target.dispatchEvent(new MouseEvent("mousedown", {
        bubbles: true
      }));
      target.dispatchEvent(new MouseEvent("mouseup", {
        bubbles: true
      }));
      target.dispatchEvent(new MouseEvent("click", {
        bubbles: true
      }));
    }
  }
  /**
   * Sets the value of a target text input
   * @param target A text input element to fill in
   * @param text Text to input
   * @param delay Length of time to wait (ms) before executing action
   */
  ;

  _proto7.fillTextInput = function fillTextInput(target, text) {
    var delay = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;

    if (delay > 0) {
      setTimeout(function () {
        target.value = text;
      }, delay);
    } else {
      target.value = text;
    }
  }
  /**
   * Picks a valid key from `choices`, taking into account jsPsych-specific
   * identifiers like "NO_KEYS" and "ALL_KEYS".
   * @param choices Which keys are valid.
   * @returns A key selected at random from the valid keys.
   */
  ;

  _proto7.getValidKey = function getValidKey(choices) {
    var possible_keys = ["a", "b", "c", "d", "e", "f", "g", "h", "i", "j", "k", "l", "m", "n", "o", "p", "q", "r", "s", "t", "u", "v", "w", "x", "y", "z", "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", " "];
    var key;

    if (choices == "NO_KEYS") {
      key = null;
    } else if (choices == "ALL_KEYS") {
      key = possible_keys[Math.floor(Math.random() * possible_keys.length)];
    } else {
      var flat_choices = choices.flat();
      key = flat_choices[Math.floor(Math.random() * flat_choices.length)];
    }

    return key;
  };

  _proto7.mergeSimulationData = function mergeSimulationData(default_data, simulation_options) {
    // override any data with data from simulation object
    return Object.assign(Object.assign({}, default_data), simulation_options === null || simulation_options === void 0 ? void 0 : simulation_options.data);
  };

  _proto7.ensureSimulationDataConsistency = function ensureSimulationDataConsistency(trial, data) {
    // All RTs must be rounded
    if (data.rt) {
      data.rt = Math.round(data.rt);
    } // If a trial_duration and rt exist, make sure that the RT is not longer than the trial.


    if (trial.trial_duration && data.rt && data.rt > trial.trial_duration) {
      data.rt = null;

      if (data.response) {
        data.response = null;
      }

      if (data.correct) {
        data.correct = false;
      }
    } // If trial.choices is NO_KEYS make sure that response and RT are null


    if (trial.choices && trial.choices == "NO_KEYS") {
      if (data.rt) {
        data.rt = null;
      }

      if (data.response) {
        data.response = null;
      }
    } // If response is not allowed before stimulus display complete, ensure RT
    // is longer than display time.


    if (trial.allow_response_before_complete) {
      if (trial.sequence_reps && trial.frame_time) {
        var min_time = trial.sequence_reps * trial.frame_time * trial.stimuli.length;

        if (data.rt < min_time) {
          data.rt = null;
          data.response = null;
        }
      }
    }
  };

  return SimulationAPI;
}();

var TimeoutAPI = /*#__PURE__*/function () {
  function TimeoutAPI() {
    this.timeout_handlers = [];
  }

  var _proto8 = TimeoutAPI.prototype;

  _proto8.setTimeout = function setTimeout(callback, delay) {
    var handle = window.setTimeout(callback, delay);
    this.timeout_handlers.push(handle);
    return handle;
  };

  _proto8.clearAllTimeouts = function clearAllTimeouts() {
    var _iterator24 = _createForOfIteratorHelper(this.timeout_handlers),
        _step24;

    try {
      for (_iterator24.s(); !(_step24 = _iterator24.n()).done;) {
        var handler = _step24.value;
        clearTimeout(handler);
      }
    } catch (err) {
      _iterator24.e(err);
    } finally {
      _iterator24.f();
    }

    this.timeout_handlers = [];
  };

  return TimeoutAPI;
}();

function createJointPluginAPIObject(jsPsych) {
  var settings = jsPsych.getInitSettings();
  return Object.assign.apply(Object, [{}].concat(_toConsumableArray([new KeyboardListenerAPI(jsPsych.getDisplayContainerElement, settings.case_sensitive_responses, settings.minimum_valid_rt), new TimeoutAPI(), new MediaAPI(settings.use_webaudio, jsPsych.webaudio_context), new HardwareAPI(), new SimulationAPI()].map(function (object) {
    return autoBind(object);
  }))));
}

var wordList = [// Borrowed from xkcd password generator which borrowed it from wherever
"ability", "able", "aboard", "about", "above", "accept", "accident", "according", "account", "accurate", "acres", "across", "act", "action", "active", "activity", "actual", "actually", "add", "addition", "additional", "adjective", "adult", "adventure", "advice", "affect", "afraid", "after", "afternoon", "again", "against", "age", "ago", "agree", "ahead", "aid", "air", "airplane", "alike", "alive", "all", "allow", "almost", "alone", "along", "aloud", "alphabet", "already", "also", "although", "am", "among", "amount", "ancient", "angle", "angry", "animal", "announced", "another", "answer", "ants", "any", "anybody", "anyone", "anything", "anyway", "anywhere", "apart", "apartment", "appearance", "apple", "applied", "appropriate", "are", "area", "arm", "army", "around", "arrange", "arrangement", "arrive", "arrow", "art", "article", "as", "aside", "ask", "asleep", "at", "ate", "atmosphere", "atom", "atomic", "attached", "attack", "attempt", "attention", "audience", "author", "automobile", "available", "average", "avoid", "aware", "away", "baby", "back", "bad", "badly", "bag", "balance", "ball", "balloon", "band", "bank", "bar", "bare", "bark", "barn", "base", "baseball", "basic", "basis", "basket", "bat", "battle", "be", "bean", "bear", "beat", "beautiful", "beauty", "became", "because", "become", "becoming", "bee", "been", "before", "began", "beginning", "begun", "behavior", "behind", "being", "believed", "bell", "belong", "below", "belt", "bend", "beneath", "bent", "beside", "best", "bet", "better", "between", "beyond", "bicycle", "bigger", "biggest", "bill", "birds", "birth", "birthday", "bit", "bite", "black", "blank", "blanket", "blew", "blind", "block", "blood", "blow", "blue", "board", "boat", "body", "bone", "book", "border", "born", "both", "bottle", "bottom", "bound", "bow", "bowl", "box", "boy", "brain", "branch", "brass", "brave", "bread", "break", "breakfast", "breath", "breathe", "breathing", "breeze", "brick", "bridge", "brief", "bright", "bring", "broad", "broke", "broken", "brother", "brought", "brown", "brush", "buffalo", "build", "building", "built", "buried", "burn", "burst", "bus", "bush", "business", "busy", "but", "butter", "buy", "by", "cabin", "cage", "cake", "call", "calm", "came", "camera", "camp", "can", "canal", "cannot", "cap", "capital", "captain", "captured", "car", "carbon", "card", "care", "careful", "carefully", "carried", "carry", "case", "cast", "castle", "cat", "catch", "cattle", "caught", "cause", "cave", "cell", "cent", "center", "central", "century", "certain", "certainly", "chain", "chair", "chamber", "chance", "change", "changing", "chapter", "character", "characteristic", "charge", "chart", "check", "cheese", "chemical", "chest", "chicken", "chief", "child", "children", "choice", "choose", "chose", "chosen", "church", "circle", "circus", "citizen", "city", "class", "classroom", "claws", "clay", "clean", "clear", "clearly", "climate", "climb", "clock", "close", "closely", "closer", "cloth", "clothes", "clothing", "cloud", "club", "coach", "coal", "coast", "coat", "coffee", "cold", "collect", "college", "colony", "color", "column", "combination", "combine", "come", "comfortable", "coming", "command", "common", "community", "company", "compare", "compass", "complete", "completely", "complex", "composed", "composition", "compound", "concerned", "condition", "congress", "connected", "consider", "consist", "consonant", "constantly", "construction", "contain", "continent", "continued", "contrast", "control", "conversation", "cook", "cookies", "cool", "copper", "copy", "corn", "corner", "correct", "correctly", "cost", "cotton", "could", "count", "country", "couple", "courage", "course", "court", "cover", "cow", "cowboy", "crack", "cream", "create", "creature", "crew", "crop", "cross", "crowd", "cry", "cup", "curious", "current", "curve", "customs", "cut", "cutting", "daily", "damage", "dance", "danger", "dangerous", "dark", "darkness", "date", "daughter", "dawn", "day", "dead", "deal", "dear", "death", "decide", "declared", "deep", "deeply", "deer", "definition", "degree", "depend", "depth", "describe", "desert", "design", "desk", "detail", "determine", "develop", "development", "diagram", "diameter", "did", "die", "differ", "difference", "different", "difficult", "difficulty", "dig", "dinner", "direct", "direction", "directly", "dirt", "dirty", "disappear", "discover", "discovery", "discuss", "discussion", "disease", "dish", "distance", "distant", "divide", "division", "do", "doctor", "does", "dog", "doing", "doll", "dollar", "done", "donkey", "door", "dot", "double", "doubt", "down", "dozen", "draw", "drawn", "dream", "dress", "drew", "dried", "drink", "drive", "driven", "driver", "driving", "drop", "dropped", "drove", "dry", "duck", "due", "dug", "dull", "during", "dust", "duty", "each", "eager", "ear", "earlier", "early", "earn", "earth", "easier", "easily", "east", "easy", "eat", "eaten", "edge", "education", "effect", "effort", "egg", "eight", "either", "electric", "electricity", "element", "elephant", "eleven", "else", "empty", "end", "enemy", "energy", "engine", "engineer", "enjoy", "enough", "enter", "entire", "entirely", "environment", "equal", "equally", "equator", "equipment", "escape", "especially", "essential", "establish", "even", "evening", "event", "eventually", "ever", "every", "everybody", "everyone", "everything", "everywhere", "evidence", "exact", "exactly", "examine", "example", "excellent", "except", "exchange", "excited", "excitement", "exciting", "exclaimed", "exercise", "exist", "expect", "experience", "experiment", "explain", "explanation", "explore", "express", "expression", "extra", "eye", "face", "facing", "fact", "factor", "factory", "failed", "fair", "fairly", "fall", "fallen", "familiar", "family", "famous", "far", "farm", "farmer", "farther", "fast", "fastened", "faster", "fat", "father", "favorite", "fear", "feathers", "feature", "fed", "feed", "feel", "feet", "fell", "fellow", "felt", "fence", "few", "fewer", "field", "fierce", "fifteen", "fifth", "fifty", "fight", "fighting", "figure", "fill", "film", "final", "finally", "find", "fine", "finest", "finger", "finish", "fire", "fireplace", "firm", "first", "fish", "five", "fix", "flag", "flame", "flat", "flew", "flies", "flight", "floating", "floor", "flow", "flower", "fly", "fog", "folks", "follow", "food", "foot", "football", "for", "force", "foreign", "forest", "forget", "forgot", "forgotten", "form", "former", "fort", "forth", "forty", "forward", "fought", "found", "four", "fourth", "fox", "frame", "free", "freedom", "frequently", "fresh", "friend", "friendly", "frighten", "frog", "from", "front", "frozen", "fruit", "fuel", "full", "fully", "fun", "function", "funny", "fur", "furniture", "further", "future", "gain", "game", "garage", "garden", "gas", "gasoline", "gate", "gather", "gave", "general", "generally", "gentle", "gently", "get", "getting", "giant", "gift", "girl", "give", "given", "giving", "glad", "glass", "globe", "go", "goes", "gold", "golden", "gone", "good", "goose", "got", "government", "grabbed", "grade", "gradually", "grain", "grandfather", "grandmother", "graph", "grass", "gravity", "gray", "great", "greater", "greatest", "greatly", "green", "grew", "ground", "group", "grow", "grown", "growth", "guard", "guess", "guide", "gulf", "gun", "habit", "had", "hair", "half", "halfway", "hall", "hand", "handle", "handsome", "hang", "happen", "happened", "happily", "happy", "harbor", "hard", "harder", "hardly", "has", "hat", "have", "having", "hay", "he", "headed", "heading", "health", "heard", "hearing", "heart", "heat", "heavy", "height", "held", "hello", "help", "helpful", "her", "herd", "here", "herself", "hidden", "hide", "high", "higher", "highest", "highway", "hill", "him", "himself", "his", "history", "hit", "hold", "hole", "hollow", "home", "honor", "hope", "horn", "horse", "hospital", "hot", "hour", "house", "how", "however", "huge", "human", "hundred", "hung", "hungry", "hunt", "hunter", "hurried", "hurry", "hurt", "husband", "ice", "idea", "identity", "if", "ill", "image", "imagine", "immediately", "importance", "important", "impossible", "improve", "in", "inch", "include", "including", "income", "increase", "indeed", "independent", "indicate", "individual", "industrial", "industry", "influence", "information", "inside", "instance", "instant", "instead", "instrument", "interest", "interior", "into", "introduced", "invented", "involved", "iron", "is", "island", "it", "its", "itself", "jack", "jar", "jet", "job", "join", "joined", "journey", "joy", "judge", "jump", "jungle", "just", "keep", "kept", "key", "kids", "kill", "kind", "kitchen", "knew", "knife", "know", "knowledge", "known", "label", "labor", "lack", "lady", "laid", "lake", "lamp", "land", "language", "large", "larger", "largest", "last", "late", "later", "laugh", "law", "lay", "layers", "lead", "leader", "leaf", "learn", "least", "leather", "leave", "leaving", "led", "left", "leg", "length", "lesson", "let", "letter", "level", "library", "lie", "life", "lift", "light", "like", "likely", "limited", "line", "lion", "lips", "liquid", "list", "listen", "little", "live", "living", "load", "local", "locate", "location", "log", "lonely", "long", "longer", "look", "loose", "lose", "loss", "lost", "lot", "loud", "love", "lovely", "low", "lower", "luck", "lucky", "lunch", "lungs", "lying", "machine", "machinery", "mad", "made", "magic", "magnet", "mail", "main", "mainly", "major", "make", "making", "man", "managed", "manner", "manufacturing", "many", "map", "mark", "market", "married", "mass", "massage", "master", "material", "mathematics", "matter", "may", "maybe", "me", "meal", "mean", "means", "meant", "measure", "meat", "medicine", "meet", "melted", "member", "memory", "men", "mental", "merely", "met", "metal", "method", "mice", "middle", "might", "mighty", "mile", "military", "milk", "mill", "mind", "mine", "minerals", "minute", "mirror", "missing", "mission", "mistake", "mix", "mixture", "model", "modern", "molecular", "moment", "money", "monkey", "month", "mood", "moon", "more", "morning", "most", "mostly", "mother", "motion", "motor", "mountain", "mouse", "mouth", "move", "movement", "movie", "moving", "mud", "muscle", "music", "musical", "must", "my", "myself", "mysterious", "nails", "name", "nation", "national", "native", "natural", "naturally", "nature", "near", "nearby", "nearer", "nearest", "nearly", "necessary", "neck", "needed", "needle", "needs", "negative", "neighbor", "neighborhood", "nervous", "nest", "never", "new", "news", "newspaper", "next", "nice", "night", "nine", "no", "nobody", "nodded", "noise", "none", "noon", "nor", "north", "nose", "not", "note", "noted", "nothing", "notice", "noun", "now", "number", "numeral", "nuts", "object", "observe", "obtain", "occasionally", "occur", "ocean", "of", "off", "offer", "office", "officer", "official", "oil", "old", "older", "oldest", "on", "once", "one", "only", "onto", "open", "operation", "opinion", "opportunity", "opposite", "or", "orange", "orbit", "order", "ordinary", "organization", "organized", "origin", "original", "other", "ought", "our", "ourselves", "out", "outer", "outline", "outside", "over", "own", "owner", "oxygen", "pack", "package", "page", "paid", "pain", "paint", "pair", "palace", "pale", "pan", "paper", "paragraph", "parallel", "parent", "park", "part", "particles", "particular", "particularly", "partly", "parts", "party", "pass", "passage", "past", "path", "pattern", "pay", "peace", "pen", "pencil", "people", "per", "percent", "perfect", "perfectly", "perhaps", "period", "person", "personal", "pet", "phrase", "physical", "piano", "pick", "picture", "pictured", "pie", "piece", "pig", "pile", "pilot", "pine", "pink", "pipe", "pitch", "place", "plain", "plan", "plane", "planet", "planned", "planning", "plant", "plastic", "plate", "plates", "play", "pleasant", "please", "pleasure", "plenty", "plural", "plus", "pocket", "poem", "poet", "poetry", "point", "pole", "police", "policeman", "political", "pond", "pony", "pool", "poor", "popular", "population", "porch", "port", "position", "positive", "possible", "possibly", "post", "pot", "potatoes", "pound", "pour", "powder", "power", "powerful", "practical", "practice", "prepare", "present", "president", "press", "pressure", "pretty", "prevent", "previous", "price", "pride", "primitive", "principal", "principle", "printed", "private", "prize", "probably", "problem", "process", "produce", "product", "production", "program", "progress", "promised", "proper", "properly", "property", "protection", "proud", "prove", "provide", "public", "pull", "pupil", "pure", "purple", "purpose", "push", "put", "putting", "quarter", "queen", "question", "quick", "quickly", "quiet", "quietly", "quite", "rabbit", "race", "radio", "railroad", "rain", "raise", "ran", "ranch", "range", "rapidly", "rate", "rather", "raw", "rays", "reach", "read", "reader", "ready", "real", "realize", "rear", "reason", "recall", "receive", "recent", "recently", "recognize", "record", "red", "refer", "refused", "region", "regular", "related", "relationship", "religious", "remain", "remarkable", "remember", "remove", "repeat", "replace", "replied", "report", "represent", "require", "research", "respect", "rest", "result", "return", "review", "rhyme", "rhythm", "rice", "rich", "ride", "riding", "right", "ring", "rise", "rising", "river", "road", "roar", "rock", "rocket", "rocky", "rod", "roll", "roof", "room", "root", "rope", "rose", "rough", "round", "route", "row", "rubbed", "rubber", "rule", "ruler", "run", "running", "rush", "sad", "saddle", "safe", "safety", "said", "sail", "sale", "salmon", "salt", "same", "sand", "sang", "sat", "satellites", "satisfied", "save", "saved", "saw", "say", "scale", "scared", "scene", "school", "science", "scientific", "scientist", "score", "screen", "sea", "search", "season", "seat", "second", "secret", "section", "see", "seed", "seeing", "seems", "seen", "seldom", "select", "selection", "sell", "send", "sense", "sent", "sentence", "separate", "series", "serious", "serve", "service", "sets", "setting", "settle", "settlers", "seven", "several", "shade", "shadow", "shake", "shaking", "shall", "shallow", "shape", "share", "sharp", "she", "sheep", "sheet", "shelf", "shells", "shelter", "shine", "shinning", "ship", "shirt", "shoe", "shoot", "shop", "shore", "short", "shorter", "shot", "should", "shoulder", "shout", "show", "shown", "shut", "sick", "sides", "sight", "sign", "signal", "silence", "silent", "silk", "silly", "silver", "similar", "simple", "simplest", "simply", "since", "sing", "single", "sink", "sister", "sit", "sitting", "situation", "six", "size", "skill", "skin", "sky", "slabs", "slave", "sleep", "slept", "slide", "slight", "slightly", "slip", "slipped", "slope", "slow", "slowly", "small", "smaller", "smallest", "smell", "smile", "smoke", "smooth", "snake", "snow", "so", "soap", "social", "society", "soft", "softly", "soil", "solar", "sold", "soldier", "solid", "solution", "solve", "some", "somebody", "somehow", "someone", "something", "sometime", "somewhere", "son", "song", "soon", "sort", "sound", "source", "south", "southern", "space", "speak", "special", "species", "specific", "speech", "speed", "spell", "spend", "spent", "spider", "spin", "spirit", "spite", "split", "spoken", "sport", "spread", "spring", "square", "stage", "stairs", "stand", "standard", "star", "stared", "start", "state", "statement", "station", "stay", "steady", "steam", "steel", "steep", "stems", "step", "stepped", "stick", "stiff", "still", "stock", "stomach", "stone", "stood", "stop", "stopped", "store", "storm", "story", "stove", "straight", "strange", "stranger", "straw", "stream", "street", "strength", "stretch", "strike", "string", "strip", "strong", "stronger", "struck", "structure", "struggle", "stuck", "student", "studied", "studying", "subject", "substance", "success", "successful", "such", "sudden", "suddenly", "sugar", "suggest", "suit", "sum", "summer", "sun", "sunlight", "supper", "supply", "support", "suppose", "sure", "surface", "surprise", "surrounded", "swam", "sweet", "swept", "swim", "swimming", "swing", "swung", "syllable", "symbol", "system", "table", "tail", "take", "taken", "tales", "talk", "tall", "tank", "tape", "task", "taste", "taught", "tax", "tea", "teach", "teacher", "team", "tears", "teeth", "telephone", "television", "tell", "temperature", "ten", "tent", "term", "terrible", "test", "than", "thank", "that", "thee", "them", "themselves", "then", "theory", "there", "therefore", "these", "they", "thick", "thin", "thing", "think", "third", "thirty", "this", "those", "thou", "though", "thought", "thousand", "thread", "three", "threw", "throat", "through", "throughout", "throw", "thrown", "thumb", "thus", "thy", "tide", "tie", "tight", "tightly", "till", "time", "tin", "tiny", "tip", "tired", "title", "to", "tobacco", "today", "together", "told", "tomorrow", "tone", "tongue", "tonight", "too", "took", "tool", "top", "topic", "torn", "total", "touch", "toward", "tower", "town", "toy", "trace", "track", "trade", "traffic", "trail", "train", "transportation", "trap", "travel", "treated", "tree", "triangle", "tribe", "trick", "tried", "trip", "troops", "tropical", "trouble", "truck", "trunk", "truth", "try", "tube", "tune", "turn", "twelve", "twenty", "twice", "two", "type", "typical", "uncle", "under", "underline", "understanding", "unhappy", "union", "unit", "universe", "unknown", "unless", "until", "unusual", "up", "upon", "upper", "upward", "us", "use", "useful", "using", "usual", "usually", "valley", "valuable", "value", "vapor", "variety", "various", "vast", "vegetable", "verb", "vertical", "very", "vessels", "victory", "view", "village", "visit", "visitor", "voice", "volume", "vote", "vowel", "voyage", "wagon", "wait", "walk", "wall", "want", "war", "warm", "warn", "was", "wash", "waste", "watch", "water", "wave", "way", "we", "weak", "wealth", "wear", "weather", "week", "weigh", "weight", "welcome", "well", "went", "were", "west", "western", "wet", "whale", "what", "whatever", "wheat", "wheel", "when", "whenever", "where", "wherever", "whether", "which", "while", "whispered", "whistle", "white", "who", "whole", "whom", "whose", "why", "wide", "widely", "wife", "wild", "will", "willing", "win", "wind", "window", "wing", "winter", "wire", "wise", "wish", "with", "within", "without", "wolf", "women", "won", "wonder", "wonderful", "wood", "wooden", "wool", "word", "wore", "work", "worker", "world", "worried", "worry", "worse", "worth", "would", "wrapped", "write", "writer", "writing", "written", "wrong", "wrote", "yard", "year", "yellow", "yes", "yesterday", "yet", "you", "young", "younger", "your", "yourself", "youth", "zero", "zebra", "zipper", "zoo", "zulu"];

function words(options) {
  function word() {
    if (options && options.maxLength > 1) {
      return generateWordWithMaxLength();
    } else {
      return generateRandomWord();
    }
  }

  function generateWordWithMaxLength() {
    var rightSize = false;
    var wordUsed;

    while (!rightSize) {
      wordUsed = generateRandomWord();

      if (wordUsed.length <= options.maxLength) {
        rightSize = true;
      }
    }

    return wordUsed;
  }

  function generateRandomWord() {
    return wordList[randInt(wordList.length)];
  }

  function randInt(lessThan) {
    return Math.floor(Math.random() * lessThan);
  } // No arguments = generate one word


  if (typeof options === 'undefined') {
    return word();
  } // Just a number = return that many words


  if (typeof options === 'number') {
    options = {
      exactly: options
    };
  } // options supported: exactly, min, max, join


  if (options.exactly) {
    options.min = options.exactly;
    options.max = options.exactly;
  } // not a number = one word par string


  if (typeof options.wordsPerString !== 'number') {
    options.wordsPerString = 1;
  } //not a function = returns the raw word


  if (typeof options.formatter !== 'function') {
    options.formatter = function (word) {
      return word;
    };
  } //not a string = separator is a space


  if (typeof options.separator !== 'string') {
    options.separator = ' ';
  }

  var total = options.min + randInt(options.max + 1 - options.min);
  var results = [];
  var token = '';
  var relativeIndex = 0;

  for (var i = 0; i < total * options.wordsPerString; i++) {
    if (relativeIndex === options.wordsPerString - 1) {
      token += options.formatter(word(), relativeIndex);
    } else {
      token += options.formatter(word(), relativeIndex) + options.separator;
    }

    relativeIndex++;

    if ((i + 1) % options.wordsPerString === 0) {
      results.push(token);
      token = '';
      relativeIndex = 0;
    }
  }

  if (typeof options.join === 'string') {
    results = results.join(options.join);
  }

  return results;
}

var randomWords$1 = words; // Export the word list as it is often useful

words.wordList = wordList;

function repeat(array, repetitions) {
  var unpack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var arr_isArray = Array.isArray(array);
  var rep_isArray = Array.isArray(repetitions); // if array is not an array, then we just repeat the item

  if (!arr_isArray) {
    if (!rep_isArray) {
      array = [array];
      repetitions = [repetitions];
    } else {
      repetitions = [repetitions[0]];
      console.log("Unclear parameters given to randomization.repeat. Multiple set sizes specified, but only one item exists to sample. Proceeding using the first set size.");
    }
  } else {
    // if repetitions is not an array, but array is, then we
    // repeat repetitions for each entry in array
    if (!rep_isArray) {
      var reps = [];

      for (var i = 0; i < array.length; i++) {
        reps.push(repetitions);
      }

      repetitions = reps;
    } else {
      if (array.length != repetitions.length) {
        console.warn("Unclear parameters given to randomization.repeat. Items and repetitions are unequal lengths. Behavior may not be as expected."); // throw warning if repetitions is too short, use first rep ONLY.

        if (repetitions.length < array.length) {
          var _reps = [];

          for (var _i6 = 0; _i6 < array.length; _i6++) {
            _reps.push(repetitions);
          }

          repetitions = _reps;
        } else {
          // throw warning if too long, and then use the first N
          repetitions = repetitions.slice(0, array.length);
        }
      }
    }
  } // should be clear at this point to assume that array and repetitions are arrays with == length


  var allsamples = [];

  for (var _i7 = 0; _i7 < array.length; _i7++) {
    for (var j = 0; j < repetitions[_i7]; j++) {
      if (array[_i7] == null || _typeof(array[_i7]) != "object") {
        allsamples.push(array[_i7]);
      } else {
        allsamples.push(Object.assign({}, array[_i7]));
      }
    }
  }

  var out = shuffle(allsamples);

  if (unpack) {
    out = unpackArray(out);
  }

  return out;
}

function shuffle(array) {
  if (!Array.isArray(array)) {
    console.error("Argument to shuffle() must be an array.");
  }

  var copy_array = array.slice(0);
  var m = copy_array.length,
      t,
      i; // While there remain elements to shuffle…

  while (m) {
    // Pick a remaining element…
    i = Math.floor(Math.random() * m--); // And swap it with the current element.

    t = copy_array[m];
    copy_array[m] = copy_array[i];
    copy_array[i] = t;
  }

  return copy_array;
}

function shuffleNoRepeats(arr, equalityTest) {
  if (!Array.isArray(arr)) {
    console.error("First argument to shuffleNoRepeats() must be an array.");
  }

  if (typeof equalityTest !== "undefined" && typeof equalityTest !== "function") {
    console.error("Second argument to shuffleNoRepeats() must be a function.");
  } // define a default equalityTest


  if (typeof equalityTest == "undefined") {
    equalityTest = function equalityTest(a, b) {
      if (a === b) {
        return true;
      } else {
        return false;
      }
    };
  }

  var random_shuffle = shuffle(arr);

  for (var i = 0; i < random_shuffle.length - 1; i++) {
    if (equalityTest(random_shuffle[i], random_shuffle[i + 1])) {
      // neighbors are equal, pick a new random neighbor to swap (not the first or last element, to avoid edge cases)
      var random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1; // test to make sure the new neighbor isn't equal to the old one

      while (equalityTest(random_shuffle[i + 1], random_shuffle[random_pick]) || equalityTest(random_shuffle[i + 1], random_shuffle[random_pick + 1]) || equalityTest(random_shuffle[i + 1], random_shuffle[random_pick - 1])) {
        random_pick = Math.floor(Math.random() * (random_shuffle.length - 2)) + 1;
      }

      var new_neighbor = random_shuffle[random_pick];
      random_shuffle[random_pick] = random_shuffle[i + 1];
      random_shuffle[i + 1] = new_neighbor;
    }
  }

  return random_shuffle;
}

function shuffleAlternateGroups(arr_groups) {
  var random_group_order = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
  var n_groups = arr_groups.length;

  if (n_groups == 1) {
    console.warn("shuffleAlternateGroups() was called with only one group. Defaulting to simple shuffle.");
    return shuffle(arr_groups[0]);
  }

  var group_order = [];

  for (var i = 0; i < n_groups; i++) {
    group_order.push(i);
  }

  if (random_group_order) {
    group_order = shuffle(group_order);
  }

  var randomized_groups = [];
  var min_length = null;

  for (var _i8 = 0; _i8 < n_groups; _i8++) {
    min_length = min_length === null ? arr_groups[_i8].length : Math.min(min_length, arr_groups[_i8].length);
    randomized_groups.push(shuffle(arr_groups[_i8]));
  }

  var out = [];

  for (var _i9 = 0; _i9 < min_length; _i9++) {
    for (var j = 0; j < group_order.length; j++) {
      out.push(randomized_groups[group_order[j]][_i9]);
    }
  }

  return out;
}

function sampleWithoutReplacement(arr, size) {
  if (!Array.isArray(arr)) {
    console.error("First argument to sampleWithoutReplacement() must be an array");
  }

  if (size > arr.length) {
    console.error("Cannot take a sample larger than the size of the set of items to sample.");
  }

  return shuffle(arr).slice(0, size);
}

function sampleWithReplacement(arr, size, weights) {
  if (!Array.isArray(arr)) {
    console.error("First argument to sampleWithReplacement() must be an array");
  }

  var normalized_weights = [];

  if (typeof weights !== "undefined") {
    if (weights.length !== arr.length) {
      console.error("The length of the weights array must equal the length of the array " + "to be sampled from.");
    }

    var weight_sum = 0;

    var _iterator25 = _createForOfIteratorHelper(weights),
        _step25;

    try {
      for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {
        var weight = _step25.value;
        weight_sum += weight;
      }
    } catch (err) {
      _iterator25.e(err);
    } finally {
      _iterator25.f();
    }

    var _iterator26 = _createForOfIteratorHelper(weights),
        _step26;

    try {
      for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {
        var _weight = _step26.value;
        normalized_weights.push(_weight / weight_sum);
      }
    } catch (err) {
      _iterator26.e(err);
    } finally {
      _iterator26.f();
    }
  } else {
    for (var i = 0; i < arr.length; i++) {
      normalized_weights.push(1 / arr.length);
    }
  }

  var cumulative_weights = [normalized_weights[0]];

  for (var _i10 = 1; _i10 < normalized_weights.length; _i10++) {
    cumulative_weights.push(normalized_weights[_i10] + cumulative_weights[_i10 - 1]);
  }

  var samp = [];

  for (var _i11 = 0; _i11 < size; _i11++) {
    var rnd = Math.random();
    var index = 0;

    while (rnd > cumulative_weights[index]) {
      index++;
    }

    samp.push(arr[index]);
  }

  return samp;
}

function factorial(factors) {
  var repetitions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;
  var unpack = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
  var design = [{}];

  for (var _i12 = 0, _Object$entries2 = Object.entries(factors); _i12 < _Object$entries2.length; _i12++) {
    var _Object$entries2$_i = _slicedToArray(_Object$entries2[_i12], 2),
        factorName = _Object$entries2$_i[0],
        factor = _Object$entries2$_i[1];

    var new_design = [];

    var _iterator27 = _createForOfIteratorHelper(factor),
        _step27;

    try {
      for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {
        var level = _step27.value;

        var _iterator28 = _createForOfIteratorHelper(design),
            _step28;

        try {
          for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {
            var cell = _step28.value;
            new_design.push(Object.assign(Object.assign({}, cell), _defineProperty({}, factorName, level)));
          }
        } catch (err) {
          _iterator28.e(err);
        } finally {
          _iterator28.f();
        }
      }
    } catch (err) {
      _iterator27.e(err);
    } finally {
      _iterator27.f();
    }

    design = new_design;
  }

  return repeat(design, repetitions, unpack);
}

function randomID() {
  var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 32;
  var result = "";
  var chars = "0123456789abcdefghjklmnopqrstuvwxyz";

  for (var i = 0; i < length; i++) {
    result += chars[Math.floor(Math.random() * chars.length)];
  }

  return result;
}
/**
 * Generate a random integer from `lower` to `upper`, inclusive of both end points.
 * @param lower The lowest value it is possible to generate
 * @param upper The highest value it is possible to generate
 * @returns A random integer
 */


function randomInt(lower, upper) {
  if (upper < lower) {
    throw new Error("Upper boundary must be less than or equal to lower boundary");
  }

  return lower + Math.floor(Math.random() * (upper - lower + 1));
}
/**
 * Generates a random sample from a Bernoulli distribution.
 * @param p The probability of sampling 1.
 * @returns 0, with probability 1-p, or 1, with probability p.
 */


function sampleBernoulli(p) {
  return Math.random() <= p ? 1 : 0;
}

function sampleNormal(mean, standard_deviation) {
  return randn_bm() * standard_deviation + mean;
}

function sampleExponential(rate) {
  return -Math.log(Math.random()) / rate;
}

function sampleExGaussian(mean, standard_deviation, rate) {
  var positive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;
  var s = sampleNormal(mean, standard_deviation) + sampleExponential(rate);

  if (positive) {
    while (s <= 0) {
      s = sampleNormal(mean, standard_deviation) + sampleExponential(rate);
    }
  }

  return s;
}
/**
 * Generate one or more random words.
 *
 * This is a wrapper function for the {@link https://www.npmjs.com/package/random-words `random-words` npm package}.
 *
 * @param opts An object with optional properties `min`, `max`, `exactly`,
 * `join`, `maxLength`, `wordsPerString`, `separator`, and `formatter`.
 *
 * @returns An array of words or a single string, depending on parameter choices.
 */


function randomWords(opts) {
  return randomWords$1(opts);
} // Box-Muller transformation for a random sample from normal distribution with mean = 0, std = 1
// https://stackoverflow.com/a/36481059/3726673


function randn_bm() {
  var u = 0,
      v = 0;

  while (u === 0) {
    u = Math.random();
  } //Converting [0,1) to (0,1)


  while (v === 0) {
    v = Math.random();
  }

  return Math.sqrt(-2.0 * Math.log(u)) * Math.cos(2.0 * Math.PI * v);
}

function unpackArray(array) {
  var out = {};

  var _iterator29 = _createForOfIteratorHelper(array),
      _step29;

  try {
    for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {
      var x = _step29.value;

      for (var _i13 = 0, _Object$keys3 = Object.keys(x); _i13 < _Object$keys3.length; _i13++) {
        var key = _Object$keys3[_i13];

        if (typeof out[key] === "undefined") {
          out[key] = [];
        }

        out[key].push(x[key]);
      }
    }
  } catch (err) {
    _iterator29.e(err);
  } finally {
    _iterator29.f();
  }

  return out;
}

var randomization = /*#__PURE__*/Object.freeze({
  __proto__: null,
  repeat: repeat,
  shuffle: shuffle,
  shuffleNoRepeats: shuffleNoRepeats,
  shuffleAlternateGroups: shuffleAlternateGroups,
  sampleWithoutReplacement: sampleWithoutReplacement,
  sampleWithReplacement: sampleWithReplacement,
  factorial: factorial,
  randomID: randomID,
  randomInt: randomInt,
  sampleBernoulli: sampleBernoulli,
  sampleNormal: sampleNormal,
  sampleExponential: sampleExponential,
  sampleExGaussian: sampleExGaussian,
  randomWords: randomWords
});
/**
 * Gets information about the Mechanical Turk Environment, HIT, Assignment, and Worker
 * by parsing the URL variables that Mechanical Turk generates.
 * @returns An object containing information about the Mechanical Turk Environment, HIT, Assignment, and Worker.
 */

function turkInfo() {
  var turk = {
    previewMode: false,
    outsideTurk: false,
    hitId: "INVALID_URL_PARAMETER",
    assignmentId: "INVALID_URL_PARAMETER",
    workerId: "INVALID_URL_PARAMETER",
    turkSubmitTo: "INVALID_URL_PARAMETER"
  };

  var param = function param(url, name) {
    name = name.replace(/[\[]/, "\\[").replace(/[\]]/, "\\]");
    var regexS = "[\\?&]" + name + "=([^&#]*)";
    var regex = new RegExp(regexS);
    var results = regex.exec(url);
    return results == null ? "" : results[1];
  };

  var src = param(window.location.href, "assignmentId") ? window.location.href : document.referrer;
  var keys = ["assignmentId", "hitId", "workerId", "turkSubmitTo"];
  keys.map(function (key) {
    turk[key] = unescape(param(src, key));
  });
  turk.previewMode = turk.assignmentId == "ASSIGNMENT_ID_NOT_AVAILABLE";
  turk.outsideTurk = !turk.previewMode && turk.hitId === "" && turk.assignmentId == "" && turk.workerId == "";
  return turk;
}
/**
 * Send data to Mechnical Turk for storage.
 * @param data An object containing `key:value` pairs to send to Mechanical Turk. Values
 * cannot contain nested objects, arrays, or functions.
 * @returns Nothing
 */


function submitToTurk(data) {
  var turk = turkInfo();
  var assignmentId = turk.assignmentId;
  var turkSubmitTo = turk.turkSubmitTo;
  if (!assignmentId || !turkSubmitTo) return;
  var form = document.createElement("form");
  form.method = "POST";
  form.action = turkSubmitTo + "/mturk/externalSubmit?assignmentId=" + assignmentId;

  for (var key in data) {
    if (data.hasOwnProperty(key)) {
      var hiddenField = document.createElement("input");
      hiddenField.type = "hidden";
      hiddenField.name = key;
      hiddenField.id = key;
      hiddenField.value = data[key];
      form.appendChild(hiddenField);
    }
  }

  document.body.appendChild(form);
  form.submit();
}

var turk = /*#__PURE__*/Object.freeze({
  __proto__: null,
  turkInfo: turkInfo,
  submitToTurk: submitToTurk
});

var TimelineNode = /*#__PURE__*/function () {
  // constructor
  function TimelineNode(jsPsych, parameters, parent, relativeID) {
    this.jsPsych = jsPsych; // track progress through the node

    this.progress = {
      current_location: -1,
      current_variable_set: 0,
      current_repetition: 0,
      current_iteration: 0,
      done: false
    }; // store a link to the parent of this node

    this.parent_node = parent; // create the ID for this node

    this.relative_id = typeof parent === "undefined" ? 0 : relativeID; // check if there is a timeline parameter
    // if there is, then this node has its own timeline

    if (typeof parameters.timeline !== "undefined") {
      // create timeline properties
      this.timeline_parameters = {
        timeline: [],
        loop_function: parameters.loop_function,
        conditional_function: parameters.conditional_function,
        sample: parameters.sample,
        randomize_order: typeof parameters.randomize_order == "undefined" ? false : parameters.randomize_order,
        repetitions: typeof parameters.repetitions == "undefined" ? 1 : parameters.repetitions,
        timeline_variables: typeof parameters.timeline_variables == "undefined" ? [{}] : parameters.timeline_variables,
        on_timeline_finish: parameters.on_timeline_finish,
        on_timeline_start: parameters.on_timeline_start
      };
      this.setTimelineVariablesOrder(); // extract all of the node level data and parameters
      // but remove all of the timeline-level specific information
      // since this will be used to copy things down hierarchically

      var node_data = Object.assign({}, parameters);
      delete node_data.timeline;
      delete node_data.conditional_function;
      delete node_data.loop_function;
      delete node_data.randomize_order;
      delete node_data.repetitions;
      delete node_data.timeline_variables;
      delete node_data.sample;
      delete node_data.on_timeline_start;
      delete node_data.on_timeline_finish;
      this.node_trial_data = node_data; // store for later...
      // create a TimelineNode for each element in the timeline

      for (var i = 0; i < parameters.timeline.length; i++) {
        // merge parameters
        var merged_parameters = Object.assign({}, node_data, parameters.timeline[i]); // merge any data from the parent node into child nodes

        if (_typeof(node_data.data) == "object" && _typeof(parameters.timeline[i].data) == "object") {
          var merged_data = Object.assign({}, node_data.data, parameters.timeline[i].data);
          merged_parameters.data = merged_data;
        }

        this.timeline_parameters.timeline.push(new TimelineNode(this.jsPsych, merged_parameters, this, i));
      }
    } // if there is no timeline parameter, then this node is a trial node
    else {
      // check to see if a valid trial type is defined
      if (typeof parameters.type === "undefined") {
        console.error('Trial level node is missing the "type" parameter. The parameters for the node are: ' + JSON.stringify(parameters));
      } // create a deep copy of the parameters for the trial


      this.trial_parameters = Object.assign({}, parameters);
    }
  } // recursively get the next trial to run.
  // if this node is a leaf (trial), then return the trial.
  // otherwise, recursively find the next trial in the child timeline.


  var _proto9 = TimelineNode.prototype;

  _proto9.trial = function trial() {
    if (typeof this.timeline_parameters == "undefined") {
      // returns a clone of the trial_parameters to
      // protect functions.
      return deepCopy(this.trial_parameters);
    } else {
      if (this.progress.current_location >= this.timeline_parameters.timeline.length) {
        return null;
      } else {
        return this.timeline_parameters.timeline[this.progress.current_location].trial();
      }
    }
  };

  _proto9.markCurrentTrialComplete = function markCurrentTrialComplete() {
    if (typeof this.timeline_parameters === "undefined") {
      this.progress.done = true;
    } else {
      this.timeline_parameters.timeline[this.progress.current_location].markCurrentTrialComplete();
    }
  };

  _proto9.nextRepetiton = function nextRepetiton() {
    this.setTimelineVariablesOrder();
    this.progress.current_location = -1;
    this.progress.current_variable_set = 0;
    this.progress.current_repetition++;

    for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {
      this.timeline_parameters.timeline[i].reset();
    }
  } // set the order for going through the timeline variables array
  ;

  _proto9.setTimelineVariablesOrder = function setTimelineVariablesOrder() {
    var timeline_parameters = this.timeline_parameters; // check to make sure this node has variables

    if (typeof timeline_parameters === "undefined" || typeof timeline_parameters.timeline_variables === "undefined") {
      return;
    }

    var order = [];

    for (var i = 0; i < timeline_parameters.timeline_variables.length; i++) {
      order.push(i);
    }

    if (typeof timeline_parameters.sample !== "undefined") {
      if (timeline_parameters.sample.type == "custom") {
        order = timeline_parameters.sample.fn(order);
      } else if (timeline_parameters.sample.type == "with-replacement") {
        order = sampleWithReplacement(order, timeline_parameters.sample.size, timeline_parameters.sample.weights);
      } else if (timeline_parameters.sample.type == "without-replacement") {
        order = sampleWithoutReplacement(order, timeline_parameters.sample.size);
      } else if (timeline_parameters.sample.type == "fixed-repetitions") {
        order = repeat(order, timeline_parameters.sample.size, false);
      } else if (timeline_parameters.sample.type == "alternate-groups") {
        order = shuffleAlternateGroups(timeline_parameters.sample.groups, timeline_parameters.sample.randomize_group_order);
      } else {
        console.error('Invalid type in timeline sample parameters. Valid options for type are "custom", "with-replacement", "without-replacement", "fixed-repetitions", and "alternate-groups"');
      }
    }

    if (timeline_parameters.randomize_order) {
      order = shuffle(order);
    }

    this.progress.order = order;
  } // next variable set
  ;

  _proto9.nextSet = function nextSet() {
    this.progress.current_location = -1;
    this.progress.current_variable_set++;

    for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {
      this.timeline_parameters.timeline[i].reset();
    }
  } // update the current trial node to be completed
  // returns true if the node is complete after advance (all subnodes are also complete)
  // returns false otherwise
  ;

  _proto9.advance = function advance() {
    var progress = this.progress;
    var timeline_parameters = this.timeline_parameters;
    var internal = this.jsPsych.internal; // first check to see if done

    if (progress.done) {
      return true;
    } // if node has not started yet (progress.current_location == -1),
    // then try to start the node.


    if (progress.current_location == -1) {
      // check for on_timeline_start and conditonal function on nodes with timelines
      if (typeof timeline_parameters !== "undefined") {
        // only run the conditional function if this is the first repetition of the timeline when
        // repetitions > 1, and only when on the first variable set
        if (typeof timeline_parameters.conditional_function !== "undefined" && progress.current_repetition == 0 && progress.current_variable_set == 0) {
          internal.call_immediate = true;
          var conditional_result = timeline_parameters.conditional_function();
          internal.call_immediate = false; // if the conditional_function() returns false, then the timeline
          // doesn't run and is marked as complete.

          if (conditional_result == false) {
            progress.done = true;
            return true;
          }
        } // if we reach this point then the node has its own timeline and will start
        // so we need to check if there is an on_timeline_start function if we are on the first variable set


        if (typeof timeline_parameters.on_timeline_start !== "undefined" && progress.current_variable_set == 0) {
          timeline_parameters.on_timeline_start();
        }
      } // if we reach this point, then either the node doesn't have a timeline of the
      // conditional function returned true and it can start


      progress.current_location = 0; // call advance again on this node now that it is pointing to a new location

      return this.advance();
    } // if this node has a timeline, propogate down to the current trial.


    if (typeof timeline_parameters !== "undefined") {
      var have_node_to_run = false; // keep incrementing the location in the timeline until one of the nodes reached is incomplete

      while (progress.current_location < timeline_parameters.timeline.length && have_node_to_run == false) {
        // check to see if the node currently pointed at is done
        var target_complete = timeline_parameters.timeline[progress.current_location].advance();

        if (!target_complete) {
          have_node_to_run = true;
          return false;
        } else {
          progress.current_location++;
        }
      } // if we've reached the end of the timeline (which, if the code is here, we have)
      // there are a few steps to see what to do next...
      // first, check the timeline_variables to see if we need to loop through again
      // with a new set of variables


      if (progress.current_variable_set < progress.order.length - 1) {
        // reset the progress of the node to be with the new set
        this.nextSet(); // then try to advance this node again.

        return this.advance();
      } // if we're all done with the timeline_variables, then check to see if there are more repetitions
      else if (progress.current_repetition < timeline_parameters.repetitions - 1) {
        this.nextRepetiton(); // check to see if there is an on_timeline_finish function

        if (typeof timeline_parameters.on_timeline_finish !== "undefined") {
          timeline_parameters.on_timeline_finish();
        }

        return this.advance();
      } // if we're all done with the repetitions...
      else {
        // check to see if there is an on_timeline_finish function
        if (typeof timeline_parameters.on_timeline_finish !== "undefined") {
          timeline_parameters.on_timeline_finish();
        } // if we're all done with the repetitions, check if there is a loop function.


        if (typeof timeline_parameters.loop_function !== "undefined") {
          internal.call_immediate = true;

          if (timeline_parameters.loop_function(this.generatedData())) {
            this.reset();
            internal.call_immediate = false;
            return this.parent_node.advance();
          } else {
            progress.done = true;
            internal.call_immediate = false;
            return true;
          }
        }
      } // no more loops on this timeline, we're done!


      progress.done = true;
      return true;
    }
  } // check the status of the done flag
  ;

  _proto9.isComplete = function isComplete() {
    return this.progress.done;
  } // getter method for timeline variables
  ;

  _proto9.getTimelineVariableValue = function getTimelineVariableValue(variable_name) {
    if (typeof this.timeline_parameters == "undefined") {
      return undefined;
    }

    var v = this.timeline_parameters.timeline_variables[this.progress.order[this.progress.current_variable_set]][variable_name];
    return v;
  } // recursive upward search for timeline variables
  ;

  _proto9.findTimelineVariable = function findTimelineVariable(variable_name) {
    var v = this.getTimelineVariableValue(variable_name);

    if (typeof v == "undefined") {
      if (typeof this.parent_node !== "undefined") {
        return this.parent_node.findTimelineVariable(variable_name);
      } else {
        return undefined;
      }
    } else {
      return v;
    }
  } // recursive downward search for active trial to extract timeline variable
  ;

  _proto9.timelineVariable = function timelineVariable(variable_name) {
    if (typeof this.timeline_parameters == "undefined") {
      return this.findTimelineVariable(variable_name);
    } else {
      // if progress.current_location is -1, then the timeline variable is being evaluated
      // in a function that runs prior to the trial starting, so we should treat that trial
      // as being the active trial for purposes of finding the value of the timeline variable
      var loc = Math.max(0, this.progress.current_location); // if loc is greater than the number of elements on this timeline, then the timeline
      // variable is being evaluated in a function that runs after the trial on the timeline
      // are complete but before advancing to the next (like a loop_function).
      // treat the last active trial as the active trial for this purpose.

      if (loc == this.timeline_parameters.timeline.length) {
        loc = loc - 1;
      } // now find the variable


      return this.timeline_parameters.timeline[loc].timelineVariable(variable_name);
    }
  } // recursively get all the timeline variables for this trial
  ;

  _proto9.allTimelineVariables = function allTimelineVariables() {
    var all_tvs = this.allTimelineVariablesNames();
    var all_tvs_vals = {};

    for (var i = 0; i < all_tvs.length; i++) {
      all_tvs_vals[all_tvs[i]] = this.timelineVariable(all_tvs[i]);
    }

    return all_tvs_vals;
  } // helper to get all the names at this stage.
  ;

  _proto9.allTimelineVariablesNames = function allTimelineVariablesNames() {
    var so_far = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];

    if (typeof this.timeline_parameters !== "undefined") {
      so_far = so_far.concat(Object.keys(this.timeline_parameters.timeline_variables[this.progress.order[this.progress.current_variable_set]])); // if progress.current_location is -1, then the timeline variable is being evaluated
      // in a function that runs prior to the trial starting, so we should treat that trial
      // as being the active trial for purposes of finding the value of the timeline variable

      var loc = Math.max(0, this.progress.current_location); // if loc is greater than the number of elements on this timeline, then the timeline
      // variable is being evaluated in a function that runs after the trial on the timeline
      // are complete but before advancing to the next (like a loop_function).
      // treat the last active trial as the active trial for this purpose.

      if (loc == this.timeline_parameters.timeline.length) {
        loc = loc - 1;
      } // now find the variable


      return this.timeline_parameters.timeline[loc].allTimelineVariablesNames(so_far);
    }

    if (typeof this.timeline_parameters == "undefined") {
      return so_far;
    }
  } // recursively get the number of **trials** contained in the timeline
  // assuming that while loops execute exactly once and if conditionals
  // always run
  ;

  _proto9.length = function length() {
    var length = 0;

    if (typeof this.timeline_parameters !== "undefined") {
      for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {
        length += this.timeline_parameters.timeline[i].length();
      }
    } else {
      return 1;
    }

    return length;
  } // return the percentage of trials completed, grouped at the first child level
  // counts a set of trials as complete when the child node is done
  ;

  _proto9.percentComplete = function percentComplete() {
    var total_trials = this.length();
    var completed_trials = 0;

    for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {
      if (this.timeline_parameters.timeline[i].isComplete()) {
        completed_trials += this.timeline_parameters.timeline[i].length();
      }
    }

    return completed_trials / total_trials * 100;
  } // resets the node and all subnodes to original state
  // but increments the current_iteration counter
  ;

  _proto9.reset = function reset() {
    this.progress.current_location = -1;
    this.progress.current_repetition = 0;
    this.progress.current_variable_set = 0;
    this.progress.current_iteration++;
    this.progress.done = false;
    this.setTimelineVariablesOrder();

    if (typeof this.timeline_parameters != "undefined") {
      for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {
        this.timeline_parameters.timeline[i].reset();
      }
    }
  } // mark this node as finished
  ;

  _proto9.end = function end() {
    this.progress.done = true;
  } // recursively end whatever sub-node is running the current trial
  ;

  _proto9.endActiveNode = function endActiveNode() {
    if (typeof this.timeline_parameters == "undefined") {
      this.end();
      this.parent_node.end();
    } else {
      this.timeline_parameters.timeline[this.progress.current_location].endActiveNode();
    }
  } // get a unique ID associated with this node
  // the ID reflects the current iteration through this node.
  ;

  _proto9.ID = function ID() {
    var id = "";

    if (typeof this.parent_node == "undefined") {
      return "0." + this.progress.current_iteration;
    } else {
      id += this.parent_node.ID() + "-";
      id += this.relative_id + "." + this.progress.current_iteration;
      return id;
    }
  } // get the ID of the active trial
  ;

  _proto9.activeID = function activeID() {
    if (typeof this.timeline_parameters == "undefined") {
      return this.ID();
    } else {
      return this.timeline_parameters.timeline[this.progress.current_location].activeID();
    }
  } // get all the data generated within this node
  ;

  _proto9.generatedData = function generatedData() {
    return this.jsPsych.data.getDataByTimelineNode(this.ID());
  } // get all the trials of a particular type
  ;

  _proto9.trialsOfType = function trialsOfType(type) {
    if (typeof this.timeline_parameters == "undefined") {
      if (this.trial_parameters.type == type) {
        return this.trial_parameters;
      } else {
        return [];
      }
    } else {
      var trials = [];

      for (var i = 0; i < this.timeline_parameters.timeline.length; i++) {
        var t = this.timeline_parameters.timeline[i].trialsOfType(type);
        trials = trials.concat(t);
      }

      return trials;
    }
  } // add new trials to end of this timeline
  ;

  _proto9.insert = function insert(parameters) {
    if (typeof this.timeline_parameters === "undefined") {
      console.error("Cannot add new trials to a trial-level node.");
    } else {
      this.timeline_parameters.timeline.push(new TimelineNode(this.jsPsych, Object.assign(Object.assign({}, this.node_trial_data), parameters), this, this.timeline_parameters.timeline.length));
    }
  };

  return TimelineNode;
}();

function delay(ms) {
  return new Promise(function (resolve) {
    return setTimeout(resolve, ms);
  });
}

var JsPsych = /*#__PURE__*/function () {
  function JsPsych(options) {
    this.extensions = {};
    this.turk = turk;
    this.randomization = randomization;
    this.utils = utils; //
    // private variables
    //

    /**
     * options
     */

    this.opts = {}; // flow control

    this.global_trial_index = 0;
    this.current_trial = {};
    this.current_trial_finished = false;
    /**
     * is the experiment paused?
     */

    this.paused = false;
    this.waiting = false;
    /**
     * is the page retrieved directly via file:// protocol (true) or hosted on a server (false)?
     */

    this.file_protocol = false;
    /**
     * is the experiment running in `simulate()` mode
     */

    this.simulation_mode = null; // storing a single webaudio context to prevent problems with multiple inits
    // of jsPsych

    this.webaudio_context = null;
    this.internal = {
      /**
       * this flag is used to determine whether we are in a scope where
       * jsPsych.timelineVariable() should be executed immediately or
       * whether it should return a function to access the variable later.
       *
       **/
      call_immediate: false
    };
    this.progress_bar_amount = 0; // override default options if user specifies an option

    options = Object.assign({
      display_element: undefined,
      on_finish: function on_finish() {},
      on_trial_start: function on_trial_start() {},
      on_trial_finish: function on_trial_finish() {},
      on_data_update: function on_data_update() {},
      on_interaction_data_update: function on_interaction_data_update() {},
      on_close: function on_close() {},
      use_webaudio: true,
      exclusions: {},
      show_progress_bar: false,
      message_progress_bar: "Completion Progress",
      auto_update_progress_bar: true,
      default_iti: 0,
      minimum_valid_rt: 0,
      experiment_width: null,
      override_safe_mode: false,
      case_sensitive_responses: false,
      extensions: []
    }, options);
    this.opts = options;
    autoBind(this); // so we can pass JsPsych methods as callbacks and `this` remains the JsPsych instance

    this.webaudio_context = typeof window !== "undefined" && typeof window.AudioContext !== "undefined" ? new AudioContext() : null; // detect whether page is running in browser as a local file, and if so, disable web audio and video preloading to prevent CORS issues

    if (window.location.protocol == "file:" && (options.override_safe_mode === false || typeof options.override_safe_mode === "undefined")) {
      options.use_webaudio = false;
      this.file_protocol = true;
      console.warn("jsPsych detected that it is running via the file:// protocol and not on a web server. " + "To prevent issues with cross-origin requests, Web Audio and video preloading have been disabled. " + "If you would like to override this setting, you can set 'override_safe_mode' to 'true' in initJsPsych. " + "For more information, see: https://www.jspsych.org/overview/running-experiments");
    } // initialize modules


    this.data = new JsPsychData(this);
    this.pluginAPI = createJointPluginAPIObject(this); // create instances of extensions

    var _iterator30 = _createForOfIteratorHelper(options.extensions),
        _step30;

    try {
      for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {
        var extension = _step30.value;
        this.extensions[extension.type.info.name] = new extension.type(this);
      } // initialize audio context based on options and browser capabilities

    } catch (err) {
      _iterator30.e(err);
    } finally {
      _iterator30.f();
    }

    this.pluginAPI.initAudio();
  }

  var _proto10 = JsPsych.prototype;

  _proto10.version = function version() {
    return _version;
  }
  /**
   * Starts an experiment using the provided timeline and returns a promise that is resolved when
   * the experiment is finished.
   *
   * @param timeline The timeline to be run
   */
  ;

  _proto10.run = function run(timeline) {
    return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
      return regeneratorRuntime.wrap(function _callee$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              if (typeof timeline === "undefined") {
                console.error("No timeline declared in jsPsych.run. Cannot start experiment.");
              }

              if (timeline.length === 0) {
                console.error("No trials have been added to the timeline (the timeline is an empty array). Cannot start experiment.");
              } // create experiment timeline


              this.timelineDescription = timeline;
              this.timeline = new TimelineNode(this, {
                timeline: timeline
              });
              _context.next = 6;
              return this.prepareDom();

            case 6:
              _context.next = 8;
              return this.checkExclusions(this.opts.exclusions);

            case 8:
              _context.next = 10;
              return this.loadExtensions(this.opts.extensions);

            case 10:
              document.documentElement.setAttribute("jspsych", "present");
              this.startExperiment();
              _context.next = 14;
              return this.finished;

            case 14:
            case "end":
              return _context.stop();
          }
        }
      }, _callee, this);
    }));
  };

  _proto10.simulate = function simulate(timeline) {
    var simulation_mode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : "data-only";
    var simulation_options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
    return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {
      return regeneratorRuntime.wrap(function _callee2$(_context2) {
        while (1) {
          switch (_context2.prev = _context2.next) {
            case 0:
              this.simulation_mode = simulation_mode;
              this.simulation_options = simulation_options;
              _context2.next = 4;
              return this.run(timeline);

            case 4:
            case "end":
              return _context2.stop();
          }
        }
      }, _callee2, this);
    }));
  };

  _proto10.getProgress = function getProgress() {
    return {
      total_trials: typeof this.timeline === "undefined" ? undefined : this.timeline.length(),
      current_trial_global: this.global_trial_index,
      percent_complete: typeof this.timeline === "undefined" ? 0 : this.timeline.percentComplete()
    };
  };

  _proto10.getStartTime = function getStartTime() {
    return this.exp_start_time;
  };

  _proto10.getTotalTime = function getTotalTime() {
    if (typeof this.exp_start_time === "undefined") {
      return 0;
    }

    return new Date().getTime() - this.exp_start_time.getTime();
  };

  _proto10.getDisplayElement = function getDisplayElement() {
    return this.DOM_target;
  };

  _proto10.getDisplayContainerElement = function getDisplayContainerElement() {
    return this.DOM_container;
  };

  _proto10.finishTrial = function finishTrial() {
    var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};

    if (this.current_trial_finished) {
      return;
    }

    this.current_trial_finished = true; // remove any CSS classes that were added to the DOM via css_classes parameter

    if (typeof this.current_trial.css_classes !== "undefined" && Array.isArray(this.current_trial.css_classes)) {
      var _this$DOM_target$clas;

      (_this$DOM_target$clas = this.DOM_target.classList).remove.apply(_this$DOM_target$clas, _toConsumableArray(this.current_trial.css_classes));
    } // write the data from the trial


    this.data.write(data); // get back the data with all of the defaults in

    var trial_data = this.data.get().filter({
      trial_index: this.global_trial_index
    }); // for trial-level callbacks, we just want to pass in a reference to the values
    // of the DataCollection, for easy access and editing.

    var trial_data_values = trial_data.values()[0];
    var current_trial = this.current_trial;

    if (_typeof(current_trial.save_trial_parameters) === "object") {
      for (var _i14 = 0, _Object$keys4 = Object.keys(current_trial.save_trial_parameters); _i14 < _Object$keys4.length; _i14++) {
        var key = _Object$keys4[_i14];
        var key_val = current_trial.save_trial_parameters[key];

        if (key_val === true) {
          if (typeof current_trial[key] === "undefined") {
            console.warn("Invalid parameter specified in save_trial_parameters. Trial has no property called \"".concat(key, "\"."));
          } else if (typeof current_trial[key] === "function") {
            trial_data_values[key] = current_trial[key].toString();
          } else {
            trial_data_values[key] = current_trial[key];
          }
        }

        if (key_val === false) {
          // we don't allow internal_node_id or trial_index to be deleted because it would break other things
          if (key !== "internal_node_id" && key !== "trial_index") {
            delete trial_data_values[key];
          }
        }
      }
    } // handle extension callbacks


    if (Array.isArray(current_trial.extensions)) {
      var _iterator31 = _createForOfIteratorHelper(current_trial.extensions),
          _step31;

      try {
        for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {
          var extension = _step31.value;
          var ext_data_values = this.extensions[extension.type.info.name].on_finish(extension.params);
          Object.assign(trial_data_values, ext_data_values);
        }
      } catch (err) {
        _iterator31.e(err);
      } finally {
        _iterator31.f();
      }
    } // about to execute lots of callbacks, so switch context.


    this.internal.call_immediate = true; // handle callback at plugin level

    if (typeof current_trial.on_finish === "function") {
      current_trial.on_finish(trial_data_values);
    } // handle callback at whole-experiment level


    this.opts.on_trial_finish(trial_data_values); // after the above callbacks are complete, then the data should be finalized
    // for this trial. call the on_data_update handler, passing in the same
    // data object that just went through the trial's finish handlers.

    this.opts.on_data_update(trial_data_values); // done with callbacks

    this.internal.call_immediate = false; // wait for iti

    if (typeof current_trial.post_trial_gap === null || typeof current_trial.post_trial_gap === "undefined") {
      if (this.opts.default_iti > 0) {
        setTimeout(this.nextTrial, this.opts.default_iti);
      } else {
        this.nextTrial();
      }
    } else {
      if (current_trial.post_trial_gap > 0) {
        setTimeout(this.nextTrial, current_trial.post_trial_gap);
      } else {
        this.nextTrial();
      }
    }
  };

  _proto10.endExperiment = function endExperiment() {
    var end_message = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : "";
    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
    this.timeline.end_message = end_message;
    this.timeline.end();
    this.pluginAPI.cancelAllKeyboardResponses();
    this.pluginAPI.clearAllTimeouts();
    this.finishTrial(data);
  };

  _proto10.endCurrentTimeline = function endCurrentTimeline() {
    this.timeline.endActiveNode();
  };

  _proto10.getCurrentTrial = function getCurrentTrial() {
    return this.current_trial;
  };

  _proto10.getInitSettings = function getInitSettings() {
    return this.opts;
  };

  _proto10.getCurrentTimelineNodeID = function getCurrentTimelineNodeID() {
    return this.timeline.activeID();
  };

  _proto10.timelineVariable = function timelineVariable(varname) {
    var _this10 = this;

    var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

    if (this.internal.call_immediate || immediate === true) {
      return this.timeline.timelineVariable(varname);
    } else {
      return {
        timelineVariablePlaceholder: true,
        timelineVariableFunction: function timelineVariableFunction() {
          return _this10.timeline.timelineVariable(varname);
        }
      };
    }
  };

  _proto10.getAllTimelineVariables = function getAllTimelineVariables() {
    return this.timeline.allTimelineVariables();
  };

  _proto10.addNodeToEndOfTimeline = function addNodeToEndOfTimeline(new_timeline, preload_callback) {
    this.timeline.insert(new_timeline);
  };

  _proto10.pauseExperiment = function pauseExperiment() {
    this.paused = true;
  };

  _proto10.resumeExperiment = function resumeExperiment() {
    this.paused = false;

    if (this.waiting) {
      this.waiting = false;
      this.nextTrial();
    }
  };

  _proto10.loadFail = function loadFail(message) {
    message = message || "<p>The experiment failed to load.</p>";
    this.DOM_target.innerHTML = message;
  };

  _proto10.getSafeModeStatus = function getSafeModeStatus() {
    return this.file_protocol;
  };

  _proto10.getTimeline = function getTimeline() {
    return this.timelineDescription;
  };

  _proto10.prepareDom = function prepareDom() {
    return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {
      var options, body, display;
      return regeneratorRuntime.wrap(function _callee3$(_context3) {
        while (1) {
          switch (_context3.prev = _context3.next) {
            case 0:
              if (!(document.readyState !== "complete")) {
                _context3.next = 3;
                break;
              }

              _context3.next = 3;
              return new Promise(function (resolve) {
                window.addEventListener("load", resolve);
              });

            case 3:
              options = this.opts; // set DOM element where jsPsych will render content
              // if undefined, then jsPsych will use the <body> tag and the entire page

              if (typeof options.display_element === "undefined") {
                // check if there is a body element on the page
                body = document.querySelector("body");

                if (body === null) {
                  document.documentElement.appendChild(document.createElement("body"));
                } // using the full page, so we need the HTML element to
                // have 100% height, and body to be full width and height with
                // no margin


                document.querySelector("html").style.height = "100%";
                document.querySelector("body").style.margin = "0px";
                document.querySelector("body").style.height = "100%";
                document.querySelector("body").style.width = "100%";
                options.display_element = document.querySelector("body");
              } else {
                // make sure that the display element exists on the page
                display = options.display_element instanceof Element ? options.display_element : document.querySelector("#" + options.display_element);

                if (display === null) {
                  console.error("The display_element specified in initJsPsych() does not exist in the DOM.");
                } else {
                  options.display_element = display;
                }
              }

              options.display_element.innerHTML = '<div class="jspsych-content-wrapper"><div id="jspsych-content"></div></div>';
              this.DOM_container = options.display_element;
              this.DOM_target = document.querySelector("#jspsych-content"); // set experiment_width if not null

              if (options.experiment_width !== null) {
                this.DOM_target.style.width = options.experiment_width + "px";
              } // add tabIndex attribute to scope event listeners


              options.display_element.tabIndex = 0; // add CSS class to DOM_target

              if (options.display_element.className.indexOf("jspsych-display-element") === -1) {
                options.display_element.className += " jspsych-display-element";
              }

              this.DOM_target.className += "jspsych-content"; // create listeners for user browser interaction

              this.data.createInteractionListeners(); // add event for closing window

              window.addEventListener("beforeunload", options.on_close);

            case 14:
            case "end":
              return _context3.stop();
          }
        }
      }, _callee3, this);
    }));
  };

  _proto10.loadExtensions = function loadExtensions(extensions) {
    return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee4() {
      var _this11 = this;

      return regeneratorRuntime.wrap(function _callee4$(_context4) {
        while (1) {
          switch (_context4.prev = _context4.next) {
            case 0:
              _context4.prev = 0;
              _context4.next = 3;
              return Promise.all(extensions.map(function (extension) {
                return _this11.extensions[extension.type.info.name].initialize(extension.params || {});
              }));

            case 3:
              _context4.next = 9;
              break;

            case 5:
              _context4.prev = 5;
              _context4.t0 = _context4["catch"](0);
              console.error(_context4.t0);
              throw new Error(_context4.t0);

            case 9:
            case "end":
              return _context4.stop();
          }
        }
      }, _callee4, null, [[0, 5]]);
    }));
  };

  _proto10.startExperiment = function startExperiment() {
    var _this12 = this;

    this.finished = new Promise(function (resolve) {
      _this12.resolveFinishedPromise = resolve;
    }); // show progress bar if requested

    if (this.opts.show_progress_bar === true) {
      this.drawProgressBar(this.opts.message_progress_bar);
    } // record the start time


    this.exp_start_time = new Date(); // begin!

    this.timeline.advance();
    this.doTrial(this.timeline.trial());
  };

  _proto10.finishExperiment = function finishExperiment() {
    var _this13 = this;

    var finish_result = this.opts.on_finish(this.data.get());

    var done_handler = function done_handler() {
      if (typeof _this13.timeline.end_message !== "undefined") {
        _this13.DOM_target.innerHTML = _this13.timeline.end_message;
      }

      _this13.resolveFinishedPromise();
    };

    if (finish_result) {
      Promise.resolve(finish_result).then(done_handler);
    } else {
      done_handler();
    }
  };

  _proto10.nextTrial = function nextTrial() {
    // if experiment is paused, don't do anything.
    if (this.paused) {
      this.waiting = true;
      return;
    }

    this.global_trial_index++; // advance timeline

    this.timeline.markCurrentTrialComplete();
    var complete = this.timeline.advance(); // update progress bar if shown

    if (this.opts.show_progress_bar === true && this.opts.auto_update_progress_bar === true) {
      this.updateProgressBar();
    } // check if experiment is over


    if (complete) {
      this.finishExperiment();
      return;
    }

    this.doTrial(this.timeline.trial());
  };

  _proto10.doTrial = function doTrial(trial) {
    var _this14 = this;

    this.current_trial = trial;
    this.current_trial_finished = false; // process all timeline variables for this trial

    this.evaluateTimelineVariables(trial);

    if (typeof trial.type === "string") {
      throw new MigrationError("A string was provided as the trial's `type` parameter. Since jsPsych v7, the `type` parameter needs to be a plugin object.");
    } // instantiate the plugin for this trial


    trial.type = Object.assign(Object.assign({}, autoBind(new trial.type(this))), {
      info: trial.type.info
    }); // evaluate variables that are functions

    this.evaluateFunctionParameters(trial); // get default values for parameters

    this.setDefaultValues(trial); // about to execute callbacks

    this.internal.call_immediate = true; // call experiment wide callback

    this.opts.on_trial_start(trial); // call trial specific callback if it exists

    if (typeof trial.on_start === "function") {
      trial.on_start(trial);
    } // call any on_start functions for extensions


    if (Array.isArray(trial.extensions)) {
      var _iterator32 = _createForOfIteratorHelper(trial.extensions),
          _step32;

      try {
        for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {
          var extension = _step32.value;
          this.extensions[extension.type.info.name].on_start(extension.params);
        }
      } catch (err) {
        _iterator32.e(err);
      } finally {
        _iterator32.f();
      }
    } // apply the focus to the element containing the experiment.


    this.DOM_container.focus(); // reset the scroll on the DOM target

    this.DOM_target.scrollTop = 0; // add CSS classes to the DOM_target if they exist in trial.css_classes

    if (typeof trial.css_classes !== "undefined") {
      if (!Array.isArray(trial.css_classes) && typeof trial.css_classes === "string") {
        trial.css_classes = [trial.css_classes];
      }

      if (Array.isArray(trial.css_classes)) {
        var _this$DOM_target$clas2;

        (_this$DOM_target$clas2 = this.DOM_target.classList).add.apply(_this$DOM_target$clas2, _toConsumableArray(trial.css_classes));
      }
    } // setup on_load event callback


    var load_callback = function load_callback() {
      if (typeof trial.on_load === "function") {
        trial.on_load();
      } // call any on_load functions for extensions


      if (Array.isArray(trial.extensions)) {
        var _iterator33 = _createForOfIteratorHelper(trial.extensions),
            _step33;

        try {
          for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {
            var _extension = _step33.value;

            _this14.extensions[_extension.type.info.name].on_load(_extension.params);
          }
        } catch (err) {
          _iterator33.e(err);
        } finally {
          _iterator33.f();
        }
      }
    };

    var trial_complete;

    if (!this.simulation_mode) {
      trial_complete = trial.type.trial(this.DOM_target, trial, load_callback);
    }

    if (this.simulation_mode) {
      // check if the trial supports simulation
      if (trial.type.simulate) {
        var trial_sim_opts;

        if (!trial.simulation_options) {
          trial_sim_opts = this.simulation_options.default;
        }

        if (trial.simulation_options) {
          if (typeof trial.simulation_options == "string") {
            if (this.simulation_options[trial.simulation_options]) {
              trial_sim_opts = this.simulation_options[trial.simulation_options];
            } else if (this.simulation_options.default) {
              console.log("No matching simulation options found for \"".concat(trial.simulation_options, "\". Using \"default\" options."));
              trial_sim_opts = this.simulation_options.default;
            } else {
              console.log("No matching simulation options found for \"".concat(trial.simulation_options, "\" and no \"default\" options provided. Using the default values provided by the plugin."));
              trial_sim_opts = {};
            }
          } else {
            trial_sim_opts = trial.simulation_options;
          }
        }

        trial_sim_opts = this.utils.deepCopy(trial_sim_opts);
        trial_sim_opts = this.replaceFunctionsWithValues(trial_sim_opts, null);

        if ((trial_sim_opts === null || trial_sim_opts === void 0 ? void 0 : trial_sim_opts.simulate) === false) {
          trial_complete = trial.type.trial(this.DOM_target, trial, load_callback);
        } else {
          trial_complete = trial.type.simulate(trial, (trial_sim_opts === null || trial_sim_opts === void 0 ? void 0 : trial_sim_opts.mode) || this.simulation_mode, trial_sim_opts, load_callback);
        }
      } else {
        // trial doesn't have a simulate method, so just run as usual
        trial_complete = trial.type.trial(this.DOM_target, trial, load_callback);
      }
    } // see if trial_complete is a Promise by looking for .then() function


    var is_promise = trial_complete && typeof trial_complete.then == "function"; // in simulation mode we let the simulate function call the load_callback always.

    if (!is_promise && !this.simulation_mode) {
      load_callback();
    } // done with callbacks


    this.internal.call_immediate = false;
  };

  _proto10.evaluateTimelineVariables = function evaluateTimelineVariables(trial) {
    for (var _i15 = 0, _Object$keys5 = Object.keys(trial); _i15 < _Object$keys5.length; _i15++) {
      var key = _Object$keys5[_i15];

      // timeline variables on the root level
      if (_typeof(trial[key]) === "object" && trial[key] !== null && typeof trial[key].timelineVariablePlaceholder !== "undefined") {
        /*trial[key].toString().replace(/\s/g, "") ==
          "function(){returntimeline.timelineVariable(varname);}"
        )*/
        trial[key] = trial[key].timelineVariableFunction();
      } // timeline variables that are nested in objects


      if (_typeof(trial[key]) === "object" && trial[key] !== null) {
        this.evaluateTimelineVariables(trial[key]);
      }
    }
  };

  _proto10.evaluateFunctionParameters = function evaluateFunctionParameters(trial) {
    // set a flag so that jsPsych.timelineVariable() is immediately executed in this context
    this.internal.call_immediate = true; // iterate over each parameter

    for (var _i16 = 0, _Object$keys6 = Object.keys(trial); _i16 < _Object$keys6.length; _i16++) {
      var key = _Object$keys6[_i16];

      // check to make sure parameter is not "type", since that was eval'd above.
      if (key !== "type") {
        // this if statement is checking to see if the parameter type is expected to be a function, in which case we should NOT evaluate it.
        // the first line checks if the parameter is defined in the universalPluginParameters set
        // the second line checks the plugin-specific parameters
        if (typeof universalPluginParameters[key] !== "undefined" && universalPluginParameters[key].type !== ParameterType.FUNCTION) {
          trial[key] = this.replaceFunctionsWithValues(trial[key], null);
        }

        if (typeof trial.type.info.parameters[key] !== "undefined" && trial.type.info.parameters[key].type !== ParameterType.FUNCTION) {
          trial[key] = this.replaceFunctionsWithValues(trial[key], trial.type.info.parameters[key]);
        }
      }
    } // reset so jsPsych.timelineVariable() is no longer immediately executed


    this.internal.call_immediate = false;
  };

  _proto10.replaceFunctionsWithValues = function replaceFunctionsWithValues(obj, info) {
    // null typeof is 'object' (?!?!), so need to run this first!
    if (obj === null) {
      return obj;
    } // arrays
    else if (Array.isArray(obj)) {
      for (var i = 0; i < obj.length; i++) {
        obj[i] = this.replaceFunctionsWithValues(obj[i], info);
      }
    } // objects
    else if (_typeof(obj) === "object") {
      if (info === null || !info.nested) {
        for (var _i17 = 0, _Object$keys7 = Object.keys(obj); _i17 < _Object$keys7.length; _i17++) {
          var key = _Object$keys7[_i17];

          if (key === "type") {
            // Ignore the object's `type` field because it contains a plugin and we do not want to
            // call plugin functions
            continue;
          }

          obj[key] = this.replaceFunctionsWithValues(obj[key], null);
        }
      } else {
        for (var _i18 = 0, _Object$keys8 = Object.keys(obj); _i18 < _Object$keys8.length; _i18++) {
          var _key = _Object$keys8[_i18];

          if (_typeof(info.nested[_key]) === "object" && info.nested[_key].type !== ParameterType.FUNCTION) {
            obj[_key] = this.replaceFunctionsWithValues(obj[_key], info.nested[_key]);
          }
        }
      }
    } else if (typeof obj === "function") {
      return obj();
    }

    return obj;
  };

  _proto10.setDefaultValues = function setDefaultValues(trial) {
    var _loop2 = function _loop2(param) {
      // check if parameter is complex with nested defaults
      if (trial.type.info.parameters[param].type === ParameterType.COMPLEX) {
        if (trial.type.info.parameters[param].array === true) {
          // iterate over each entry in the array
          trial[param].forEach(function (ip, i) {
            // check each parameter in the plugin description
            for (var p in trial.type.info.parameters[param].nested) {
              if (typeof trial[param][i][p] === "undefined" || trial[param][i][p] === null) {
                if (typeof trial.type.info.parameters[param].nested[p].default === "undefined") {
                  console.error("You must specify a value for the " + p + " parameter (nested in the " + param + " parameter) in the " + trial.type + " plugin.");
                } else {
                  trial[param][i][p] = trial.type.info.parameters[param].nested[p].default;
                }
              }
            }
          });
        }
      } // if it's not nested, checking is much easier and do that here:
      else if (typeof trial[param] === "undefined" || trial[param] === null) {
        if (typeof trial.type.info.parameters[param].default === "undefined") {
          console.error("You must specify a value for the " + param + " parameter in the " + trial.type.info.name + " plugin.");
        } else {
          trial[param] = trial.type.info.parameters[param].default;
        }
      }
    };

    for (var param in trial.type.info.parameters) {
      _loop2(param);
    }
  };

  _proto10.checkExclusions = function checkExclusions(exclusions) {
    return __awaiter(this, void 0, void 0, /*#__PURE__*/regeneratorRuntime.mark(function _callee5() {
      var mw, mh;
      return regeneratorRuntime.wrap(function _callee5$(_context5) {
        while (1) {
          switch (_context5.prev = _context5.next) {
            case 0:
              if (exclusions.min_width || exclusions.min_height || exclusions.audio) {
                console.warn("The exclusions option in `initJsPsych()` is deprecated and will be removed in a future version. We recommend using the browser-check plugin instead. See https://www.jspsych.org/latest/plugins/browser-check/.");
              } // MINIMUM SIZE


              if (!(exclusions.min_width || exclusions.min_height)) {
                _context5.next = 12;
                break;
              }

              mw = exclusions.min_width || 0;
              mh = exclusions.min_height || 0;

              if (!(window.innerWidth < mw || window.innerHeight < mh)) {
                _context5.next = 12;
                break;
              }

              this.getDisplayElement().innerHTML = "<p>Your browser window is too small to complete this experiment. " + "Please maximize the size of your browser window. If your browser window is already maximized, " + "you will not be able to complete this experiment.</p>" + "<p>The minimum width is " + mw + "px. Your current width is " + window.innerWidth + "px.</p>" + "<p>The minimum height is " + mh + "px. Your current height is " + window.innerHeight + "px.</p>"; // Wait for window size to increase

            case 6:
              if (!(window.innerWidth < mw || window.innerHeight < mh)) {
                _context5.next = 11;
                break;
              }

              _context5.next = 9;
              return delay(100);

            case 9:
              _context5.next = 6;
              break;

            case 11:
              this.getDisplayElement().innerHTML = "";

            case 12:
              if (!(typeof exclusions.audio !== "undefined" && exclusions.audio)) {
                _context5.next = 16;
                break;
              }

              if (!(!window.hasOwnProperty("AudioContext") && !window.hasOwnProperty("webkitAudioContext"))) {
                _context5.next = 16;
                break;
              }

              this.getDisplayElement().innerHTML = "<p>Your browser does not support the WebAudio API, which means that you will not " + "be able to complete the experiment.</p><p>Browsers that support the WebAudio API include " + "Chrome, Firefox, Safari, and Edge.</p>";
              throw new Error();

            case 16:
            case "end":
              return _context5.stop();
          }
        }
      }, _callee5, this);
    }));
  };

  _proto10.drawProgressBar = function drawProgressBar(msg) {
    document.querySelector(".jspsych-display-element").insertAdjacentHTML("afterbegin", '<div id="jspsych-progressbar-container">' + "<span>" + msg + "</span>" + '<div id="jspsych-progressbar-outer">' + '<div id="jspsych-progressbar-inner"></div>' + "</div></div>");
  };

  _proto10.updateProgressBar = function updateProgressBar() {
    this.setProgressBar(this.getProgress().percent_complete / 100);
  };

  _proto10.setProgressBar = function setProgressBar(proportion_complete) {
    proportion_complete = Math.max(Math.min(1, proportion_complete), 0);
    document.querySelector("#jspsych-progressbar-inner").style.width = proportion_complete * 100 + "%";
    this.progress_bar_amount = proportion_complete;
  };

  _proto10.getProgressBarCompleted = function getProgressBarCompleted() {
    return this.progress_bar_amount;
  };

  return JsPsych;
}(); // temporary patch for Safari


if (typeof window !== "undefined" && window.hasOwnProperty("webkitAudioContext") && !window.hasOwnProperty("AudioContext")) {
  // @ts-expect-error
  window.AudioContext = webkitAudioContext;
} // end patch
// The following function provides a uniform interface to initialize jsPsych, no matter whether a
// browser supports ES6 classes or not (and whether the ES6 build or the Babel build is used).

/**
 * Creates a new JsPsych instance using the provided options.
 *
 * @param options The options to pass to the JsPsych constructor
 * @returns A new JsPsych instance
 */


function initJsPsych(options) {
  var jsPsych = new JsPsych(options); // Handle invocations of non-existent v6 methods with migration errors

  var migrationMessages = {
    init: "`jsPsych.init()` was replaced by `initJsPsych()` in jsPsych v7.",
    ALL_KEYS: 'jsPsych.ALL_KEYS was replaced by the "ALL_KEYS" string in jsPsych v7.',
    NO_KEYS: 'jsPsych.NO_KEYS was replaced by the "NO_KEYS" string in jsPsych v7.',
    // Getter functions that were renamed
    currentTimelineNodeID: "`currentTimelineNodeID()` was renamed to `getCurrentTimelineNodeID()` in jsPsych v7.",
    progress: "`progress()` was renamed to `getProgress()` in jsPsych v7.",
    startTime: "`startTime()` was renamed to `getStartTime()` in jsPsych v7.",
    totalTime: "`totalTime()` was renamed to `getTotalTime()` in jsPsych v7.",
    currentTrial: "`currentTrial()` was renamed to `getCurrentTrial()` in jsPsych v7.",
    initSettings: "`initSettings()` was renamed to `getInitSettings()` in jsPsych v7.",
    allTimelineVariables: "`allTimelineVariables()` was renamed to `getAllTimelineVariables()` in jsPsych v7."
  };
  Object.defineProperties(jsPsych, Object.fromEntries(Object.entries(migrationMessages).map(function (_ref7) {
    var _ref8 = _slicedToArray(_ref7, 2),
        key = _ref8[0],
        message = _ref8[1];

    return [key, {
      get: function get() {
        throw new MigrationError(message);
      }
    }];
  })));
  return jsPsych;
}



/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	!function() {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = function(module) {
/******/ 			var getter = module && module.__esModule ?
/******/ 				function() { return module['default']; } :
/******/ 				function() { return module; };
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	!function() {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
!function() {
"use strict";
/*!**********************************************************************************!*\
  !*** ../../../../AppData/Roaming/npm/node_modules/jspsych-builder/assets/app.js ***!
  \**********************************************************************************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var core_js_stable_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! core-js/stable/index.js */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/core-js/stable/index.js");
/* harmony import */ var regenerator_runtime_runtime_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! regenerator-runtime/runtime.js */ "../../../../AppData/Roaming/npm/node_modules/jspsych-builder/node_modules/regenerator-runtime/runtime.js");
/* harmony import */ var JsPsychBuilderCurrentExperiment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! JsPsychBuilderCurrentExperiment */ "./src/experiment.js");


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }

function _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err); } _next(undefined); }); }; }



 // webpack alias for the main experiment file

var _JSPSYCH_BUILDER_CONF = {"assetPaths":{"images":[],"audio":[],"video":[],"misc":[]}},
    assetPaths = _JSPSYCH_BUILDER_CONF.assetPaths; // Injected by webpack

if (typeof jatos === "undefined") {
  // Experiment is run locally
  (0,JsPsychBuilderCurrentExperiment__WEBPACK_IMPORTED_MODULE_2__.run)({
    environment:  false ? 0 : "development",
    assetPaths: assetPaths
  }).then(function (jsPsych) {
    if (jsPsych) {
      jsPsych.data.displayData();
    }
  });
} else {
  // Experiment is served by JATOS
  jatos.onLoad( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {
    var jsPsych;
    return regeneratorRuntime.wrap(function _callee$(_context) {
      while (1) {
        switch (_context.prev = _context.next) {
          case 0:
            _context.next = 2;
            return (0,JsPsychBuilderCurrentExperiment__WEBPACK_IMPORTED_MODULE_2__.run)({
              input: jatos.studyJsonInput,
              environment: "jatos",
              assetPaths: assetPaths
            });

          case 2:
            jsPsych = _context.sent;

            if (jsPsych) {
              jatos.submitResultData(jsPsych.data.get().json(), jatos.startNextComponent);
            }

          case 4:
          case "end":
            return _context.stop();
        }
      }
    }, _callee);
  })));
}
}();
/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,